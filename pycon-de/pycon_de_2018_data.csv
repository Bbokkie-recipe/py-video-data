index,title,url,video_id,uploader,uploader_id,uploader_url,upload_date,duration,view_count,like_count,comment_count,tags,categories,description,thumbnail,age_limit,is_live,was_live,availability,webpage_url,original_url
1,PyCon.DE 2018: Keynote - Peter Weibel,https://www.youtube.com/watch?v=Xpg2Zc9L_4I,Xpg2Zc9L_4I,PyCon DE,@PyConDE,https://www.youtube.com/@PyConDE,20181105,2482,770,1,,,Education,,https://i.ytimg.com/vi_webp/Xpg2Zc9L_4I/maxresdefault.webp,0,False,False,public,https://www.youtube.com/watch?v=Xpg2Zc9L_4I,https://www.youtube.com/watch?v=Xpg2Zc9L_4I
2,PyCon.DE 2018: Keynote - Wes McKinney,https://www.youtube.com/watch?v=uETG3bn4kow,uETG3bn4kow,PyCon DE,@PyConDE,https://www.youtube.com/@PyConDE,20181105,3236,1435,24,2.0,,Education,,https://i.ytimg.com/vi_webp/uETG3bn4kow/maxresdefault.webp,0,False,False,public,https://www.youtube.com/watch?v=uETG3bn4kow,https://www.youtube.com/watch?v=uETG3bn4kow
3,PyCon.DE 2018: Keynote - Emmanuelle Gouillart,https://www.youtube.com/watch?v=P5kQXwmAYSY,P5kQXwmAYSY,PyCon DE,@PyConDE,https://www.youtube.com/@PyConDE,20181105,3538,248,2,,,Education,,https://i.ytimg.com/vi_webp/P5kQXwmAYSY/maxresdefault.webp,0,False,False,public,https://www.youtube.com/watch?v=P5kQXwmAYSY,https://www.youtube.com/watch?v=P5kQXwmAYSY
4,PyCon.DE 2018: Deep Learning With PyTorch For More Fun And Profit (Part II) - Alexander CS Hendorf,https://www.youtube.com/watch?v=yB1rUfPILFY,yB1rUfPILFY,PyCon DE,@PyConDE,https://www.youtube.com/@PyConDE,20181105,2671,364,3,,"PyTorch,Deep Learning,AI in production,Style Transfer,Tacotron2,NLP",Education,"There are all these great blog posts about Deep Learning describing all that awesome stuff. - Is it all that easy? Let's check! This is part 2 of on ongoing series of adventures in Deep Learning for fun, research and business.

Alexander' professional career was always about digitalisation: starting from vinyl records in the nineties to to advanced data analytics nowadays. He's program chair of Europe's main Python conference EuroPython, one of the 25 mongoDB masters, organiser of PyConDE and a regular contributor to the tech community. He has spoken at many international conferences in Silicon Valley, New York, London, Florence or Paris. He's a partner at Königsweg (http://koenigsweg.com) consultancy for digitalisation, high-tech and data science where he consults enterprises on data matters and trains individuals in Python and AI.
 
This talk covers style transfer (making a picture look like painting), speech generation (like Siri or Alexa) and text generation (writing a story). In this talk describes the whole journey: A fun ride from the idea to the very end including all the struggles, failures and successes. 

Steps covered:

- The data challenge: get the data ready
- Have it run on your Mac with PyTorch and an eGPU
- Creating a character-level language models with an Recurrent Neural Network
- Creating a text generator
- Creating artwork
- Data challenges and solutions in the non English NLP space

Slides: http://bit.ly/deep-learning-fun-profit-pyconde18

Alexander on 
Twitter: https://twitter.com/hendorf
Linked In: https://www.linkedin.com/in/hendorf/",https://i.ytimg.com/vi_webp/yB1rUfPILFY/maxresdefault.webp,0,False,False,public,https://www.youtube.com/watch?v=yB1rUfPILFY,https://www.youtube.com/watch?v=yB1rUfPILFY
5,PyCon.DE 2018: 3D Graphics in Python with Ratcave and Pyglet - Nicholas A. Del Grosso,https://www.youtube.com/watch?v=Sl2SZEFWh_E,Sl2SZEFWh_E,PyCon DE,@PyConDE,https://www.youtube.com/@PyConDE,20181105,2508,4359,80,3.0,,Education,"Python has some great graphics packages! in this talk, I'll introduce the fundamentals of 3D graphics and demonstrate how to load 3D models, created in Blender3D, into an OpenGL window using Pyglet and the Ratcave extension.",https://i.ytimg.com/vi_webp/Sl2SZEFWh_E/maxresdefault.webp,0,False,False,public,https://www.youtube.com/watch?v=Sl2SZEFWh_E,https://www.youtube.com/watch?v=Sl2SZEFWh_E
6,PyCon.DE 2018: Build Text Classification Models With FastText In Python - Kajal Puri,https://www.youtube.com/watch?v=Za_0tVI1YSQ,Za_0tVI1YSQ,PyCon DE,@PyConDE,https://www.youtube.com/@PyConDE,20181105,2576,4216,28,3.0,,Education,"FastText has been open-sourced by Facebook in 2016 and with its release, it became the fastest and most accurate library in Python for text classification and word representation. It is to be seen as a substitute for gensim package's word2vec. It includes the implementation of two extremely important methodologies in NLP i.e Continuous Bag of Words and Skip-gram model. Fasttext performs exceptionally well with supervised as well as unsupervised learning.

The tutorial will be divided in following four segments :

0-10 minutes: The talk will begin with explaining the difference between word embeddings generated by word2vec, Glove, Fasttext and how FastText beats all the other libraries with better accuracy and in lesser time.

10-25 minutes: The code will be shown and explained line by line for both the models (CBOW and Skip-gram) on a standard textual labeled dataset with the tips on hyper-parametric tuning to get the best possible results.

25-40 minutes: How to use the pre-trained word embeddings released by FastText on various languages and where to use them. Various use cases of what kind of problems can be solved using FastText in python.

40-45 minutes: For QA session.",https://i.ytimg.com/vi_webp/Za_0tVI1YSQ/maxresdefault.webp,0,False,False,public,https://www.youtube.com/watch?v=Za_0tVI1YSQ,https://www.youtube.com/watch?v=Za_0tVI1YSQ
7,PyCon.DE 2018: Suggestions From Python And Solr - Jonathan Oberländer and Patrick Schemitz,https://www.youtube.com/watch?v=Z17JLncewyo,Z17JLncewyo,PyCon DE,@PyConDE,https://www.youtube.com/@PyConDE,20181105,1816,556,11,1.0,,Education,"When a user types a query into the search box of our price comparison website, we try to figure out what they search, and provide suggestions as they type along. What product, what brand, from which categories? Solr provides a SuggestComponent that is a good start, but in a lot of situations we need fallback strategies: what should we show to a user searching for just a brand name? Or for a singular offer we can't actually show them? What alternatives can we dig up? And behind all this backfill logic lurks that dreaded question: what amount of irrelevant garbage is worse than the horror vacui of an empty result set?",https://i.ytimg.com/vi_webp/Z17JLncewyo/maxresdefault.webp,0,False,False,public,https://www.youtube.com/watch?v=Z17JLncewyo,https://www.youtube.com/watch?v=Z17JLncewyo
8,PyCon.DE 2018: Insights Into Modern Remote Sensing Research - Felix M. Riese and Jens Leitloff,https://www.youtube.com/watch?v=tKRoMcBeWjQ,tKRoMcBeWjQ,PyCon DE,@PyConDE,https://www.youtube.com/@PyConDE,20181105,1734,2482,52,4.0,,Education,"The largest earth observation programme Copernicus (http://copernicus.eu) makes it possible to perform terrestrial observations providing data for all kinds of purposes. One important objective is to monitor the land-use and land-cover changes with the Sentinel-2 satellite mission. These satellites measure the sun reflectance on the earth surface with multispectral cameras (13 channels between 440 nm to 2190 nm). Machine learning techniques like convolutional neural networks (CNN) are able to learn the link between the satellite image (spectrum) and the ground truth (land use class). In this talk, we give an overview about the state-of-the-art land-use classification with CNNs based on an open dataset.

The EuroSAT benchmark dataset (http://madm.dfki.de/downloads) is freely provided by German Research Center for Artificial Intelligence (DFKI). It consists of 27.000 image patches for ten different land use/cover classes, e.g. industrial and residential areas, different crop and vegetation types and forests. All samples have 64 by 64 pixel dimension and include either only the RGB images or all 13 bands.

We will use different out-of-box CNNs for the Keras deep learning library (https://keras.io/). All networks are either included in Keras itself or are available from Github repositories. We will show the process of transfer learning for the RGB datasets. Furthermore, the minimal changes required to apply commonly used CNNs to multispectral data are demonstrated. Thus, the interested audience will be able to perform their own classification of remote sensing data within a very short time. Results of different network structures are visually compared. Especially the differences of transfer learning and learning from scratch are demonstrated. This also includes the amount of necessary training epochs, progress of training and validation error and visual comparison of the results of the trained networks.

Finally, we give a quick overview about the current research topics including recurrent neural networks for spatio-temporal land-use classification and further applications of multi- and hyperspectral data, e.g. for the estimation of water parameters and soil characteristics. Additionally, we provide links to the code and dataset used in this talk.",https://i.ytimg.com/vi_webp/tKRoMcBeWjQ/maxresdefault.webp,0,False,False,public,https://www.youtube.com/watch?v=tKRoMcBeWjQ,https://www.youtube.com/watch?v=tKRoMcBeWjQ
9,PyCon.DE 2018: Combining PyTorch And TensorFlow For Deep Learning - Marcel Kurovski,https://www.youtube.com/watch?v=vO3LB_-dQOM,vO3LB_-dQOM,PyCon DE,@PyConDE,https://www.youtube.com/@PyConDE,20181105,2339,930,11,,,Education,"Despite the many deep learning frameworks out in the wild few have achieved widespread adoption. Two of them are TensorFlow and PyTorch. Where PyTorch relies on a dynamic computation graph TensorFlow goes for a static graph. Where TensorFlow shows greater adoption and additional useful extensions with TensorFlow Serving and TensorBoard, Pytorch proves useful trough its easy and more pythonic API.

Data scientists are confronted with explorative challenges, but also need to be aware of model deployment and production. Do we need to single out frameworks until we end up with the only one or is there a case for joint usage of two deep learning frameworks? Can we leverage the strengths of the frameworks for different tasks along the path from exploration to production?

In my talk, I want to present a case combining the benefits of PyTorch and TensorFlow using the first for explorative and latter for deployment tasks. Therefore, I will choose a common deep learning challenge and discuss the strengths and weaknesses of both frameworks along a demo that brings a model from development into production.",https://i.ytimg.com/vi_webp/vO3LB_-dQOM/maxresdefault.webp,0,False,False,public,https://www.youtube.com/watch?v=vO3LB_-dQOM,https://www.youtube.com/watch?v=vO3LB_-dQOM
10,"PyCon.DE 2018: Concurrency In Python Concepts, Frameworks And Best Practices - Stefan Schwarzer",https://www.youtube.com/watch?v=Do7JtnPh1Mg,Do7JtnPh1Mg,PyCon DE,@PyConDE,https://www.youtube.com/@PyConDE,20181105,2661,1679,17,1.0,,Education,"Have you run in situations where concurrent execution could speed up your Python code? Are you using a GUI toolkit?

This talk gives you the background to use concurrency in your code without shooting yourself in the foot - which is quite easy if you don't understand how concurrent execution differs from linear execution!

The presentation starts with explaining some concepts like concurrency, parallelism, resources, atomic operations, race conditions and deadlocks.

Then we discuss the commonly-used approaches to concurrency: multithreading with the threading module, multiprocessing with the multiprocessing module, and event loops (which include the asyncio framework). Each of these approaches has its typical use cases, which are explained.

You can implement concurrency on a number of abstraction levels. The lowest level consists of primitives like locks, events, semaphores and so on. A higher abstraction level is using queues, typically with worker threads or processes. Even higher abstraction levels are active objects (hiding primitives or queues behind an API; this includes ""actors"" if you heard of them), the thread and process pools in concurrent.futures and the asyncio framework. Finally, you can ""outsource"" concurrency by leaving it to a message broker, which is a distinct process that receives and distributes messages.

The talk closes with some tips and best practices, mainly:

Don't use concurrency if you don't have to.

Keep it simple. ""Simple"" usually doesn't mean using primitives like locks, but rather using higher abstractions if you can.

Operations that look atomic may not be atomic. For example, if descriptors are used, an ""attribute access"" may do arbitrarily complex things. If there's any doubt, assume an operation is not atomic.

Try to hide concurrency behind an API. In particular, serialize accesses to a resource by using a single thread or process (if you use threads and processes) for this resource.

Defects in concurrent code are often difficult to expose. If your code seems to work, it doesn't mean it will work on a different computer, on a complex network, under high load etc. Think about what you're doing and what could go wrong. (Of course, this applies to coding in general, but even more so to concurrent code.)",https://i.ytimg.com/vi_webp/Do7JtnPh1Mg/maxresdefault.webp,0,False,False,public,https://www.youtube.com/watch?v=Do7JtnPh1Mg,https://www.youtube.com/watch?v=Do7JtnPh1Mg
11,PyCon.DE 2018: Strongly Typed Datasets In A Weakly Typed World - Marco Neumann,https://www.youtube.com/watch?v=wtpQTWROPc0,wtpQTWROPc0,PyCon DE,@PyConDE,https://www.youtube.com/@PyConDE,20181105,1239,162,1,,,Education,"We at Blue Yonder use Pandas quite a lot during our daily data science and engineering work. This choice, together with Python as an underlying programming language gives us flexibility, a feature-rich interface, and access to a large community and ecosystem. When it comes to preserving the data and exchanging it with different software stacks, we rely on Parquet Datasets / Hive Tables. During the write process, there is a shift from a rather weakly typed world to a strongly typed one. For example, Pandas may convert integers to floats for many operations without asking, but parquet files and the schema information stored alongside them dictate very precise types. The type situation may get even more ""colorful"", when datasets are written by multiple code versions or different software solutions over time. This then results in important questions regarding type compatibility.

This talk will first represent an overview on types at different layers (like NumPy, Pandas, Arrow and Parquet) and the transition between this layers. The second part of the talk will present examples of type compatibility we have seen and why+how we think they should be handled. At the end there will be a Q+A, which can be seen as the start of a potentially longer RFC process to align different software stacks (like Hive and Dask) to handle types in a similar way.",https://i.ytimg.com/vi_webp/wtpQTWROPc0/maxresdefault.webp,0,False,False,public,https://www.youtube.com/watch?v=wtpQTWROPc0,https://www.youtube.com/watch?v=wtpQTWROPc0
12,PyCon.DE 2018: Prototyping To Tested Code - Christopher Prohm,https://www.youtube.com/watch?v=8fg7AkvG-Oc,8fg7AkvG-Oc,PyCon DE,@PyConDE,https://www.youtube.com/@PyConDE,20181105,1656,430,7,,,Education,"Jupyter notebooks are a great environment to prototype solutions and explore their design. Turning these solutions into reusable components usually requires moving them out of the notebook environment into external python packages. Often, at this stage, the code is refactored and test are written.

In this talk, I will demo ipytest, a small tool to run tests inside notebooks. It supports pytest as well as the standard unittest framework. It allows to start prototypes in a notebook and to develop the tests with the code in an highly interactive environment. As the code grows, it can be transparently moved outside notebooks and transformed into reusable components. By bringing support for tests to the notebook environment, ipytest bridges the artificial gap between notebooks and reusable components.",https://i.ytimg.com/vi_webp/8fg7AkvG-Oc/maxresdefault.webp,0,False,False,public,https://www.youtube.com/watch?v=8fg7AkvG-Oc,https://www.youtube.com/watch?v=8fg7AkvG-Oc
13,PyCon.DE 2018: Cython to speed up your Python code - Stefan Behnel,https://www.youtube.com/watch?v=zx0wMxuh-wk,zx0wMxuh-wk,PyCon DE,@PyConDE,https://www.youtube.com/@PyConDE,20181105,2857,1106,15,,,Education,"Cython is not only a very fast and comfortable way to talk to native code and libraries, it is also a widely used tool for speeding up Python code. The Cython compiler translates Python code to C or C++ code, and applies many static optimisations that make Python code run visibly faster than in the interpreter. But even better, it supports static type annotations that allow direct use of C/C++ data types and functions, which the compiler uses to convert and optimise the code into fast, native C. The tight integration of all three languages, Python, C and C++, makes it possible to freely mix Python features like generators and comprehensions with C/C++ features like native data types, pointer arithmetic or manually tuned memory management in the same code.

This talk by a core developer introduces the Cython compiler by interactive code examples, and shows how you can use it to speed up your real-world Python code. You will learn how you can profile a Python module and use Cython to compile and optimise it into a fast binary extension module. All of that, without losing the ability to run it through common development tools like code checkers or coverage test tools.",https://i.ytimg.com/vi/zx0wMxuh-wk/maxresdefault.jpg,0,False,False,public,https://www.youtube.com/watch?v=zx0wMxuh-wk,https://www.youtube.com/watch?v=zx0wMxuh-wk
14,PyCon.DE 2018: Building Your Own Conversational AI With Open Source Tools - Justina Petraitytė,https://www.youtube.com/watch?v=vVco861PUJo,vVco861PUJo,PyCon DE,@PyConDE,https://www.youtube.com/@PyConDE,20181105,2612,3737,63,7.0,,Education,"Conversational AI is far from being a solved problem, but you don’t need to rely on third-party APIs to build great chat and voice apps.

In this talk we will live-code a useful, engaging conversational AI bot based entirely on machine learning. We’ll be using Rasa NLU & Rasa Core, which are open source libraries for building machine learning-based chatbots and voice assistants. We will teach our system how to hold multi-turn conversations by creating some initial training data, and then refine its behaviour by interacting with the system and providing feedback. We will cover the fundamentals of conversational AI, including the most important algorithms for intent classification, entity extraction, and dialogue management.

What will attendees learn:

- fundamentals of natural language understanding and dialogue management for building intelligent assistants.
- deep dive into the open source libraries Rasa NLU and Rasa Core.
- open challenges.",https://i.ytimg.com/vi_webp/vVco861PUJo/maxresdefault.webp,0,False,False,public,https://www.youtube.com/watch?v=vVco861PUJo,https://www.youtube.com/watch?v=vVco861PUJo
15,PyCon.DE 2018: Enabling The Chip Technologies Of Tomorrow: How Python Helps Us - Tim Hoffmann,https://www.youtube.com/watch?v=XWmJlTIJ7OA,XWmJlTIJ7OA,PyCon DE,@PyConDE,https://www.youtube.com/@PyConDE,20181105,1929,207,1,,,Education,"Carl Zeiss SMT GmbH is the leading manufacturer of lithography optics. Our optics allow chipmakers to produce smaller, faster and more energy efficient computer chips. As we move to smaller and smaller structures, the necessary optics grow more and more complex. Customized simulations and data analytics by highly qualified technical domain experts are essential. These people are not experienced software developers. However, with Python and the right support, we can give them powerful tools to accomplish their task efficiently.

Pioneering Python in a larger enterprise can be challenging. At present, we use Python in selected areas of our product development and production processes. We'd like to share our challenges and solutions with using Python in a heterogeneous company environment. In particular, how can we make Python accessible to non-programmers? How do we ensure consistent development? How do we embed in the non-Python ecosystem of the company?",https://i.ytimg.com/vi_webp/XWmJlTIJ7OA/maxresdefault.webp,0,False,False,public,https://www.youtube.com/watch?v=XWmJlTIJ7OA,https://www.youtube.com/watch?v=XWmJlTIJ7OA
16,PyCon.DE 2018: Grammar Of Graphics In Python - Malte Harder,https://www.youtube.com/watch?v=SNaWwk_HzK0,SNaWwk_HzK0,PyCon DE,@PyConDE,https://www.youtube.com/@PyConDE,20181105,1825,706,15,,,Education,"A grammar is, according to Wikipedia, the set of structural rules governing the composition of clauses, phrases, and words in any given natural language. A grammar of graphics is then the set of structural rules governing the composition of visual elements. Transforming data into visual representations using composition is quite powerful and allows to create complex visualisations with simple building blocks.

While the ideas behind the grammar of graphics date back well into the 80s, as a Python developer it is only quite recently that we can make use of it. Altair, backed by the vega specification, is one of the few plotting libraries in Python that provide such a declarative and compositional API.

In this talk I will give an introduction to the core concepts behind the grammar of graphics as well as practical examples how to use altair API in Python to create vega plots.",https://i.ytimg.com/vi_webp/SNaWwk_HzK0/maxresdefault.webp,0,False,False,public,https://www.youtube.com/watch?v=SNaWwk_HzK0,https://www.youtube.com/watch?v=SNaWwk_HzK0
17,PyCon.DE 2018: Python Decorators: Gift Or Poison? - Anastasiia Tymoshchuk,https://www.youtube.com/watch?v=VEexfP68LJs,VEexfP68LJs,PyCon DE,@PyConDE,https://www.youtube.com/@PyConDE,20181105,1958,2335,24,5.0,,Education,"Why would you ever need to use decorators in Python? Have you ever had the task when you need to use one function in few places and you really wanted to avoid of code duplicating? For example to add some logging into functions or timers, etc. Decorators in Python are super powerful with these tasks, but at the same time they are super complicated, sometimes even magical. When I started learning Python, Decorators were really like a magic: how to use them, how are they working, lots of questions. The goal is to make the things easier and clear to answer a question: to use or not to use Decorators in your project.",https://i.ytimg.com/vi_webp/VEexfP68LJs/maxresdefault.webp,0,False,False,public,https://www.youtube.com/watch?v=VEexfP68LJs,https://www.youtube.com/watch?v=VEexfP68LJs
18,PyCon.DE 2018: Sprint Orientation - Various,https://www.youtube.com/watch?v=iGB8JSmeMjA,iGB8JSmeMjA,PyCon DE,@PyConDE,https://www.youtube.com/@PyConDE,20181105,608,62,0,,,Education,,https://i.ytimg.com/vi_webp/iGB8JSmeMjA/maxresdefault.webp,0,False,False,public,https://www.youtube.com/watch?v=iGB8JSmeMjA,https://www.youtube.com/watch?v=iGB8JSmeMjA
19,"PyCon.DE 2018: Bonobo, Airflow And Grafana To Visualize Your Business - Romain Dorgueil",https://www.youtube.com/watch?v=UUrk1K45Euw,UUrk1K45Euw,PyCon DE,@PyConDE,https://www.youtube.com/@PyConDE,20181105,2424,741,9,,,Education,"Zero-to-one hands-on introduction to building a business dashboard using Bonobo ETL, Airflow, and a bit of Grafana (because graphs are cool). Although the opposite is better, there is no need of prior knowledge about any of those tools.

After a short introduction about the tools, we'll go through the following topics, using the real data of a small SaaS software:

Plan (What data do we need to see?)
Implement (How do we quickly get those graphs up?)
Monitor (Are you sure your data's still there?)
Iterate (How do we move on from there?)
One can expect to be able to build a similar system at the end of the talk in a few days (of course, the implementation is only a small part of this process, data is what really matters).

«Metrics you watch tend to improve over time»",https://i.ytimg.com/vi_webp/UUrk1K45Euw/maxresdefault.webp,0,False,False,public,https://www.youtube.com/watch?v=UUrk1K45Euw,https://www.youtube.com/watch?v=UUrk1K45Euw
20,PyCon.DE 2018: Python With And Without Pants - Stephan Erb,https://www.youtube.com/watch?v=6T8MjdWmVaQ,6T8MjdWmVaQ,PyCon DE,@PyConDE,https://www.youtube.com/@PyConDE,20181105,1683,1531,20,,,Education,"What is the best outfit for comfortable, but highly productive programming at home? While this is definitely an important question, this talk will focus on a topic that is slightly more controversial: monorepos and their build tools. Specifically, the talk will have a closer look at Pants (https://www.pantsbuild.org).

Pants is a build system for large or rapidly growing code bases. It supports all stages of a typical build ( bootstrapping, dependency resolution, compilation, linting, ...) and allows users to organize their code via targets for binaries, libraries, and tests. For Python programmers, pants is especially interesting, as it makes the manipulation and distribution of hermetically sealed Python environments painless - so called PEXes.

The talk will motivate Pants and its usage in the context of a large company-wide monorepo. It will then focus on important Python-centric features, and shortly explain how those work under the hood. The talk will conclude with a discussion of usecases for Pants outside of a monorepo, i.e. for the rest of us.",https://i.ytimg.com/vi_webp/6T8MjdWmVaQ/maxresdefault.webp,0,False,False,public,https://www.youtube.com/watch?v=6T8MjdWmVaQ,https://www.youtube.com/watch?v=6T8MjdWmVaQ
21,PyCon.DE 2018: What's New In Python 3.7? - Stephane Wirtel,https://www.youtube.com/watch?v=hnjX858YhFk,hnjX858YhFk,PyCon DE,@PyConDE,https://www.youtube.com/@PyConDE,20181105,1808,1897,16,1.0,,Education,"Scheduled for release in mid-June after the conference, Python 3.7 is shaping up to be a feature-packed release! This talk will cover all the new features of Python 3.7, including the Data Classes and the Context Variables for the asynchronous programming with asyncio.",https://i.ytimg.com/vi_webp/hnjX858YhFk/maxresdefault.webp,0,False,False,public,https://www.youtube.com/watch?v=hnjX858YhFk,https://www.youtube.com/watch?v=hnjX858YhFk
22,PyCon.DE 2018: Python On The Blockchain: The Ups And Downs In A Crypto Startup - Daniel And Lorb,https://www.youtube.com/watch?v=6y75iiTzRPc,6y75iiTzRPc,PyCon DE,@PyConDE,https://www.youtube.com/@PyConDE,20181105,2429,151,2,,,Education,"While many cryptographic components of blockchain protocols can be extremely complex, blockchain systems themselves are relatively easy to understand when viewed from a distance. To take the example of Bitcoin, users store digital currency in hardware or software wallets, and use private keys to sign and broadcast transactions. Broadcasted transactions are grouped together into a block through a cryptographic process known as mining, with miners rewarded through the collection of transaction fees and the issuance of new coins. The mined block of transactions is appended to the existing chain, and verified by a global network of nodes. This process repeats in perpetuity, with each newly added block adding to the trustedness and security of data stored on the chain.

Increased interest in and demand for cryptocurrencies has brought about a need for places where digital assets can easily be bought, sold or traded. Our platform, Bitpanda, accomplishes this with a backend written in Python, and relying heavily on Django and MySQL databases. In our presentation, we begin by providing a brief overview of how blockchains work. Following this, we describe the Python architecture that (e.g.) generates cryptocurrency wallets, builds, signs and sends transactions, and monitors blockchains for new, relevant data. Key challenges, solutions and failures encountered during the development of the system, and growth of our team, are presented.

Throughout our talk, we also highlight a number of broader social implications of blockchains, and our work with them. More specifically, we describe the need for open-innovation based approaches to blockchain development, the value of open-source within the blockchain community, and the current lack of critical discourse surrounding the potential uses of blockchains as mechanisms of surveillance and control.",https://i.ytimg.com/vi_webp/6y75iiTzRPc/maxresdefault.webp,0,False,False,public,https://www.youtube.com/watch?v=6y75iiTzRPc,https://www.youtube.com/watch?v=6y75iiTzRPc
23,PyCon.DE 2018: Keeping Your Data Secure While Learning From It - Andreas Dewes and Katharine Jarmul,https://www.youtube.com/watch?v=i-embbaJX_A,i-embbaJX_A,PyCon DE,@PyConDE,https://www.youtube.com/@PyConDE,20181105,1909,177,2,1.0,,Education,"We will discuss anonymization and pseudonymization techniques that you can apply to your data to keep it secure and comply with the law(s) while still being able to gain useful insights from it.

Why protect data?
Pseudonymization vs. anonymization: What's the difference?
Pseudonymization: Techniques & real-world examples
Problems and risks when pseudonymizing data
Anonymization: Approaches & real-world examples
Problems and risks when anyonymizing data
Takeaways and summary
We will show concrete Python implementations of various techniques and use example data sets to show how applying pseudonymization and anonymization will affect our ability to do machine learning / data science.",https://i.ytimg.com/vi_webp/i-embbaJX_A/maxresdefault.webp,0,False,False,public,https://www.youtube.com/watch?v=i-embbaJX_A,https://www.youtube.com/watch?v=i-embbaJX_A
24,PyCon.DE 2018: Put Your Data On A Map - Alex Vykaliuk,https://www.youtube.com/watch?v=CdgI-TUv5z0,CdgI-TUv5z0,PyCon DE,@PyConDE,https://www.youtube.com/@PyConDE,20181105,1013,230,4,,,Education,When you're working with geo data I found that putting it all on a map helps a lot to see and understand it. I will go over few of the tools I use on a day to day basis that allow you to draw a map. It will include few common scenarios and examples.,https://i.ytimg.com/vi_webp/CdgI-TUv5z0/maxresdefault.webp,0,False,False,public,https://www.youtube.com/watch?v=CdgI-TUv5z0,https://www.youtube.com/watch?v=CdgI-TUv5z0
25,PyCon.DE 2018: Creating An Inclusive Corporate Culture - Yenny Cheung,https://www.youtube.com/watch?v=nwyiiB1NK3w,nwyiiB1NK3w,PyCon DE,@PyConDE,https://www.youtube.com/@PyConDE,20181105,1726,236,5,1.0,,Education,"Having a tech career as a minority is challenging. It could mean being the only one to speak against the popular opinion, or becoming more visible to get the same level of recognition. What can we do on the corporate level to make sure everyone feels welcome and retain these talents? Creating an inclusive corporate culture helps us achieve just that. This talk shares concrete steps that employees and employers can take to improve minorities in tech’s sense of belonging and engagement:

Top down approach: establish an Executive Diversity Council that makes up of influential company leaders who deeply care about diversity and inclusion
Bottom up approach: get involved in a minority in engineering employee resource group
Start mentorship programs
Form diverse recruitment panels
Organize ally trainings",https://i.ytimg.com/vi_webp/nwyiiB1NK3w/maxresdefault.webp,0,False,False,public,https://www.youtube.com/watch?v=nwyiiB1NK3w,https://www.youtube.com/watch?v=nwyiiB1NK3w
26,PyCon.DE 2018: Where The Heck Is My Memory? - Florian Jetter,https://www.youtube.com/watch?v=C-1XWTgFo5g,C-1XWTgFo5g,PyCon DE,@PyConDE,https://www.youtube.com/@PyConDE,20181105,962,196,2,,,Education,"Memory management is something the common Python user doesn’t need to bother with because the gory details of it are hidden deep within the interpreter itself. The garbage collector takes out the trash and we can spend our precious time bothering with more important things on our minds. Living in this encapsulated utopia is nice but sometimes it is worth it to peak behind the curtains to unleash the full power of your application. In this talk I want to show you when it is necessary to face this harsh world and convince you that it is in fact not as scary as it may seem. Using real life examples, I’m going to show you how to use the garbage collector and open source tooling to get control over the memory you might not even know you had at your disposal.",https://i.ytimg.com/vi_webp/C-1XWTgFo5g/maxresdefault.webp,0,False,False,public,https://www.youtube.com/watch?v=C-1XWTgFo5g,https://www.youtube.com/watch?v=C-1XWTgFo5g
27,"PyCon.DE 2018: Reproducibility, And Selection Bias In Machine Learning - Valerio Maggio",https://www.youtube.com/watch?v=MOBs6MNepDk,MOBs6MNepDk,PyCon DE,@PyConDE,https://www.youtube.com/@PyConDE,20181105,2070,574,10,,,Education,"Reproducibility - the ability to recompute results — and replicability— the chances other experimenters will achieve a consistent result[1]- are among the main important beliefs of the scientific method.

Surprisingly, these two aspects are often underestimated or not even considered when setting up scientific experimental pipelines. In this, one of the main threat to replicability is the selection bias, that is the error in choosing the individuals or groups to take part in a study. Selection bias may come in different flavours: the selection of the population of samples in the dataset (sample bias); the selection of features used by the learning models, particularly sensible in case of high dimensionality; the selection of hyper parameter best performing on specific dataset(s). If not properly considered, the selection bias may strongly affect the validity of derived conclusions, as well as the reliability of the learning model.

In this talk I will provide a solid introduction to the topics of reproducibility and selection bias, with examples taken from the biomedical research, in which reliability is paramount.

From a more technological perspective, to date the scientific Python ecosystem still misses tools to consolidate the experimental pipelines in in research, that can be used together with Machine and Deep learning frameworks (e.g. sklearn and keras). In this talk, I will present reproducible-lern, a new Python frameworks for reproducible research to be used for machine and deep learning.

During the talk, the main features of the framework will be presented, along with several examples, technical insights and implementation choices to be discussed with the audience.

The talk is intended for intermediate PyData researchers and practitioners. Basic prior knowledge of the main Machine Learning concepts is assumed for the first part of the talk. On the other hand, good proficiency with the Python language and with scientific python libraries (e.g. numpy, sklearn) are required for the second part.",https://i.ytimg.com/vi_webp/MOBs6MNepDk/maxresdefault.webp,0,False,False,public,https://www.youtube.com/watch?v=MOBs6MNepDk,https://www.youtube.com/watch?v=MOBs6MNepDk
28,PyCon.DE 2018: Data Science Complexity And Solutions In Real Industrial Projects - Artur Miller,https://www.youtube.com/watch?v=bmtGr0LSb_Y,bmtGr0LSb_Y,PyCon DE,@PyConDE,https://www.youtube.com/@PyConDE,20181105,1712,216,3,,,Education,"As data scientists we usually like to apply fancy machine learning models to well-groomed datasets. Everyone working on industrial problems will eventually learn, that this does not reflect reality. The amount of time spent on modeling is small compared to data gathering, -warehousing and -cleaning. Even after training and deployment of the model, the work is not done. Continuous monitoring of the performance and input data is still necessary.

In this talk I discuss how important data handling is for successful data science projects. Each milestone, from finding the business case to continuously monitoring the performance of the solution, is addressed. This is exemplary shown on a project, with the goal of improving a productive system.",https://i.ytimg.com/vi_webp/bmtGr0LSb_Y/maxresdefault.webp,0,False,False,public,https://www.youtube.com/watch?v=bmtGr0LSb_Y,https://www.youtube.com/watch?v=bmtGr0LSb_Y
29,"PyCon.DE 2018: PyTorch As A Scientific Computing Library: Past, Present And Future - Adam Paszke",https://www.youtube.com/watch?v=0Y4kY6PnYfM,0Y4kY6PnYfM,PyCon DE,@PyConDE,https://www.youtube.com/@PyConDE,20181105,2674,2125,42,,,Education,"Python is very well known for its ecosystem of mature scientific computing packages. Despite that, the rapidly rising popularity of deep learning resulted in creation of a number of new libraries, including PyTorch. Although originally they were meant to provide better support for those domain specific use cases, one can come to a conclusion, that they can actually have wider applications.

In this talk, I’ll showcase the main ideas behind PyTorch - a relatively new library focusing on usability and good integration with other Python packages. I’ll cover some interesting use cases, ranging from ones more specific to machine learning, to those more generally applicable in other scientific computing areas. I’ll also cover some recently added features, and talk a bit about our future roadmap.",https://i.ytimg.com/vi_webp/0Y4kY6PnYfM/maxresdefault.webp,0,False,False,public,https://www.youtube.com/watch?v=0Y4kY6PnYfM,https://www.youtube.com/watch?v=0Y4kY6PnYfM
30,PyCon.DE 2018: Fulfilling Apache Arrow's Promises: Pandas On JVM Memory Without A Copy - Uwe L. Korn,https://www.youtube.com/watch?v=xW7IOaQvDsU,xW7IOaQvDsU,PyCon DE,@PyConDE,https://www.youtube.com/@PyConDE,20181105,1577,591,4,1.0,,Education,"Apache Arrow established a standard for columnar in-memory analytics to redefine the performance and interoperability of most Big Data technologies in early 2016. Since then implementations in Java, C++, Python, Glib, Ruby, Go, JavaScript and Rust have been added. Although Apache Arrow (pyarrow) is already known to many Python/Pandas users for reading Apache Parquet files, its main benefit is the cross-language interoperability. With feather and PySpark, you can already benefit from this in Python and R/Java via the filesystem or network. While they improve data sharing and remove serialization overhead, data still needs to be copied as it is passed between processes.

In the 0.23 release of Pandas, the concept of ExtensionArrays was introduced. They allow the extension of Pandas DataFrames and Series with custom, user-defined typed. The most prominent example is cyberpandas which adds an IP dtype that is backed by the appropriate representation using NumPy arrays. These ExtensionArrays are not limited to arrays backed by NumPy but can take an arbitrary storage as long as they fulfill a certain interfaces. Using Apache Arrow we can implement ExtensionArrays that are of the same dtype as the built-in types of Pandas but memory management is not tied to Pandas' internal BlockManager. On the other hand Apache Arrow has a much more wider set of efficient types that we can also expose as an ExtensionArray. These types include a native string type as well as a arbitrarily nested types such as list of … or struct of (…, …, …).

To show the real-world benefits of this, we take the example of a data pipeline that pulls data from a relational store, transforms it and then passes it into a machine learning model. A typical setup nowadays most likely involves a data lake that is queried with a JVM based query engine. The machine learning model is then normally implemented in Python using popular frameworks like CatBoost or Tensorflow.

While sometimes these query engines provide Python clients, their performance is normally not optimized for large results sets. In the case of a machine learning model, we will do some feature transformations and possibly aggregations with the query engine but feed as many rows as possible into the model. This will lead then to result sets that have above a million rows. In contrast to the Python clients, these engines often come with efficient JDBC drivers that can cope with result sets of this size but then the conversion from Java objects to Python objects in the JVM bridge will slow things down again. In our example, we will show how to use Arrow to retrieve a large result in the JVM and then pass it on to Python without running into these bottlenecks.",https://i.ytimg.com/vi_webp/xW7IOaQvDsU/maxresdefault.webp,0,False,False,public,https://www.youtube.com/watch?v=xW7IOaQvDsU,https://www.youtube.com/watch?v=xW7IOaQvDsU
31,PyCon.DE 2018: How To Teach Space Invaders To Your Computer - David Wölfle,https://www.youtube.com/watch?v=2KfyvrEn8p8,2KfyvrEn8p8,PyCon DE,@PyConDE,https://www.youtube.com/@PyConDE,20181105,1603,177,1,,,Education,"First things first: playing good old Atari games might be cool but why should I write a program for doing it? Well teaching a computer to play a game means teaching it to develop strategies and use foresight planning to solve a certain problem. The tools you gather while solving i.e. space invaders are the same you may use to solve any problem which requires a sequential set of decisions in order to find an optimal solution to some problem, like i.e. controlling a robot that collects garbage. Furthermore, there is a lot of scientific research on reinforcement learning that focuses on solving Atari games which makes it a good starting point, as large amounts of publications and open source code already exists.

What to expect from this talk? At first there will be a very short introduction to reinforcement learning theory, just the very basics, common applications and some references for further reading. Next points are, how to run Atari games from inside python for a learning task (with OpenAI's gym), and where to find an algorithm for the actual learning problem. Finally it will be shown how to build it all together in a jupyter notebook and let the algorithm play the game. Et voilà that's your computer beating you in space invaders.",https://i.ytimg.com/vi_webp/2KfyvrEn8p8/maxresdefault.webp,0,False,False,public,https://www.youtube.com/watch?v=2KfyvrEn8p8,https://www.youtube.com/watch?v=2KfyvrEn8p8
32,PyCon.DE 2018: Driving Sim And DA Of Magnetic Nanostructures Through Jupyter Notebook - Hans Fangohr,https://www.youtube.com/watch?v=ZrpJ_H0LCOA,ZrpJ_H0LCOA,PyCon DE,@PyConDE,https://www.youtube.com/@PyConDE,20181105,1392,793,16,1.0,,Education,"We present ongoing work from a project that makes a particular computer simulation (implemented in C++ and Tk/Tcl) accessible through a Python interface, and through the Jupyter Notebook. The talk describes the motivation and current status of the project.

In more detail, the computer simulation in question is the Object Oriented Micromagnetic Modelling Framework (OOMMF) which is likely the most widely used micromagnetic simulation package. It can be driven through a graphical (Tk) user interface or through a configuration file that defines a simulation run.

In this talk, we first show a Python interface to OOMMF that allows the driving of OOMMF simulations from a Python program or interpreter prompt. This way we embed a widely used scientific code from 1990s in a general purpose programming language [1] and enable the full use of the ecosystem of scientific libraries available for Python. For example, design optimisation, specialised post-processing, and the creation of figures can all be carried out using a single script; making the work more easily reproducible.

Second, we integrate the Python interface to OOMMF into a Jupyter notebook, so that all existing benefits of using Jupyter are inherited for the use in computational micromagnetics, which is the reason we named our code Jupyter-OOMMF (JOOMMF). A JupyterHub installation of the tool reduces barriers in uptake, and all the code is on github.

We discuss the benefits of driving computer simulation and data analysis through Jupyter Notebooks.

This project is a part of the Jupyter-OOMMF (JOOMMF) activity in the OpenDreamKit project and we acknowledge financial support from Horizon 2020 European Research Infrastructures project (676541). The work is also supported by the EPSRC CDT in Next Generation Computational Modelling EP/L015382/1, and the EPSRC grants EP/M022668/1 and EP/N032128/1.

For additional context: micromagnetic modelling is a key research method in academia and industry to support development of high-capacity magnetic storage devices that are cheap, fast, and reliable, and to enable research into future alternative storage and processing technologies such as spintronics. The OOMMF modelling package has been used in over 2500 publications since 1999.

[1] Beg, M., Pepper, R. A., and Fangohr, H. User interfaces for computational science: A domain specific language for OOMMF embedded in Python. AIP Advances 7, 056025 (2017), https://doi.org/10.1063/1.4977225",https://i.ytimg.com/vi_webp/ZrpJ_H0LCOA/maxresdefault.webp,0,False,False,public,https://www.youtube.com/watch?v=ZrpJ_H0LCOA,https://www.youtube.com/watch?v=ZrpJ_H0LCOA
33,PyCon.DE 2018: Cloud Chat Bot For Lazy People - Björn Meier,https://www.youtube.com/watch?v=oLCy7UrD-gU,oLCy7UrD-gU,PyCon DE,@PyConDE,https://www.youtube.com/@PyConDE,20181105,924,104,1,,,Education,"At work we established Slack years ago as our chat application and by now quite a percentage of communication goes through it. As a result it got much easier to contact one person or a group simultaneously. And this is good as we can share our knowledge save each other time. But it also introduced a category of questions in the chat which only require simple tedious tasks to get the answer and then post it as a response. One possibility is to educate and point others to the place where they can find the answer or what tasks they have to do. The other one is use a chat bot for this. Both ways have advantages and for the bot it is that you can import a specific type of response more easily into a conversation without first gathering the information and copy and paste it. I am a developer and service operator and one category of questions which fits this is the category of service health questions, like ""Does service X has a problem right now?"". Hence, I will use a bot to answer them. First I will show you how you can create a python bot for the Azure bot service. With it the questioner then can either directly use the bot to answer his question or you can just create the response for him without going to the service health monitoring. In this case the service health information has to be obtained from a Prometheus monitoring service and then transformed into a chat message.",https://i.ytimg.com/vi_webp/oLCy7UrD-gU/maxresdefault.webp,0,False,False,public,https://www.youtube.com/watch?v=oLCy7UrD-gU,https://www.youtube.com/watch?v=oLCy7UrD-gU
34,"PyCon.DE 2018: Salabim, Discrete Event Simulation In Python - Ruud Van Der Ham",https://www.youtube.com/watch?v=I74j2KtGouA,I74j2KtGouA,PyCon DE,@PyConDE,https://www.youtube.com/@PyConDE,20181105,312,3213,44,1.0,,Education,,https://i.ytimg.com/vi_webp/I74j2KtGouA/maxresdefault.webp,0,False,False,public,https://www.youtube.com/watch?v=I74j2KtGouA,https://www.youtube.com/watch?v=I74j2KtGouA
35,PyCon.DE 2018: MoinMoin Wiki - Thomas Waldmann,https://www.youtube.com/watch?v=W9eGJQoWB6A,W9eGJQoWB6A,PyCon DE,@PyConDE,https://www.youtube.com/@PyConDE,20181105,160,1087,10,,,Education,,https://i.ytimg.com/vi_webp/W9eGJQoWB6A/maxresdefault.webp,0,False,False,public,https://www.youtube.com/watch?v=W9eGJQoWB6A,https://www.youtube.com/watch?v=W9eGJQoWB6A
36,PyCon.DE 2018: Python & Javascript = Transcrypt - Andreas Bunkahle,https://www.youtube.com/watch?v=gL4df19JNPU,gL4df19JNPU,PyCon DE,@PyConDE,https://www.youtube.com/@PyConDE,20181105,212,2692,21,1.0,,Education,,https://i.ytimg.com/vi_webp/gL4df19JNPU/maxresdefault.webp,0,False,False,public,https://www.youtube.com/watch?v=gL4df19JNPU,https://www.youtube.com/watch?v=gL4df19JNPU
37,PyCon.DE 2018: GeoPython 2019 - Martin Christen,https://www.youtube.com/watch?v=kxMUDnQpfy8,kxMUDnQpfy8,PyCon DE,@PyConDE,https://www.youtube.com/@PyConDE,20181105,124,323,3,,,Education,,https://i.ytimg.com/vi_webp/kxMUDnQpfy8/maxresdefault.webp,0,False,False,public,https://www.youtube.com/watch?v=kxMUDnQpfy8,https://www.youtube.com/watch?v=kxMUDnQpfy8
38,PyCon.DE 2018: HyperLog Log - Robin Roth,https://www.youtube.com/watch?v=jD2d7jr7z1Q,jD2d7jr7z1Q,PyCon DE,@PyConDE,https://www.youtube.com/@PyConDE,20181105,315,4091,71,5.0,,Education,,https://i.ytimg.com/vi_webp/jD2d7jr7z1Q/maxresdefault.webp,0,False,False,public,https://www.youtube.com/watch?v=jD2d7jr7z1Q,https://www.youtube.com/watch?v=jD2d7jr7z1Q
39,PyCon.DE 2018: Why Should You Consider Working For A Startup? - Sepideh Ebrahimi,https://www.youtube.com/watch?v=k0wGVq8llMU,k0wGVq8llMU,PyCon DE,@PyConDE,https://www.youtube.com/@PyConDE,20181105,313,96,0,,,Education,,https://i.ytimg.com/vi_webp/k0wGVq8llMU/maxresdefault.webp,0,False,False,public,https://www.youtube.com/watch?v=k0wGVq8llMU,https://www.youtube.com/watch?v=k0wGVq8llMU
40,PyCon.DE 2018: Announcement: PyData MeetUp Prague - Jiri Bajer,https://www.youtube.com/watch?v=k4wOkZSsLv4,k4wOkZSsLv4,PyCon DE,@PyConDE,https://www.youtube.com/@PyConDE,20181105,64,105,0,1.0,,Education,,https://i.ytimg.com/vi_webp/k4wOkZSsLv4/maxresdefault.webp,0,False,False,public,https://www.youtube.com/watch?v=k4wOkZSsLv4,https://www.youtube.com/watch?v=k4wOkZSsLv4
41,PyCon.DE 2018: PewPew - Radomir Dopieralski,https://www.youtube.com/watch?v=6tAxzpBaGHw,6tAxzpBaGHw,PyCon DE,@PyConDE,https://www.youtube.com/@PyConDE,20181105,317,144,5,,,Education,,https://i.ytimg.com/vi_webp/6tAxzpBaGHw/maxresdefault.webp,0,False,False,public,https://www.youtube.com/watch?v=6tAxzpBaGHw,https://www.youtube.com/watch?v=6tAxzpBaGHw
42,PyCon.DE 2018: Let's Play Testing - Johannes Lippmann,https://www.youtube.com/watch?v=Smr9xFc-jns,Smr9xFc-jns,PyCon DE,@PyConDE,https://www.youtube.com/@PyConDE,20181105,273,104,5,1.0,,Education,,https://i.ytimg.com/vi_webp/Smr9xFc-jns/maxresdefault.webp,0,False,False,public,https://www.youtube.com/watch?v=Smr9xFc-jns,https://www.youtube.com/watch?v=Smr9xFc-jns
43,PyCon.DE 2018: Introduction And Practical Experience About Quantum Computing - Dr. Andreas Riegg,https://www.youtube.com/watch?v=dDPSmTGVvZE,dDPSmTGVvZE,PyCon DE,@PyConDE,https://www.youtube.com/@PyConDE,20181105,2581,325,3,,,Education,"As publicly announced in early 2018, Daimler AG has started cooperations with IBM and Google on Quantum Computing. When doing concrete experiments with the Quantum Computing cloud based offerings, two different Python libraries provided by IBM and Google are used. They are named QISKIT in the case of IBM and CIRQ in the case of Google. The experiments with both libraries are handled using appropriate Jupyter Notebooks. This talk gives a brief introduction on Quantum Computing, specifically on Quantum Computers based on transmon-based QBits. This is followed by an introduction of the both Python libraries that are used. Then some details about the Jupyter notebooks that are used are given. The talk will finish with some demos and an overview about the most important practical experiences with both Quantum Computing offerings.",https://i.ytimg.com/vi_webp/dDPSmTGVvZE/maxresdefault.webp,0,False,False,public,https://www.youtube.com/watch?v=dDPSmTGVvZE,https://www.youtube.com/watch?v=dDPSmTGVvZE
44,PyCon.DE 2018: Selinon - Dynamic Distributed Task Flows - Fridolín Pokorný,https://www.youtube.com/watch?v=UDr9Lp_0rp0,UDr9Lp_0rp0,PyCon DE,@PyConDE,https://www.youtube.com/@PyConDE,20181105,2727,299,1,,,Education,"Have you ever tried to define and process complex workflows for data processing? If the answer is yes, you might have struggled to find the right framework for that. You've probably came across Celery - popular task flow management for Python. Celery is great, but it does not provide enough flexibility and dynamic features needed badly in complex flows. As we discovered all the limitations, we decided to implement Selinon.

Have you ever tried to define and process complex workflows for data processing? If the answer is yes, you might have struggled to find the right framework for that. You've probably came across Celery - popular task flow management for Python. Celery is great, but it does not provide enough flexibility and dynamic features needed badly in complex flows. As we discovered all the limitations, we decided to implement Selinon.

Selinon enhances Celery task flow management and allows you to create and model task flows in your distributed environment that can dynamically change behavior based on computed results in your cluster, automatically resolve tasks that need to be executed in case of selective task runs, automatic tracing mechanism and many others.",https://i.ytimg.com/vi_webp/UDr9Lp_0rp0/maxresdefault.webp,0,False,False,public,https://www.youtube.com/watch?v=UDr9Lp_0rp0,https://www.youtube.com/watch?v=UDr9Lp_0rp0
45,PyCon.DE 2018: Achieving Resilient Code With Integration Tests - Alexandre Figura,https://www.youtube.com/watch?v=qRJ5qhblXV8,qRJ5qhblXV8,PyCon DE,@PyConDE,https://www.youtube.com/@PyConDE,20181105,1862,172,0,1.0,,Education,"You are maybe like me: I never learned at school how to write tests. My teachers gave me at first a broad overview of computer history. Then, they explained me some basic design patterns. And to finish, I often had to write more or less basic programs, to validate and demonstrate my skills. Not the kind of code I would be really proud of today: the procrastinator monkey living in my head at this time was more thinking about planning my summer holidays, rather than writing Ninja code!

And to make things worse, my studies focused on network and system engineering. Not software architecture. Funny story, because I decided to become programmer a couple of years later…

What I realize now is that I don’t have as much time as before to learn. And in a world driven by business, where time is money, and where tradeoffs are the rule, there is rarely enough money to write both shiny new features and a complete test suite.

People who practice Test-Driven Development know how complicated it can be to write proper tests. TDD is often discouraging at first: the learning curve is steep. But this problem also exists in the testing world in general. Because writing good tests is hard, many beginners get headaches trying to reach this goal. How to convince project managers to have more time for writing tests in these conditions…

But “le jeu en vaut la chandelle” as we say in French (""the juice is worth the squeeze""). Well tested applications are not only easier to maintain and extend. They also have in general a better API. That’s what we will see in this talk, by focusing on how to write integration tests. Our journey will begin with a presentation of different testing strategies. We will then jump to the practical part, using Pytest, interface testing , dependency injections and stubs, amongst many others. And because we want to add nice buzzwords on our resume after PyConDE, we will finish this talk by automating the whole with Docker Compose.",https://i.ytimg.com/vi_webp/qRJ5qhblXV8/maxresdefault.webp,0,False,False,public,https://www.youtube.com/watch?v=qRJ5qhblXV8,https://www.youtube.com/watch?v=qRJ5qhblXV8
46,PyCon.DE 2018: Testing In Python - The Big Picture - Niklas Meinzer,https://www.youtube.com/watch?v=8JtLzYdXba0,8JtLzYdXba0,PyCon DE,@PyConDE,https://www.youtube.com/@PyConDE,20181105,1865,774,10,1.0,,Education,"Any team developing and maintaining software - be it free and open source or commercial - employs one form of software testing or another. But what are the different kinds of tests in our tool boxes? And how are they best used? In this talk we'll take a look around and try to answer these questions.

First, we'll examine the basic concepts of testing: Everyone has probably at least heard about unit tests, but are they all you need? Performance tests can help you find out how well your product performs under load and detect bottle necks early on. Manual testing is often looked down upon, since it's not automated, but is it always a bad idea? And what even is mutation testing?

We'll also get to know a lot of the amazing testing tools from the Python ecosystem. Find out what the best test runner is (Spoiler alert: it's pytest). Learn how to make writing test more fun and less work using tools like mock, Faker and factory_boy. Measure the quality of your test suite using coverage.py.

But no tool is the right one for any situation. We'll also talk about when and how to use each of the tools, while debunking common misconceptions and demonstrating best practices.",https://i.ytimg.com/vi_webp/8JtLzYdXba0/maxresdefault.webp,0,False,False,public,https://www.youtube.com/watch?v=8JtLzYdXba0,https://www.youtube.com/watch?v=8JtLzYdXba0
47,PyCon.DE 2018: About Going Open-Source - Tim,https://www.youtube.com/watch?v=A_UtST302Og,A_UtST302Og,PyCon DE,@PyConDE,https://www.youtube.com/@PyConDE,20181105,883,1498,14,,,Education,"I will start of talking about why ""working for free"" became an important part of the developer culture all around the world and talk about why companies should try to share as many tools as possible. I'll give some examples of tools that were open sourced and got immense traction leading to the projects growing with an intense speed. I'll try to take away the ""fear"" of open sourcing tools that cost ten of thousands of dollars to create. Then I'll describe how my journey with open source looks like and start talking about how you can get your feet into contributing to known projects. After that I will close off with some hints on doing and contributing to open source projects that worked out great for me. They will also get an impression on what opportunities will show up if they put some of their time into doing OS.

The audience can be mixed, but it's way more interesting for people that are either new to programming or have never worked with open source.

In a perfect world, some of the listeners would leave the presentation with the motivation and hard goal to start with OS as soon as possible.",https://i.ytimg.com/vi_webp/A_UtST302Og/maxresdefault.webp,0,False,False,public,https://www.youtube.com/watch?v=A_UtST302Og,https://www.youtube.com/watch?v=A_UtST302Og
48,PyCon.DE 2018: Reticulate: R Interface To Python - Jens Bruno Wittek,https://www.youtube.com/watch?v=EJxQSa9lwfM,EJxQSa9lwfM,PyCon DE,@PyConDE,https://www.youtube.com/@PyConDE,20181105,2577,2517,25,2.0,,Education,"Python and R are the preferred languages for data science. In 2018, RStudio introduced its package reticulate and clearly demonstrates that it favours to join forces. Both languages have strengths and weaknesses. Tools to combine the strengths will enable easier collaboration in projects and more possibilities to succeed. Using Python from R gives R users wider access to functions and makes it easier for Python beginners to just run scripts and being able to collaborate in Python projects. The talk will show the possibilities of reticulate: The main part starts with demonstrating the Python interpreter within R. It will show how to source Python scripts as well as install and import modules. Then it will deal with the most important types of Python objects, how they are represented in R and how to further manipulate them. Thereby, a special focus is on using Python for data science. In addition, it will be presented how Conda environments can be created and used from R. A further application will be the creation of reports with Markdown and LaTeX where R and Python can be used within one document and share objects. A last topic is about showing the possibilities for easier development in RStudio (help regarding Python functions, auto completion).",https://i.ytimg.com/vi_webp/EJxQSa9lwfM/maxresdefault.webp,0,False,False,public,https://www.youtube.com/watch?v=EJxQSa9lwfM,https://www.youtube.com/watch?v=EJxQSa9lwfM
49,PyCon.DE 2018: IoT Using Python On Linux: Lessons Learned - Thomas Keppler and Matthias Schmidt,https://www.youtube.com/watch?v=M4cmKMxvYKE,M4cmKMxvYKE,PyCon DE,@PyConDE,https://www.youtube.com/@PyConDE,20181105,2538,308,3,,,Education,,https://i.ytimg.com/vi_webp/M4cmKMxvYKE/maxresdefault.webp,0,False,False,public,https://www.youtube.com/watch?v=M4cmKMxvYKE,https://www.youtube.com/watch?v=M4cmKMxvYKE
50,"PyCon.DE 2018: Script, Library, Or Executable: You Can Have It All! - Luke Lee",https://www.youtube.com/watch?v=7jpM1Iw3OKk,7jpM1Iw3OKk,PyCon DE,@PyConDE,https://www.youtube.com/@PyConDE,20181105,1870,705,19,1.0,,Education,"I will describe one possible way to achieve this using the following features:

* Argparse based CLI script
* Using Gooey to wrap CLI API for a GUI
* Pyinstaller to package with no external dependencies
Package goals
We want to create a package layout that can support a CLI interface, an importable library, and a GUI all while sharing as much code as possible.

Although text and graphical interfaces are very different we can provide a consistent API with careful consideration. This way users can easily use our library or either interface without starting all over again.

API guidelines
- Use the same terminology in each entry point (CLI/GUI)
- Allow all the same inputs to be passed to a single functional-entry point when imported as a library
Step 1: CLI
First we will layout a single-file CLI script using argparse similar to the Unix wc tool that takes a text file and outputs the following information:

1. Number of words
2. Number of lines
3. Rough estimate of reading time
We'll discuss the __name__ == __main__ Python idiom, separating the argument parsing from the main function, and why keeping as little as possible in __main__ is better for reusability.

There are several pros and cons to providing others with a single-file script. It's easy to develop and simple to read, but it requires any user to have the correct version of Python installed. It's also difficult for other developers to reuse the code in their own projects or deploy to PyPI.

Step 2: Add library interface
Next we'll take our single-file script and expand it into a basic Python package using a main folder, init.py, and a cli.py script to expose the same CLI as before.

We'll discuss how to restructure the main and parsing functions from step 1 into an public API defined by the init.py that exposes the same CLI functionality as a library.

We won't dive into setup.py at all, but there will be links and a brief description on the various tools to layout a package such as cookiecutter and setup.py.

Step 3: Add Gooey interface
The Gooey project can easily expose a CLI as GUI with a few decorators. We'll discuss briefly how to use Gooey and some of the extra functionality it provides to create more advanced GUIs.

We'll also give a simple mental model for how it maps argparse argument types to GUI widgets.

Step 4: PyInstaller
Until step 3 all we required of users was a working Python 3 installation. However, adding Gooey requires users to have a working Python installer, the Gooey library, and wxPython. Typically GUIs are meant for higher-level users so asking them to install all of this to benefit from our little app is too much.

Instead we'll see how we run PyInstaller on our entry script to package up all our dependencies including Python itself into a simple executable. We'll briefly discuss the build and dist output folders from PyInstaller along with the ability to use it to package all sorts of complicated Python applications using Qt, Numpy, etc.

End-users in management don't even have to know we used Python!",https://i.ytimg.com/vi_webp/7jpM1Iw3OKk/maxresdefault.webp,0,False,False,public,https://www.youtube.com/watch?v=7jpM1Iw3OKk,https://www.youtube.com/watch?v=7jpM1Iw3OKk
51,PyCon.DE 2018: Productionizing Your ML Code Seamlessly - Lauris Jullien,https://www.youtube.com/watch?v=M0A8GaT5qns,M0A8GaT5qns,PyCon DE,@PyConDE,https://www.youtube.com/@PyConDE,20181105,1897,233,5,,,Education,"Data science and Machine Learning are hot topics right now for Software Engineers and beyond. There are a lot of python tools that allow you to hack together a notebook to quickly get insight on your data, or train a model to predict or classify. Or you might have inherited some data wrangling and modeling {Jupyter/Zeppelin} notebook code from someone else, like the resident data scientist.

The code works on test data, when you run the cells in the right order (skipping cell 22), and you believe that the insight gained from this work would be a valuable game changer. But now how do you take this experimental code into production, and keep it up-to-date with a regular retraining schedule? And what do you need to do after that, to ensure that it remains reliable and brings value in the long term?

These will be the questions this talk will answer, focusing on 2 main themes: What does running an ML model in production involve? How to improve your development workflow to make the path to production easier?

This talk will draw examples from real projects at Yelp, like migrating a pandas/sklearn classification project into production with pyspark, while aiming to give advice that is not dependent on specific frameworks, or tools, and is useful for listeners from all backgrounds.",https://i.ytimg.com/vi_webp/M0A8GaT5qns/maxresdefault.webp,0,False,False,public,https://www.youtube.com/watch?v=M0A8GaT5qns,https://www.youtube.com/watch?v=M0A8GaT5qns
52,PyCon.DE 2018: Scalable Scientific Computing Using Dask (Workshop) - Uwe L. Korn,https://www.youtube.com/watch?v=OhstDq8l3OM,OhstDq8l3OM,PyCon DE,@PyConDE,https://www.youtube.com/@PyConDE,20181105,4618,364,3,,,Education,"Pandas and NumPy are great tools to dive through data, do analysis and train machine learning models. They provide intuitive APIs and superb performance. Sadly they are both restricted to the main memory of a single machine and mostly also to a single CPU. Once our code reaches these boundaries, we can utilize Dask to scale our code to multiple CPUs or even across a cluster.

Dask provides high-level Array, Bag, and DataFrame implementations that mimic the NumPy, lists, and Pandas APIs but operate in parallel on data that doesn't need to fit into main memory. In the low level, Dask provides dynamic task schedulers that execute task graphs in parallel. These execution engines power the high-level collections mentioned above but can also power custom, user-defined workloads.

In the workshop, we want to show how to turn typical Pandas and NumPy code into parallel/distributed code using dask.array and dask.dataframe. We will highlight things that can easily be transformed into dask code and other things that need a bit more thought. In addition, we will show the utilities that Dask provides us to inspect the execution graphs and the behaviour of our distributed code.",https://i.ytimg.com/vi_webp/OhstDq8l3OM/maxresdefault.webp,0,False,False,public,https://www.youtube.com/watch?v=OhstDq8l3OM,https://www.youtube.com/watch?v=OhstDq8l3OM
53,PyCon.DE 2018: How Type Annotations Make Your Code Better - Igor Davydenko,https://www.youtube.com/watch?v=hHxZkdDA-l0,hHxZkdDA-l0,PyCon DE,@PyConDE,https://www.youtube.com/@PyConDE,20181105,1218,211,1,,,Education,"Type annotations still not received that amount of popularity, that should. People still finding them hard and sometimes ambiguous to use. But if you start new project in Python in 2018 you should consider using type annotations in your code and this short talk describes why.

I'll go over examples, where type annotations helped my team to create less complex code, and how using type annotations changing your mind for projecting & implementing features for your project.",https://i.ytimg.com/vi_webp/hHxZkdDA-l0/maxresdefault.webp,0,False,False,public,https://www.youtube.com/watch?v=hHxZkdDA-l0,https://www.youtube.com/watch?v=hHxZkdDA-l0
54,PyCon.DE 2018: Applying CNNs For Classifying 2D Sensor Data - Matthias Peussner,https://www.youtube.com/watch?v=Td1iaz_ZouA,Td1iaz_ZouA,PyCon DE,@PyConDE,https://www.youtube.com/@PyConDE,20181105,1944,271,1,,,Education,,https://i.ytimg.com/vi_webp/Td1iaz_ZouA/maxresdefault.webp,0,False,False,public,https://www.youtube.com/watch?v=Td1iaz_ZouA,https://www.youtube.com/watch?v=Td1iaz_ZouA
55,PyCon.DE 2018: Understanding Agent Connections Using NetworkX - Cheuk Ting Ho,https://www.youtube.com/watch?v=h_nYy9XEPvY,h_nYy9XEPvY,PyCon DE,@PyConDE,https://www.youtube.com/@PyConDE,20181105,1763,355,3,1.0,,Education,"Network analysis is getting more and more attention in Business Intelligence, people hope to get information out of the structure of an organization or a communication network. In this talk, we use the hotel room search requests from travel agents, including online public website, B2C, B2B and B2B2C, to build a relational network among them. By using this network as an example, we demonstrate how insights can be extract by studying network properties.

In the first half of the talk, we will explain how the network is built using NetworkX, an open-source python library that is designed for the creation, manipulation, and study of the structure, dynamics, and functions of complex networks. When 2 agents are making the same search at the same time , a link ( or an “edge” in network analysts terms) is made pointing form the initial searcher to the subsequent searcher. Using a list of these searches, a directed graph is built. We will also demonstrate how to pick the biggest connected component out form the graph. In the second half, with the graphs created, we show how different functions of NetworkX can be used to study the graphs. By compare the graph properties of our graph to the other popular network graphs, we can get the insight of how the network was created. Also by studying the graphs, we can understand the behavior of the agents and can even figure out which agents are acting as main hubs in the network.

This talk is for people who are interested in network analysis and would like to see how it can be used in a business case. Audiences with any level of python experience can learn some basic concept of network analysis work and how it can be applied to provide business insights.",https://i.ytimg.com/vi_webp/h_nYy9XEPvY/maxresdefault.webp,0,False,False,public,https://www.youtube.com/watch?v=h_nYy9XEPvY,https://www.youtube.com/watch?v=h_nYy9XEPvY
56,PyCon.DE 2018: Binder - Lowering The Bar To Sharing Interactive Software - Tim Head,https://www.youtube.com/watch?v=TQY_fVPEWTw,TQY_fVPEWTw,PyCon DE,@PyConDE,https://www.youtube.com/@PyConDE,20181105,1833,75,1,1.0,,Education,"The Binder project drastically lowers the bar to sharing and re-using software. As a user wanting to try out someone else’s work I only have to click a single link. As the author preparing a binder-ready project is much easier than having to support many different platforms and for many projects involves little additional work.

In this talk I will introduce the audience to the concepts and ideas behind the Binder project. I will showcase examples from the community to illustrate use-cases and show off the power of Binder.

Three pieces of software power Binder: repo2docker, BinderHub and JupyterHub. Using an example repository I will go through the steps required to make a repository binder-ready and what happens when a user launches it. At each step I will illustrate the role that each of the three software components play and how they interact.

Binder is a project created by its community. I will present pathways for getting involved with the community.

To wrap up I will highlight plans for future developments and features of Binder.",https://i.ytimg.com/vi_webp/TQY_fVPEWTw/maxresdefault.webp,0,False,False,public,https://www.youtube.com/watch?v=TQY_fVPEWTw,https://www.youtube.com/watch?v=TQY_fVPEWTw
57,"PyCon.DE 2018: Pyccel, A Fortran Static Compiler For Scientific HP Computing - Ratnani Ahmed",https://www.youtube.com/watch?v=79FhJgy27bU,79FhJgy27bU,PyCon DE,@PyConDE,https://www.youtube.com/@PyConDE,20181105,934,902,18,1.0,,Education,"Pyccel is a new static compiler for Python that uses Fortran as backend language while enabling High-Performance Computing HPC capabilities.

Fortran is a computer language for scientific programming that is tailored for efficient run-time execution on a wide variety of processors. Even if the 2003 and 2008 standards added major improvements like OOP, Coarrays, Submodules, do concurrent, etc ... they are not covered by all available compilers. Moreover, the Fortran developer still suffers from the lack of meta-programming compared to C++ ones. Therefore, it is more and more difficult for applied mathematicians and computational physicists to write applications at the state of art (targeting CPUs, GPUs, MICs) while implementing complicated algorithms or numerical schemes.

Pyccel can be used in two cases:

accelerate Python code by converting it to Fortran and calling f2py,
generate portable HPC Fortran codes from a DSL using the Python syntax.
In order to achieve the second point, we developed an internal DSL for types and macros. The later is used to map sentences based on mpi4py, scipy.linalg.blas or lapack onto the appropriate calls in Fortran. Moreover, two parsers, for OpenMP and OpenACC, were added too, allowing for explicit parallelism through the use of pragmas.

Last but not least, Pyccel is an extension of Sympy. Actually, it converts a Python code to symbolic expressions/trees, from a Full Syntax Tree (RedBaron), then annotates the new AST using types or different settings provided by the user.

In this talk, after a brief description of Pyccel, I will show different applications including Finite Elements (1d, 2d, 3d), Semi-Lagrangian schemes (4d), Kronecker linear solvers, diagnostics for 5D kinetic simulations and Machine Learning for Partial Differential Equations.",https://i.ytimg.com/vi_webp/79FhJgy27bU/maxresdefault.webp,0,False,False,public,https://www.youtube.com/watch?v=79FhJgy27bU,https://www.youtube.com/watch?v=79FhJgy27bU
58,PyCon.DE 2018: How To Deploy ML Models As APIs Without Going Nuts - Anand Chitipothu,https://www.youtube.com/watch?v=zud6CTR1NLk,zud6CTR1NLk,PyCon DE,@PyConDE,https://www.youtube.com/@PyConDE,20181105,2448,182,2,,,Education,"Often, the most convenient way to deploy a machine model is an API. It allows accessing it from various programming environments and also decouples the development and deployment of the models from its use.

However, building an good API is hard. It involves many nitty-gritties and many of them need to repeated everytime an API is built. Also, it is very important to have a client library so that the API can be easily accessed. If you every plan to use it from Javascript directly, then you need to worry about cross-origin-resource-sharing etc. All things add up and building APIs for machine very tedious.

In this talk demonstrates how deploying machine learning models an APIs can be made fun by using right programming abstractions. This presents couple of opensource libraries firefly and rorolite which are built for this very purpose.",https://i.ytimg.com/vi_webp/zud6CTR1NLk/maxresdefault.webp,0,False,False,public,https://www.youtube.com/watch?v=zud6CTR1NLk,https://www.youtube.com/watch?v=zud6CTR1NLk
59,PyCon.DE 2018: Satellite Image Segmentation Photovoltaic Potential Estimation - Johannes Oos,https://www.youtube.com/watch?v=SoJuk08u0DI,SoJuk08u0DI,PyCon DE,@PyConDE,https://www.youtube.com/@PyConDE,20181105,1561,1248,12,,,Education,"The used technologies are python based and include: MongoDB tensorflow Flask google.cloud python API

A dataset of labelled satellite images is created. Several networks are trained and tested on this dataset. The network is deployed on a production server.

The results of the classification/segmentaion are used to feed python based photovotlaic simulation libaries. The output is displayed and the results (the potential) evaluated.",https://i.ytimg.com/vi_webp/SoJuk08u0DI/maxresdefault.webp,0,False,False,public,https://www.youtube.com/watch?v=SoJuk08u0DI,https://www.youtube.com/watch?v=SoJuk08u0DI
60,PyCon.DE 2018: Quantifying Hidden Variables Using Bayesian Inference - Omer Yuksel,https://www.youtube.com/watch?v=HAGDgA6WAQg,HAGDgA6WAQg,PyCon DE,@PyConDE,https://www.youtube.com/@PyConDE,20181105,1116,208,3,,,Education,"Technology-driven trading is a field with many challenges, and performance and availability of the network communication is essential to the business. To have a good understanding on the performance and availability, we monitor certain metrics - however not every interesting metric is readily available to measure. Some of these have to be inferred from the data we see in production by incorporating our own knowledge. What complicates this further is that the relationship between the hidden variables and the output data is not a deterministic one, as we are often dealing with a stochastic system.

Bayesian inference is a suitable way to tackle this issue - it allows encoding our knowledge as a prior distribution of the model parameters. Here we will go through real-world uses of Bayesian inference at IMC, using PyMC3 to make an estimate for the hidden metrics in the network traffic.

Knowledge: No prior knowledge of PyMC3 is required. Since this is a short presentation, the talk with approach the problem and the solution at a high level instead of implementation details.",https://i.ytimg.com/vi_webp/HAGDgA6WAQg/maxresdefault.webp,0,False,False,public,https://www.youtube.com/watch?v=HAGDgA6WAQg,https://www.youtube.com/watch?v=HAGDgA6WAQg
61,PyCon.DE 2018: Introduction To Docker For Pythonistas - Jan Wagner,https://www.youtube.com/watch?v=Fqq6F68SQFY,Fqq6F68SQFY,PyCon DE,@PyConDE,https://www.youtube.com/@PyConDE,20181105,1906,457,5,,,Education,"My Talk aims to introduce you to Docker and how it works, how you can use prebuild Images from the Docker-Hub and how you can make your own Images.
In more Detail, the following Points will be covered:

What is Docker
Classic Virtualization vs. Container Virtualization
The Docker-Hub / Using prebuild Images
You need a local MongoDB/MySQL/whatever? No Problem!
Make your own Image a.k.a. “The Dockerfile”
Build and Ship your Flask-App without “But it works on my machine!” – Problems
Build and Ship your Data Science – Environment, reproducibility for the win!
… The other Side of the Medal …
More to read and watch!",https://i.ytimg.com/vi_webp/Fqq6F68SQFY/maxresdefault.webp,0,False,False,public,https://www.youtube.com/watch?v=Fqq6F68SQFY,https://www.youtube.com/watch?v=Fqq6F68SQFY
62,PyCon.DE 2018: Python Birdies: Codegolfing For Better Understanding (And Fun) - Jonathan Oberländer,https://www.youtube.com/watch?v=DPKSSxtVXuY,DPKSSxtVXuY,PyCon DE,@PyConDE,https://www.youtube.com/@PyConDE,20181105,822,1693,61,1.0,,Education,"Codegolfing means taking a programming task and trying to answer it with a byte-minimal correct solution. Such an answer often takes shortcuts, is horribly inefficient, and definitely violates almost 100% of PEP 8. Like any playful interaction with a subject, it can however improve your understanding of it, as well as teach you about weird interactions regarding operator precedence, lexer quirks and more.

After going over basic definitions, I will take a small number of well-known or straightforward programming tasks and go through the act of golfing an answer together step by step.",https://i.ytimg.com/vi_webp/DPKSSxtVXuY/maxresdefault.webp,0,False,False,public,https://www.youtube.com/watch?v=DPKSSxtVXuY,https://www.youtube.com/watch?v=DPKSSxtVXuY
63,PyCon.DE 2018: Big Data Systems Performance: The Little Shop Of Horrors - Jens Dittrich,https://www.youtube.com/watch?v=FLTC2N3xrug,FLTC2N3xrug,PyCon DE,@PyConDE,https://www.youtube.com/@PyConDE,20181105,2581,286,5,,,Education,"The confusion around terms such as like NoSQL, Big Data, Data Science, Spark, SQL, and Data Lakes often creates more fog than clarity. However, clarity about the underlying technologies is crucial to designing the best technical solution in any field relying on huge amounts of data including data science, machine learning, but also more traditional analytical systems such as data integration, data warehousing, reporting, and OLAP.

In my presentation, I will show that often at least three dimensions are cluttered and confused in discussions when it comes to data management: First, buzzwords (labels & terms like ""big data"", ""AI"", ""data lake""); second, data design patterns (principles & best practices like: selection push-down, materialization, indexing); and Third, software platforms (concrete implementations & frameworks like: Python, DBMS, Spark, and NoSQL-systems).

Only by keeping these three dimensions apart, it is possible to create technically-sound architectures in the field of big data analytics.

I will show concrete examples, which through a simple redesign and wise choice of the right tools and technologies, run thereby up to 1000 times faster. This in turn triggers tremendous savings in terms of development time, hardware costs, and maintenance effort.",https://i.ytimg.com/vi_webp/FLTC2N3xrug/maxresdefault.webp,0,False,False,public,https://www.youtube.com/watch?v=FLTC2N3xrug,https://www.youtube.com/watch?v=FLTC2N3xrug
64,PyCon.DE 2018: ZODB: The Graph Database For PythonDevelopers - Christopher Lozinski,https://www.youtube.com/watch?v=tcYyiqbUdKI,tcYyiqbUdKI,PyCon DE,@PyConDE,https://www.youtube.com/@PyConDE,20181105,1627,918,8,2.0,,Education,"You can see the current version of the slides at https://pythonlinks.info/presentations/zodbtalk.pdf

I invite you to first watch the full but slightly earlier version of the talk at PythonLinks.info/zodb

And then read the following summary to see what else is being added to the talk.

The ZODB is a mature graph database written in Python and optimized in C. Just subclass off of class Persistent Object and Persistent Container, and your objects, graphs and applications become persistent.

The market for Graph Databases has recently exploded, as evidenced by over $200 Million invested in graph database companies. Most of the graph databases are written in Java.

If you are a Python developer, you will find much greater productivity using a graph database written in Python, than one written in statically bound Java. You cannot add or remove an attribute to an object at run-time in a statically typed language. Furthermore, the major Java databases constrain you to one of several persistent data types. Persistent Python, supported by the ZODB allows you to make any Python data structure persistent. Publishing JSON, YAML and Pickles are well supported. GraphQL is conceptually very close to the ZODB schema approach.

Okay, the ZODB is interesting, but is it risky? The ZODB is mature, rock solid and well supported. The ZODB is quite heavily used in the Plone world. Just the government of Brazil has over 100 websites using the ZODB. That includes the President's office, parliament and many other governmet offices. Recently the ZODB has been reengineered. It now supports thousands of write transactions per second.

The major applications of graph databases are fraud detection, social networks and computer networks. NLP is an interesting application area.

The talk reviews the basic concepts of traversal and views on objects.

It is important to understand the basics of how objects are stored on disk. Objects are pickled. There are multiple ways to store those pickles. When using File Storage, the objects in a transaction are appended to he end of the database files. When using relstorage, a record is created with the object id, the version number, and the pickle. The talk reviews how objects are distributed across multiple Python processes. With ZEO the pickles are served across the network. Connections are encrypted. The talk also discusses how to build real-time (chat and iOT) applications using the MQTT message broker with the ZODB.

Performance, scalability, and number of objects, are all discussed. Comparisons are made to traditional relational databases.

The ZODB Demo makes it very easy to start building your own applications on top of the ZODB. You can start by customizing the TreeLeaf, TreeBranch and TreeRoot classes and their templates. You get CRUD for free.

The demo includes traditional relational CRUD, Create, Read, Update, and Delete. But it also includes the extended graph CRUD. Rename a Leaf or Branch. Cut and paste leaves or branches, copy and paste leaves or branches. View and restore historic versions are demonstrated.

Of course the real reason to use a graph database is to improve the user experience. A basic concept in human factors is to limit lists to 7 items. That is why librarians use hierarchy. The Panama Papers journalists said a graph database was more intuitive. Have you ever selected your country from a list of 150 countries. Much better to use a hierarchical list. Have you ever used a Google map with thousands of pins. Much better to have one page for each city.

And of course the most important reason for using a graph database is not what the software does, but how it changes how we humans think about our problems, and how we make decisions. Graph databases enable a different approach to distributing applications across the network. They encourage a different approach to managing the git development process. They enable a different set of decisions to be made.

By the end of this talk, readers should have a much better appreciation for the rich but little known and under appreciated ZODB ecosystem.",https://i.ytimg.com/vi_webp/tcYyiqbUdKI/maxresdefault.webp,0,False,False,public,https://www.youtube.com/watch?v=tcYyiqbUdKI,https://www.youtube.com/watch?v=tcYyiqbUdKI
65,PyCon.DE 2018: Interactive Visualization Of Traffic Data Using Bokeh - Dr. Patrik Hlobil,https://www.youtube.com/watch?v=GOE__moR0eo,GOE__moR0eo,PyCon DE,@PyConDE,https://www.youtube.com/@PyConDE,20181105,1812,2019,29,5.0,,Education,"This talk covers the creation of highly interactive and dynamic visualization (as HTML) using Python, that can still be opened with any modern browser. Using real-world examples we will show our usual workflow for processing and creating visualizations using Bokeh. The following topics will be covered:

Quick Introduction into Transport Modelling
Performing GIS Data Analysis and Processing with GeoPandas, Pandas and Dask
Plotting Points, Lines and Polygons on Geographic Maps using Bokeh
How to use Javascript-Callbacks to make the plot interactive and dynamic, but still exportable to static HTML
Visualizing huge amounts of data on a map with DataShader",https://i.ytimg.com/vi_webp/GOE__moR0eo/maxresdefault.webp,0,False,False,public,https://www.youtube.com/watch?v=GOE__moR0eo,https://www.youtube.com/watch?v=GOE__moR0eo
66,PyCon.DE 2018: Advanced Analytics Today - Martin Schütz,https://www.youtube.com/watch?v=SXaZYSZk6Bg,SXaZYSZk6Bg,PyCon DE,@PyConDE,https://www.youtube.com/@PyConDE,20181105,2377,97,0,,,Education,"The times when a single statistician in companies created analytical models and put them into production in person as a whole, have long been a thing of the past. Today, our customers are facing important challenges: the interaction of SAS data scientists and open source programmers in solving a technical problem and the orderly and regulated transfer of analytical models to production. The talk will show how SAS 'analytical platform covers the entire spectrum, from modeling through different types of users to the direct operationalization of models.",https://i.ytimg.com/vi_webp/SXaZYSZk6Bg/maxresdefault.webp,0,False,False,public,https://www.youtube.com/watch?v=SXaZYSZk6Bg,https://www.youtube.com/watch?v=SXaZYSZk6Bg
67,PyCon.DE 2018: Processing Geodata Using Python - Martin Christen,https://www.youtube.com/watch?v=49QwoR2aG74,49QwoR2aG74,PyCon DE,@PyConDE,https://www.youtube.com/@PyConDE,20181105,1723,605,8,1.0,,Education,"There is a large amount of Python modules available suitable for spatial data processing. In this talk, it is shown how to analyze, manipulate and visualize geospatial data by using open source modules. The following modules will be introduced:

Shapely - Manipulation and analysis of geometric objects
Fiona - The pythonic way to handle vector data
rasterio - The pythonic way to handle raster data
pyproj - transforming spatial reference systems
GeoPandas - Geospatial analysis
Folium - Creating maps",https://i.ytimg.com/vi_webp/49QwoR2aG74/maxresdefault.webp,0,False,False,public,https://www.youtube.com/watch?v=49QwoR2aG74,https://www.youtube.com/watch?v=49QwoR2aG74
68,PyCon.DE 2018: Stretchy - NoSQL Database Behind REST API - Artur Scholz,https://www.youtube.com/watch?v=FzXejIzMQ30,FzXejIzMQ30,PyCon DE,@PyConDE,https://www.youtube.com/@PyConDE,20181105,970,170,2,,,Education,"Stretchy is built as a microservice that provides a simple and intuitive REST API with a NoSQL database as backend. No need for database migrations or upfront schema design. The basic CRUD (create, read, update, delete) operations are available for getting data in and out from the database.

Stretchy is free and open source software built with Python 3, using Flask web framework. It currently uses MongoDB as its backend database. Since it is interfaced through the REST API however, Stretchy is technology agnostic and developers can create bindings to other databases, including SQL databases.

This presentation reviews the reasons for creating Stretchy, its current applications, an short tutorial on how to use it, and tips on how to deploy it.",https://i.ytimg.com/vi_webp/FzXejIzMQ30/maxresdefault.webp,0,False,False,public,https://www.youtube.com/watch?v=FzXejIzMQ30,https://www.youtube.com/watch?v=FzXejIzMQ30
69,PyCon.DE 2018: Observe All Your Applications - Christoph Heer,https://www.youtube.com/watch?v=F6-nvgnlr9Y,F6-nvgnlr9Y,PyCon DE,@PyConDE,https://www.youtube.com/@PyConDE,20181105,1708,331,7,,,Education,"You just deployed your new version of an application or micro-service; how do you know everything works as expected? You run your comprehensive test suite to verify functional correctness for known scenarios and performance tests before deploying, but does your application really work at the moment or is it just responding with error messages to all incoming requests?

I’m part of the team that runs a huge infrastructure for the SAP HANA development. This infrastructure is vital for nearly all development & testing activities of SAP HANA. As this infrastructure is powered by multiple in-house developed applications, we immediately want to know if an application starts to fail and we need to be able to quickly diagnose what caused the failure.

This talk will give you an overview how we monitor our full stack from the 2000 physical machines up to the 10,000 parallel running Python application processes, micro-service instances and batch processing jobs. It includes a review about the used tools, bad and good examples of instrumentation in Python code, the resulting visualisation and an outlook on upcoming improvements.",https://i.ytimg.com/vi_webp/F6-nvgnlr9Y/maxresdefault.webp,0,False,False,public,https://www.youtube.com/watch?v=F6-nvgnlr9Y,https://www.youtube.com/watch?v=F6-nvgnlr9Y
70,PyCon.DE 2018: Solving Data Science Probs With A Jupyter Notebook And SAP HANA's Libs - F. Gottfried,https://www.youtube.com/watch?v=iHCxCgjbmW8,iHCxCgjbmW8,PyCon DE,@PyConDE,https://www.youtube.com/@PyConDE,20181105,1750,440,2,,,Education,"Companies store their data in databases with highly restricted access regulations. The latest regulatorily changes enforces the need to work on the datasets in this controlled environment without created additional external copies. However Data Scientists prefer to work with tools they are most familiar like Python, R and Jupyter Notebooks using to a large amount of open-source packages (numpy, matplotlib, pandas, ..). SAP HANA provides highly optimized in-database machine learning libraries. In this talk we will present how a Data Scientist can work in an environment he/she is most familiar with and access the data stored in SAP HANA using SAP HANA machine learning libraries with a scikit-learn type interface. Data will remain in the database and will be exposed as dataframes (similar to Pandas dataframes). We will explain the software architecture and present a complete end-to-end use case by using a Jupyter Notebook.",https://i.ytimg.com/vi_webp/iHCxCgjbmW8/maxresdefault.webp,0,False,False,public,https://www.youtube.com/watch?v=iHCxCgjbmW8,https://www.youtube.com/watch?v=iHCxCgjbmW8
71,PyCon.DE 2018: Microservices From The Trenches: How We Deliver Sofas Across Europe - Christian Barra,https://www.youtube.com/watch?v=9hu95HDngO0,9hu95HDngO0,PyCon DE,@PyConDE,https://www.youtube.com/@PyConDE,20181105,1083,88,2,,,Education,"At made.com we use micro-services written in Python to power our entire backend system and deliver an incredible amount of orders each week. During this presentation I will explain what are micro-services and compare them to monolith applications. By analysing what are the differences between micro-services and monolith applications I will show why you need them and for which situations they are extremely useful. I will also talk about what you need on different levels regarding infrastructure, knowledge and experience to get the most out of a micro-services architecture. The last part of the presentation is dedicated to the drawbacks of running a micro-services architecture and sharing some solutions. I will conclude sharing some useful resources about micro services and taking some questions.""",https://i.ytimg.com/vi_webp/9hu95HDngO0/maxresdefault.webp,0,False,False,public,https://www.youtube.com/watch?v=9hu95HDngO0,https://www.youtube.com/watch?v=9hu95HDngO0
72,PyCon.DE 2018: Python And PostgreSQL - Stephane Wirtel,https://www.youtube.com/watch?v=D_08fKBYfdY,D_08fKBYfdY,PyCon DE,@PyConDE,https://www.youtube.com/@PyConDE,20181105,1893,602,7,1.0,,Education,,https://i.ytimg.com/vi_webp/D_08fKBYfdY/maxresdefault.webp,0,False,False,public,https://www.youtube.com/watch?v=D_08fKBYfdY,https://www.youtube.com/watch?v=D_08fKBYfdY
73,PyCon.DE 2018: Developing Ecommerce Platform With Django Oscar - Alexander Gaevsky,https://www.youtube.com/watch?v=7b8r1eioNPY,7b8r1eioNPY,PyCon DE,@PyConDE,https://www.youtube.com/@PyConDE,20181105,2201,5770,65,1.0,,Education,"Modern technologies has changed the way how we buy and sell in the Internet nowadays. Thus, we also constantly evolve the way how we build projects to sell and buy goods using our technologies of choice - Python and Django. Ease of customization and flexibility made Oscar application of my choice for building custom ecommerce platforms on top of Django, allowing to satisfy client requirements without necessity of implementing solution from scratch, since Oscar have ready-made applications for basket, checkout, shipping etc, available for the further tweak and refinement.

I’ve been using and contributing to Django Oscar since 2015, designed and supported various ecommerce projects in different fields (food, accessories, shoes) and sizes during this time. In this talk I’m going to share some of the experience and conclusions about building complex ecommerce platform using Django, and eventually, Django Oscar.",https://i.ytimg.com/vi_webp/7b8r1eioNPY/maxresdefault.webp,0,False,False,public,https://www.youtube.com/watch?v=7b8r1eioNPY,https://www.youtube.com/watch?v=7b8r1eioNPY
74,PyCon.DE 2018: Your First NLP Project: Peaks And Pitfalls Of Unstructured Data - Anna Widiger,https://www.youtube.com/watch?v=bf2hISLgK84,bf2hISLgK84,PyCon DE,@PyConDE,https://www.youtube.com/@PyConDE,20181105,2138,377,7,1.0,,Education,"Natural Language Processing improves the quality of your text data for future analysis and increases the accuracy of your machine learning model. It’s important to know what goes into the bag of words and what are some potential do's and don'ts of text pre-processing. Which text normalization steps are necessary and which ones are “nice-to-have”? Why is classic NLP still relevant in the age of Deep Learning? What metrics can be used to compare word frequencies and what can machine learning algorithms do with those numbers? This NLP talk provides answers to these questions and more! You'll see three examples of NLP pipelines using spaCy: sentiment analysis and emoji in tweets, named entity recognition in Yelp reviews, and multilingual topic modeling for news articles.",https://i.ytimg.com/vi_webp/bf2hISLgK84/maxresdefault.webp,0,False,False,public,https://www.youtube.com/watch?v=bf2hISLgK84,https://www.youtube.com/watch?v=bf2hISLgK84
75,PyCon.DE 2018: Germany's Next Topic Model - Thomas Mayer,https://www.youtube.com/watch?v=sI7VpFNiy_I,sI7VpFNiy_I,PyCon DE,@PyConDE,https://www.youtube.com/@PyConDE,20181105,2025,836,10,2.0,,Education,"Identifying topic models for user generated content like hotel reviews turns out to be difficult with the standard approach of LDA (Latent Dirichlet Allocation; Blei et al., 2003). Hotel review texts usually don't differ as much in the topics that are covered as is typical with other genres such as Wikipedia or newsgroup articles where there is commonly only a very small set of topics present in each document.

To this end, we developed our own approach to topic modeling that is especially tailored to non-edited texts like hotel reviews. The approach can be divided into three major steps. First, using the concept of second-order cooccurrences we define a contextual similarity score that enables us to identify words that are similar with respect to certain topics. This score allows us to build up a topic network where nodes are words and edges the contextual similarity between the words. With the help of algorithms from graph theory, like the Infomap algorithm (Rosvall and Bergstrom, 2008), we are able to detect clusters of highly connected words that can be identified as topics in our review texts. In a further step, we use these clusters and the respective words to get a topic similarity score for each word in the network. In other words, we transform a hard clustering of words into topics into a probability score of how likely a certain word belongs to a given topic/cluster.

The presentation is structured as follows:

- short overview of existing topic modeling approaches
- shortcomings of these approaches with respect to our domain (hotel review texts)
- explaining the contextual similarity score and its relationship to word embeddings
- topic modeling step through community detection
- turning the hard clustering into a fuzzy topic model

References: David M. Blei, Andrew Y. Ng, Michael I. Jordan: Latent dirichlet allocation. In: Journal of Machine Learning Research, Jg. 3 (2003), S. 993–1022, ISSN 1532-4435 M. Rosvall and C. T. Bergstrom, Maps of information flow reveal community structure in complex networks, PNAS 105, 1118 (2008) http://dx.doi.org/10.1073/pnas.0706851105, http://arxiv.org/abs/0707.0609",https://i.ytimg.com/vi_webp/sI7VpFNiy_I/maxresdefault.webp,0,False,False,public,https://www.youtube.com/watch?v=sI7VpFNiy_I,https://www.youtube.com/watch?v=sI7VpFNiy_I
76,PyCon.DE 2018: The Role Of Domain Specific Languages And Language Design In ML - Mattia Ferrini,https://www.youtube.com/watch?v=omcObOxAEdU,omcObOxAEdU,PyCon DE,@PyConDE,https://www.youtube.com/@PyConDE,20181105,1903,254,2,1.0,,Education,"What programming language do you use to develop Machine Learning (ML) and Artificial Intelligence (AI) systems? This is one of the most frequently asked question about my work. The short answer: a mix of Scala, Python and F# The long answer: DSLs are a hot topic and play a crucial role in many of the tasks Machine Learning (ML) and Artificial Intelligence (AI) systems need to tackle. Expertise in DSLs is mission critical in ML and AI systems.",https://i.ytimg.com/vi_webp/omcObOxAEdU/maxresdefault.webp,0,False,False,public,https://www.youtube.com/watch?v=omcObOxAEdU,https://www.youtube.com/watch?v=omcObOxAEdU
77,PyCon.DE 2018: Building Semi-supervised Classifiers When Labeled Data Is Unavailable - H. Niemeyer,https://www.youtube.com/watch?v=0efyjq5rWS4,0efyjq5rWS4,PyCon DE,@PyConDE,https://www.youtube.com/@PyConDE,20181105,2793,5025,96,3.0,,Education,"In many situations large datasets are available but unfortunately labeling is expensive and time consuming. Active Learning is a concept for building classifiers by letting the algorithm choose the training data it uses. This achieves greater accuracy than just labeling a random subset of the available dataset.

The active learning algorithm selects some unlabeled data instances which are then labeled by a human annotator. Given this information a classifier is trained and new instances for the human annotator to label are selected. This iterative process tries to label as few instances as possible while achieving high classification accuracy.

In this talk I will give a general overview of the core concepts and techniques of active learning like algorithms for selecting the queries and convergence criteria.",https://i.ytimg.com/vi_webp/0efyjq5rWS4/maxresdefault.webp,0,False,False,public,https://www.youtube.com/watch?v=0efyjq5rWS4,https://www.youtube.com/watch?v=0efyjq5rWS4
78,PyCon.DE 2018: A Day Has Only 24±1 Hours: Import Pytz - Miroslav Šedivý,https://www.youtube.com/watch?v=IRGKlwkio0Y,IRGKlwkio0Y,PyCon DE,@PyConDE,https://www.youtube.com/@PyConDE,20181105,1522,458,5,,,Education,"On the last Sunday of October “we get one more hour of sleep” but may spend much more time debugging code dealing with the timezones, daylight saving time shifts and datetime stuff in general.

We'll look at a few pitfalls you may encounter when working with datetimes in Python. We'll discover the pytz module and explain why pytz.all_timezones contains over 500 individual timezones. We'll also find the reason why pytz is not part of the standard Python, why it gets updated so often and why even that won't solve all your problems.",https://i.ytimg.com/vi_webp/IRGKlwkio0Y/maxresdefault.webp,0,False,False,public,https://www.youtube.com/watch?v=IRGKlwkio0Y,https://www.youtube.com/watch?v=IRGKlwkio0Y
79,PyCon.DE 2018: Python Dependency Management - Patrick Muehlbauer,https://www.youtube.com/watch?v=pA4XriRWVxQ,pA4XriRWVxQ,PyCon DE,@PyConDE,https://www.youtube.com/@PyConDE,20181105,1560,2843,39,,,Education,"For a long time there were pip and virtualenv which were used together with requirements.txt files to manage Python dependencies. Nowadays there are various other tools that help you improve the workflow.

We will have a look at popular projects like

- pip-compile
- hatch
- poetry
- Pipenv

After the talk you will be able to decide for yourself which approach suits your usecases best and don't have to rely on rants postet on reddit.",https://i.ytimg.com/vi_webp/pA4XriRWVxQ/maxresdefault.webp,0,False,False,public,https://www.youtube.com/watch?v=pA4XriRWVxQ,https://www.youtube.com/watch?v=pA4XriRWVxQ
80,PyCon.DE 2018: Distributed Hyperparameter Search With Sklearn And Kubernetes - Jakob Karalus,https://www.youtube.com/watch?v=blUc9w3QLuA,blUc9w3QLuA,PyCon DE,@PyConDE,https://www.youtube.com/@PyConDE,20181105,950,197,2,,,Education,"While sklearn provides a good interface to do hyperparameter search on large & complex model (pipelines), doing these can take up a lot of time. The traditional way usually includes one beefy machine and a lot of waiting. In other cases, people tend to “manually” schedule parameter ranges between nodes, but that can also be problematic since these won't talk to each other. Kubernetes itself is currently the most prominent scheduler and shines at distributing task, but is a pretty complex system in itself.

In this talk, I will show how you can harness the scheduling of kubernetes for distributing hyperparameter search with sklearn onto a cluster of nodes. This can be achieved quite easily and with just a few changes to the original code, so the Data Scientist won't be bothered by complex kubernetes internals.",https://i.ytimg.com/vi_webp/blUc9w3QLuA/maxresdefault.webp,0,False,False,public,https://www.youtube.com/watch?v=blUc9w3QLuA,https://www.youtube.com/watch?v=blUc9w3QLuA
81,PyCon.DE 2018 LT: Decrypting SSL With Python/Tshark - Johannes Frank,https://www.youtube.com/watch?v=F5DSt6YMib8,F5DSt6YMib8,PyCon DE,@PyConDE,https://www.youtube.com/@PyConDE,20181105,213,1117,7,1.0,,Education,,https://i.ytimg.com/vi_webp/F5DSt6YMib8/maxresdefault.webp,0,False,False,public,https://www.youtube.com/watch?v=F5DSt6YMib8,https://www.youtube.com/watch?v=F5DSt6YMib8
82,"PyCon.DE 2018 LT: Python Is Slow, Right? - Stefan Nordhausen",https://www.youtube.com/watch?v=a579bDZl6o0,a579bDZl6o0,PyCon DE,@PyConDE,https://www.youtube.com/@PyConDE,20181105,265,877,30,,,Education,,https://i.ytimg.com/vi_webp/a579bDZl6o0/maxresdefault.webp,0,False,False,public,https://www.youtube.com/watch?v=a579bDZl6o0,https://www.youtube.com/watch?v=a579bDZl6o0
83,PyCon.DE 2018 LT: Repository Line Length Analysis - Peer Wagner,https://www.youtube.com/watch?v=_O59xhabEHA,_O59xhabEHA,PyCon DE,@PyConDE,https://www.youtube.com/@PyConDE,20181105,255,94,0,,,Education,,https://i.ytimg.com/vi_webp/_O59xhabEHA/maxresdefault.webp,0,False,False,public,https://www.youtube.com/watch?v=_O59xhabEHA,https://www.youtube.com/watch?v=_O59xhabEHA
84,PyCon.DE 2018 LT: Prophet Fon Time Series: Do You Use It? - Gregory Wallace,https://www.youtube.com/watch?v=s9wolo6Xa1c,s9wolo6Xa1c,PyCon DE,@PyConDE,https://www.youtube.com/@PyConDE,20181105,159,227,2,,,Education,,https://i.ytimg.com/vi_webp/s9wolo6Xa1c/maxresdefault.webp,0,False,False,public,https://www.youtube.com/watch?v=s9wolo6Xa1c,https://www.youtube.com/watch?v=s9wolo6Xa1c
85,PyCon.DE 2018 LT: The Best Python Videos - PythonLinks.info,https://www.youtube.com/watch?v=-qyIPWdaaAI,-qyIPWdaaAI,PyCon DE,@PyConDE,https://www.youtube.com/@PyConDE,20181105,255,138,1,1.0,,Education,,https://i.ytimg.com/vi_webp/-qyIPWdaaAI/maxresdefault.webp,0,False,False,public,https://www.youtube.com/watch?v=-qyIPWdaaAI,https://www.youtube.com/watch?v=-qyIPWdaaAI
86,PyCon.DE 2018 LT: Jupyter Notebook Best Practices,https://www.youtube.com/watch?v=Zrnr5-0Inns,Zrnr5-0Inns,PyCon DE,@PyConDE,https://www.youtube.com/@PyConDE,20181105,325,2852,50,3.0,,Education,,https://i.ytimg.com/vi_webp/Zrnr5-0Inns/maxresdefault.webp,0,False,False,public,https://www.youtube.com/watch?v=Zrnr5-0Inns,https://www.youtube.com/watch?v=Zrnr5-0Inns
87,PyCon.DE 2018 LT: Python VR With RatCAVE - Nicholas Del Grosso,https://www.youtube.com/watch?v=so7bKzmPTIs,so7bKzmPTIs,PyCon DE,@PyConDE,https://www.youtube.com/@PyConDE,20181105,169,1182,15,1.0,,Education,,https://i.ytimg.com/vi_webp/so7bKzmPTIs/maxresdefault.webp,0,False,False,public,https://www.youtube.com/watch?v=so7bKzmPTIs,https://www.youtube.com/watch?v=so7bKzmPTIs
88,"PyCon.DE 2018 LT: xtensor-python - The Fast, Universal, C++ ndarray - Wolf Vollprecht",https://www.youtube.com/watch?v=HbPBKqctDbw,HbPBKqctDbw,PyCon DE,@PyConDE,https://www.youtube.com/@PyConDE,20181105,308,497,13,1.0,,Education,,https://i.ytimg.com/vi_webp/HbPBKqctDbw/maxresdefault.webp,0,False,False,public,https://www.youtube.com/watch?v=HbPBKqctDbw,https://www.youtube.com/watch?v=HbPBKqctDbw
89,PyCon.DE 2018 LT: PyComic Con - Alexander CS Hendorf,https://www.youtube.com/watch?v=y4SqSUJPUWA,y4SqSUJPUWA,PyCon DE,@PyConDE,https://www.youtube.com/@PyConDE,20181105,154,68,0,,,Education,,https://i.ytimg.com/vi_webp/y4SqSUJPUWA/maxresdefault.webp,0,False,False,public,https://www.youtube.com/watch?v=y4SqSUJPUWA,https://www.youtube.com/watch?v=y4SqSUJPUWA
90,PyCon.DE 2018 LT: PyData Frankfurt - Alexander Bohn,https://www.youtube.com/watch?v=9to0C7J5m0Y,9to0C7J5m0Y,PyCon DE,@PyConDE,https://www.youtube.com/@PyConDE,20181105,93,39,0,,,Education,,https://i.ytimg.com/vi_webp/9to0C7J5m0Y/maxresdefault.webp,0,False,False,public,https://www.youtube.com/watch?v=9to0C7J5m0Y,https://www.youtube.com/watch?v=9to0C7J5m0Y
91,PyCon.DE 2018 LT: Python Is For Everybody - Nick,https://www.youtube.com/watch?v=w4LKTNtr-fg,w4LKTNtr-fg,PyCon DE,@PyConDE,https://www.youtube.com/@PyConDE,20181105,347,341,13,,,Education,,https://i.ytimg.com/vi_webp/w4LKTNtr-fg/maxresdefault.webp,0,False,False,public,https://www.youtube.com/watch?v=w4LKTNtr-fg,https://www.youtube.com/watch?v=w4LKTNtr-fg
92,PyCon.DE 2018 LT: Python AWS Dataclasses - Benjamin Weigel,https://www.youtube.com/watch?v=9hzD3GGZZE0,9hzD3GGZZE0,PyCon DE,@PyConDE,https://www.youtube.com/@PyConDE,20181105,175,124,3,,,Education,,https://i.ytimg.com/vi_webp/9hzD3GGZZE0/maxresdefault.webp,0,False,False,public,https://www.youtube.com/watch?v=9hzD3GGZZE0,https://www.youtube.com/watch?v=9hzD3GGZZE0
93,PyCon.DE 2018 LT: Hacktoberfest And You Can Have Pythin In Your Language - Cheuk,https://www.youtube.com/watch?v=oXlb4VG6nuc,oXlb4VG6nuc,PyCon DE,@PyConDE,https://www.youtube.com/@PyConDE,20181105,176,27,0,,,Education,,https://i.ytimg.com/vi_webp/oXlb4VG6nuc/maxresdefault.webp,0,False,False,public,https://www.youtube.com/watch?v=oXlb4VG6nuc,https://www.youtube.com/watch?v=oXlb4VG6nuc
94,PyCon.DE 2018 LT: PyLadies - Jessica Greene and PyLadies Berlin,https://www.youtube.com/watch?v=SVf3KbROu8k,SVf3KbROu8k,PyCon DE,@PyConDE,https://www.youtube.com/@PyConDE,20181105,234,175,2,,,Education,,https://i.ytimg.com/vi_webp/SVf3KbROu8k/maxresdefault.webp,0,False,False,public,https://www.youtube.com/watch?v=SVf3KbROu8k,https://www.youtube.com/watch?v=SVf3KbROu8k
95,PyCon.DE 2018 LT: Python On iOS - Ruud Van Der Ham,https://www.youtube.com/watch?v=htMH_b-Ofw0,htMH_b-Ofw0,PyCon DE,@PyConDE,https://www.youtube.com/@PyConDE,20181105,174,133,1,,,Education,,https://i.ytimg.com/vi_webp/htMH_b-Ofw0/maxresdefault.webp,0,False,False,public,https://www.youtube.com/watch?v=htMH_b-Ofw0,https://www.youtube.com/watch?v=htMH_b-Ofw0
96,PyCon.DE 2018 LT: Analyzing Twitter Data - Fabian Gebhart,https://www.youtube.com/watch?v=izjBxmmwgPw,izjBxmmwgPw,PyCon DE,@PyConDE,https://www.youtube.com/@PyConDE,20181105,298,80,3,,,Education,,https://i.ytimg.com/vi_webp/izjBxmmwgPw/maxresdefault.webp,0,False,False,public,https://www.youtube.com/watch?v=izjBxmmwgPw,https://www.youtube.com/watch?v=izjBxmmwgPw
97,PyCon.DE 2018: Thunderbolt And Lightning Aren't Really Frightening Me - Jens Dittrich,https://www.youtube.com/watch?v=o0Uzd9asw_k,o0Uzd9asw_k,PyCon DE,@PyConDE,https://www.youtube.com/@PyConDE,20181105,189,46,0,,,Education,,https://i.ytimg.com/vi_webp/o0Uzd9asw_k/maxresdefault.webp,0,False,False,public,https://www.youtube.com/watch?v=o0Uzd9asw_k,https://www.youtube.com/watch?v=o0Uzd9asw_k
98,PyCon.DE 2018: Closing Session - Pycon.DE Crew,https://www.youtube.com/watch?v=hBRzB6mwiZs,hBRzB6mwiZs,PyCon DE,@PyConDE,https://www.youtube.com/@PyConDE,20181105,761,53,0,,,Education,,https://i.ytimg.com/vi_webp/hBRzB6mwiZs/maxresdefault.webp,0,False,False,public,https://www.youtube.com/watch?v=hBRzB6mwiZs,https://www.youtube.com/watch?v=hBRzB6mwiZs
99,PyCon.DE 2018 LT: PyRant - Valerio Maggio,https://www.youtube.com/watch?v=TVip0fYUEzA,TVip0fYUEzA,PyCon DE,@PyConDE,https://www.youtube.com/@PyConDE,20181105,333,102,3,,,Education,,https://i.ytimg.com/vi_webp/TVip0fYUEzA/maxresdefault.webp,0,False,False,public,https://www.youtube.com/watch?v=TVip0fYUEzA,https://www.youtube.com/watch?v=TVip0fYUEzA
100,PyCon.DE 2018 LT: Generate Company Names With Neural Networks - Alexander Engelhardt,https://www.youtube.com/watch?v=1w3Q3CEldG0,1w3Q3CEldG0,PyCon DE,@PyConDE,https://www.youtube.com/@PyConDE,20181105,303,754,14,,,Education,,https://i.ytimg.com/vi_webp/1w3Q3CEldG0/maxresdefault.webp,0,False,False,public,https://www.youtube.com/watch?v=1w3Q3CEldG0,https://www.youtube.com/watch?v=1w3Q3CEldG0
101,PyCon.DE 2018 LT: OCA: The Home Of One Of The Biggest Python OS Projects - Joe,https://www.youtube.com/watch?v=kNHtsMglQCw,kNHtsMglQCw,PyCon DE,@PyConDE,https://www.youtube.com/@PyConDE,20181105,309,48,0,,,Education,,https://i.ytimg.com/vi_webp/kNHtsMglQCw/maxresdefault.webp,0,False,False,public,https://www.youtube.com/watch?v=kNHtsMglQCw,https://www.youtube.com/watch?v=kNHtsMglQCw
102,PyCon.DE 2018 LT: Let Me Take A Quick Look Into The Data - Sofia,https://www.youtube.com/watch?v=YZQpQAjd7Dw,YZQpQAjd7Dw,PyCon DE,@PyConDE,https://www.youtube.com/@PyConDE,20181105,172,81,2,,,Education,,https://i.ytimg.com/vi_webp/YZQpQAjd7Dw/maxresdefault.webp,0,False,False,public,https://www.youtube.com/watch?v=YZQpQAjd7Dw,https://www.youtube.com/watch?v=YZQpQAjd7Dw
103,PyCon.DE 2018 LT: Let Me Just Explain Gravity - Peer Wagner,https://www.youtube.com/watch?v=ylKf5ZyExh8,ylKf5ZyExh8,PyCon DE,@PyConDE,https://www.youtube.com/@PyConDE,20181105,213,95,0,,,Education,,https://i.ytimg.com/vi_webp/ylKf5ZyExh8/maxresdefault.webp,0,False,False,public,https://www.youtube.com/watch?v=ylKf5ZyExh8,https://www.youtube.com/watch?v=ylKf5ZyExh8
104,PyCon.DE 2018: Pizza - Christian Barra,https://www.youtube.com/watch?v=qzU5CRsoTTc,qzU5CRsoTTc,PyCon DE,@PyConDE,https://www.youtube.com/@PyConDE,20181105,83,90,1,,,Education,,https://i.ytimg.com/vi_webp/qzU5CRsoTTc/maxresdefault.webp,0,False,False,public,https://www.youtube.com/watch?v=qzU5CRsoTTc,https://www.youtube.com/watch?v=qzU5CRsoTTc
105,PyCon.DE 2018: Notebooks As Scripts - Tim Head,https://www.youtube.com/watch?v=fEQKDUvB-Ro,fEQKDUvB-Ro,PyCon DE,@PyConDE,https://www.youtube.com/@PyConDE,20181105,291,100,2,,,Education,,https://i.ytimg.com/vi_webp/fEQKDUvB-Ro/maxresdefault.webp,0,False,False,public,https://www.youtube.com/watch?v=fEQKDUvB-Ro,https://www.youtube.com/watch?v=fEQKDUvB-Ro
106,PyCon.DE 2018: ESA Summer Of Code In Space & Open Source Cubesat Workshop - Arthur,https://www.youtube.com/watch?v=FfXEXAQKUDw,FfXEXAQKUDw,PyCon DE,@PyConDE,https://www.youtube.com/@PyConDE,20181105,232,187,2,,,Education,,https://i.ytimg.com/vi_webp/FfXEXAQKUDw/maxresdefault.webp,0,False,False,public,https://www.youtube.com/watch?v=FfXEXAQKUDw,https://www.youtube.com/watch?v=FfXEXAQKUDw
107,PyCon.DE 2018: Building Your Own Data Science Platform With Python & Docker - Joshua Görner,https://www.youtube.com/watch?v=bl1XSZy11vQ,bl1XSZy11vQ,PyCon DE,@PyConDE,https://www.youtube.com/@PyConDE,20181112,2372,9815,289,,,Education,"Interactive notebooks like Jupyter have become more and more popular in the recent past and build the core of many data scientist's workplace. Being accessed via web browser they allow scientists to easily structure their work by combining code and documentation.

Yet notebooks often lead to isolated and disposable analysis artefacts. Keeping the computation inside those notebooks does not allow for convenient concurrent model training, model exposure or scheduled model retraining.

Those issues can be addressed by taking advantage of recent developments in the discipline of software engineering. Over the past years containerization became the technology of choice for crafting and deploying applications. Building a data science platform that allows for easy access (via notebooks), flexibility and reproducibility (via containerization) combines the best of both worlds and addresses Data Scientist's hidden needs.",https://i.ytimg.com/vi_webp/bl1XSZy11vQ/maxresdefault.webp,0,False,False,public,https://www.youtube.com/watch?v=bl1XSZy11vQ,https://www.youtube.com/watch?v=bl1XSZy11vQ
