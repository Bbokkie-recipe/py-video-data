[
    {
        "index": 1,
        "title": "Владислав Мухаматнуров. Автоматизатор в команде питонистов",
        "url": "https://www.youtube.com/watch?v=oR41omcO6F8",
        "video_id": "oR41omcO6F8",
        "uploader": "Видео с мероприятий {speach!",
        "uploader_id": "@videospeach",
        "uploader_url": "https://www.youtube.com/@videospeach",
        "upload_date": "20211110",
        "duration": 1527,
        "view_count": 2312,
        "like_count": 26,
        "comment_count": null,
        "tags": [],
        "categories": [
            "Nonprofits & Activism"
        ],
        "description": "В докладе расскажу про личный опыт автоматизации тестирования в команде разработчиков-питонистов. На примере развития подходов к разработке и автоматизации тестирования внутри команды покажу эволюцию платформы голосового помощника «Олега». Этот проект из небольшого стартапа вырос до полноценного приложения для продуктов компании — чат-ботов и голосовых роботов.\n\nОбъясню, как благодаря нашему подходу к разработке объемных фичей появились полноценные приложения для тестирования: консольные и административные интерфейсы, окружения для локальной отладки, фреймворки по управлению и инструменты валидации системы. Всего того, что делает жизнь разработчика проще и технологичнее.\n\nДля кого этот доклад:\nНадеюсь, наш опыт станет вдохновляющим примером для разработчиков и их лидов, а уже потом — для QA в целом и автоматизаторов в частности.\n\nОсновные мысли доклада:\n— Автоматизация тестирования — это часть этапа разработки, синергия творчества и контроля качества.\n— Автоматизация на этапе разработки помогает снизить количество аксептансов и повысить качество ПО.\n— Автоматизация на одном языке с разработкой позволяет перенимать лучшие практики и быстрее наращивать опыт отладки у разработчика, а также глубже разбираться в продукте автоматизатору.\n— Даже с минимальными инструментами проверки программы в разы легче проверять ее функциональность и заниматься исследовательским тестированием.\n— Каждый разработчик должен уметь тестировать свой код верхнеуровнево, а для этого нужны инструменты проверки.\n— Тестируемые приложения — это круто.\n— Геймификация разработки — это круто.",
        "thumbnail": "https://i.ytimg.com/vi/oR41omcO6F8/maxresdefault.jpg",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=oR41omcO6F8",
        "original_url": "https://www.youtube.com/watch?v=oR41omcO6F8"
    },
    {
        "index": 2,
        "title": "Антон Палий. Python и метрики. Мониторинг наше все",
        "url": "https://www.youtube.com/watch?v=Sz4E9u7s2UM",
        "video_id": "Sz4E9u7s2UM",
        "uploader": "Видео с мероприятий {speach!",
        "uploader_id": "@videospeach",
        "uploader_url": "https://www.youtube.com/@videospeach",
        "upload_date": "20211110",
        "duration": 2478,
        "view_count": 2975,
        "like_count": 69,
        "comment_count": null,
        "tags": [],
        "categories": [
            "Nonprofits & Activism"
        ],
        "description": "Пшшш, Хьюстон, у нас много данных. Пшшшш, нам нужно их отправить вам. Но данные постоянно меняются, вы сможете их обрабатывать в режиме реального времени?\n\nУ нас есть замечательные инструменты для технического и бизнесового мониторинга. Они позволяют нам придерживаться единого подхода при работе с постоянно меняющимися данными. Грех — эти инструменты не использовать и не рассказать о них.\n\nВ этом докладе я расскажу:\n— как из python работать с метриками и как это делаем мы,\n— какие они бывают, — как следить за технической и бизнесовой частью приложения,\n— какие нестандартные части приложения можно мониторить благодаря инструменту Prometheus, чем это отличается от обычных логов и какие преимущества дает.",
        "thumbnail": "https://i.ytimg.com/vi/Sz4E9u7s2UM/maxresdefault.jpg",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=Sz4E9u7s2UM",
        "original_url": "https://www.youtube.com/watch?v=Sz4E9u7s2UM"
    },
    {
        "index": 3,
        "title": "Александр Шибаев. Внедрение зависимостей, контейнеры и прочие проявления SOLID в питоне",
        "url": "https://www.youtube.com/watch?v=ir4GtcUcCf8",
        "video_id": "ir4GtcUcCf8",
        "uploader": "Видео с мероприятий {speach!",
        "uploader_id": "@videospeach",
        "uploader_url": "https://www.youtube.com/@videospeach",
        "upload_date": "20211110",
        "duration": 2554,
        "view_count": 3209,
        "like_count": 121,
        "comment_count": 1,
        "tags": [],
        "categories": [
            "Nonprofits & Activism"
        ],
        "description": "Код не существует без зависимостей. Разные его компоненты явно или неявно взаимодействуют между собой. У неявных зависимостей есть ряд проблем, о которых я расскажу на примере популярных библиотек питона. (flask, django, …)\nТакой код сложно тестировать, конфигурировать, да и просто тяжелее читать.\n\nРасскажу о способах решения этих проблем при помощи DI и покажу на примерах, в чём преимущество такого подхода в большинстве случаев. Расскажу про опыт нашей команды в написании такого кода.\n\nВ примерах будут фигурировать FastAPI и Pydantic. Если следовать DI повсеместно, то на большом проекте со временем на  конфигурирование самого приложения начнет тратиться куча усилий. Поговорим, как мы решали эту проблему при помощи punq,\nкак нам пришлось его модифицировать, и какие дополнительные плюшки мы от этого получили.",
        "thumbnail": "https://i.ytimg.com/vi/ir4GtcUcCf8/maxresdefault.jpg",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=ir4GtcUcCf8",
        "original_url": "https://www.youtube.com/watch?v=ir4GtcUcCf8"
    },
    {
        "index": 4,
        "title": "Никита Соболев. Typed-linter: окончательное решение проблемы статического анализа в Python",
        "url": "https://www.youtube.com/watch?v=VlczfnJujUs",
        "video_id": "VlczfnJujUs",
        "uploader": "Видео с мероприятий {speach!",
        "uploader_id": "@videospeach",
        "uploader_url": "https://www.youtube.com/@videospeach",
        "upload_date": "20211110",
        "duration": 3121,
        "view_count": 1159,
        "like_count": 21,
        "comment_count": 1,
        "tags": [],
        "categories": [
            "Nonprofits & Activism"
        ],
        "description": "В статическом анализе в Python творится страшное. Но, почти никто не замечает слона в комнате. Давайте разбираться, что у нас болит.\n\nВ докладе я расскажу про проблемы:\nКачество самих инструментов\nВнедрение статического анализа в старый проект — почти невозможно\nИгнорирование ошибок не позволяет сделать «как мне надо», а только как «как просит линтер»\nВосприятие статического анализа в сообществе: многие уверены, что им достаточно Black!\nТипизация сейчас является скорее сводным братом троюродной сестры вашей соседки, чем полноценным членом семьи статического анализа\nИсправление ошибок? Забудьте!\nИ поделюсь решением: typed-linter — проект, над которым я работаю последние полгода.\n\nКраткий анонс:\nНовый runtime, сделанный как надо\nLegacy-first\nУмное игнорирование ошибок\nУдобство использования и внедрения\nТипы (вау!)\nИсправление большинства ошибок без вашего участия\nА также расскажу про модель распространения, которая сочетает в себе open-source и позволяет заниматься проектом на постоянной основе, а не по 10 минут перед сном на выходных.\nПосле моего доклада вы получите +1 крутой инструмент, который сможет решить проблемы в вашем коде.",
        "thumbnail": "https://i.ytimg.com/vi/VlczfnJujUs/maxresdefault.jpg",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=VlczfnJujUs",
        "original_url": "https://www.youtube.com/watch?v=VlczfnJujUs"
    },
    {
        "index": 5,
        "title": "Иван Санин. Разгоняем ML в проде",
        "url": "https://www.youtube.com/watch?v=E8Kk7BZLbbg",
        "video_id": "E8Kk7BZLbbg",
        "uploader": "Видео с мероприятий {speach!",
        "uploader_id": "@videospeach",
        "uploader_url": "https://www.youtube.com/@videospeach",
        "upload_date": "20211110",
        "duration": 2350,
        "view_count": 621,
        "like_count": 20,
        "comment_count": null,
        "tags": [],
        "categories": [
            "Nonprofits & Activism"
        ],
        "description": "В нашей команде более 30 однотипных ml микросервисов, и их число постоянно растет. Перед бэкенд инженерами стоят задачи обеспечения максимального rps, оптимизации использования железа и централизованного распространения лучших практик и фич между сервисами.\n\nВ результате решения этих задач появился фреймворк «Акведук», позволяющий описать пайплайн обработки данных, концентрируясь на его логическом устройстве, а не технических деталях.\n\nC технической точки зрения Акведук представляет собой легковесную python библиотеку, активно использующую возможности пакетов `multiprocessing` и `asyncio`.\n\nВ своем докладе я подробно расскажу, как мы пришли к идее и усовершенствовали наш фреймворк, сравню с другими известными решениями и дам практические рекомендации по использованию Акведука.",
        "thumbnail": "https://i.ytimg.com/vi/E8Kk7BZLbbg/maxresdefault.jpg",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=E8Kk7BZLbbg",
        "original_url": "https://www.youtube.com/watch?v=E8Kk7BZLbbg"
    },
    {
        "index": 6,
        "title": "Сергей Петров. Pyroutines: история о том, как идеи одного языка перетекают в другой",
        "url": "https://www.youtube.com/watch?v=dQPIB9Ur0M4",
        "video_id": "dQPIB9Ur0M4",
        "uploader": "Видео с мероприятий {speach!",
        "uploader_id": "@videospeach",
        "uploader_url": "https://www.youtube.com/@videospeach",
        "upload_date": "20211110",
        "duration": 1923,
        "view_count": 1734,
        "like_count": 19,
        "comment_count": null,
        "tags": [],
        "categories": [
            "Nonprofits & Activism"
        ],
        "description": "В докладе расскажу:\nКак еще можно решить проблему с GIL, если не хочется запускать несколько параллельных процессов, а asyncio уже не хватает.\nЧему многопоточность Python может поучиться у Go?\nВозможности интерпретатора которые существуют уже давно, но о которых никто не слышал.",
        "thumbnail": "https://i.ytimg.com/vi/dQPIB9Ur0M4/maxresdefault.jpg",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=dQPIB9Ur0M4",
        "original_url": "https://www.youtube.com/watch?v=dQPIB9Ur0M4"
    },
    {
        "index": 7,
        "title": "Александр Морозов. Семантический поиск по аналитическим данным с помощью Python и Neo4j",
        "url": "https://www.youtube.com/watch?v=8yrPi-FHZp4",
        "video_id": "8yrPi-FHZp4",
        "uploader": "Видео с мероприятий {speach!",
        "uploader_id": "@videospeach",
        "uploader_url": "https://www.youtube.com/@videospeach",
        "upload_date": "20211110",
        "duration": 2359,
        "view_count": 1236,
        "like_count": 26,
        "comment_count": null,
        "tags": [],
        "categories": [
            "Nonprofits & Activism"
        ],
        "description": "В докладе мы расскажем про графовые базы данных, для чего они нужны и когда стоит их использовать. Подробнее рассмотрим Neo4j и Grakn — в чем основные отличия, как обстоят дела с питонной экосистемой, почему в нашей компании Datafold для хранения метаданных мы остановились на Neo4j и на какие интересные особенности мы при этом натолкнулись.",
        "thumbnail": "https://i.ytimg.com/vi/8yrPi-FHZp4/maxresdefault.jpg",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=8yrPi-FHZp4",
        "original_url": "https://www.youtube.com/watch?v=8yrPi-FHZp4"
    },
    {
        "index": 8,
        "title": "Владислав Лаухин. Построение мониторинга python-приложений с использованием opentelemetry",
        "url": "https://www.youtube.com/watch?v=_nl1e4TWQ0Q",
        "video_id": "_nl1e4TWQ0Q",
        "uploader": "Видео с мероприятий {speach!",
        "uploader_id": "@videospeach",
        "uploader_url": "https://www.youtube.com/@videospeach",
        "upload_date": "20211110",
        "duration": 1994,
        "view_count": 4068,
        "like_count": 115,
        "comment_count": 2,
        "tags": [],
        "categories": [
            "Nonprofits & Activism"
        ],
        "description": "Одно из главных требований к современным бэкенд-приложениям это observability. Для этого приложение должно генерировать большое количество разного рода информации — логи, метрики, трейсы.\n\nБолее того, эту информацию необходимо собирать и отправлять в специализированные инструменты для анализа и мониторинга. Все это требует какого-то невероятного количества разнородных инструментов, как с точки зрения инфраструктуры, так и с точки зрения кода. Такое количество инструментов больно поддерживать, а различия в их форматах и протоколах не дают простой возможности сменить один инструмент на другой.\n\nВ этом докладе мы поговорим о достаточно свежем проекте от CNCF под названием opentelemetry, который стандартизирует подход к observability и предоставляет единый фреймворк для отправки трейсов, метрик и логов.\n\nМы расскажем, в каких случаях его можно смело использовать на продакшене, в каких случаях вам для этого потребуется доля авантюризма, а чего сейчас нет, но припасено на будущее.\nМы обсудим как его применять его в python-проектах, что нужно для этого в инфраструктурном плане, и даже посмотрим живые примеры использования в нашем продакшене.",
        "thumbnail": "https://i.ytimg.com/vi/_nl1e4TWQ0Q/maxresdefault.jpg",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=_nl1e4TWQ0Q",
        "original_url": "https://www.youtube.com/watch?v=_nl1e4TWQ0Q"
    },
    {
        "index": 9,
        "title": "Антон КиселевProvectus. Best Practices for Kubeflow Pipelines",
        "url": "https://www.youtube.com/watch?v=TsALZXmdKSg",
        "video_id": "TsALZXmdKSg",
        "uploader": "Видео с мероприятий {speach!",
        "uploader_id": "@videospeach",
        "uploader_url": "https://www.youtube.com/@videospeach",
        "upload_date": "20211110",
        "duration": 2306,
        "view_count": 1639,
        "like_count": 33,
        "comment_count": null,
        "tags": [],
        "categories": [
            "Nonprofits & Activism"
        ],
        "description": "В своем докладе я расскажу про Kubeflow — MLOps-инструмент для Kubernetes, с упором на Kubeflow Pipelines. Обсудим процесс разработки пайплайнов и компонент, использование библиотеки готовых компонент, а также лучшие практики для эффективного использования ресурсов Kubernetes для обучения моделей. Разберем кейс по обучению модели классификации картинок.",
        "thumbnail": "https://i.ytimg.com/vi/TsALZXmdKSg/maxresdefault.jpg",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=TsALZXmdKSg",
        "original_url": "https://www.youtube.com/watch?v=TsALZXmdKSg"
    },
    {
        "index": 10,
        "title": "Тимур Кадыров, Артём Королёв. Катим хоббийный проект в прод на AWS",
        "url": "https://www.youtube.com/watch?v=sjpt1ayCCQQ",
        "video_id": "sjpt1ayCCQQ",
        "uploader": "Видео с мероприятий {speach!",
        "uploader_id": "@videospeach",
        "uploader_url": "https://www.youtube.com/@videospeach",
        "upload_date": "20211110",
        "duration": 1679,
        "view_count": 397,
        "like_count": 6,
        "comment_count": null,
        "tags": [],
        "categories": [
            "Nonprofits & Activism"
        ],
        "description": "Артем и Тимур расскажут, как важно посещать пайконы, ведь посещение мероприятия вдохновило парней на целый хоббийный проект. Получив фотки с прошлого пайкона, ребята сразу задумались, как, не отсматривая весь архив, найти фотки только с собой. Дальше осталось реализовать эту идею на питоне.\n\nРасскажем:\n — блокнотик в Jupyter, а не сервис, и куда с ним пойти дальше\n — выбор облака\n — виртуалки для слабаков и тех, у кого есть деньги\n — зачем писать фронт, если можно прототипировать в телеграме\n — костыли и грабли, на которые стоит наступить, когда ты ds и никогда не катил в прод на облаке\n — а какая у нас в итоге архитектура?\n — модель не влезает в serverless функцию или борьба не на жизнь, а на смерть\n — готовый проект и мечты о том, как его сделать еще лучше",
        "thumbnail": "https://i.ytimg.com/vi/sjpt1ayCCQQ/maxresdefault.jpg",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=sjpt1ayCCQQ",
        "original_url": "https://www.youtube.com/watch?v=sjpt1ayCCQQ"
    },
    {
        "index": 11,
        "title": "Артем Иннокентьев. Pattern matching: польза или хайп?",
        "url": "https://www.youtube.com/watch?v=_LghPLJH1OM",
        "video_id": "_LghPLJH1OM",
        "uploader": "Видео с мероприятий {speach!",
        "uploader_id": "@videospeach",
        "uploader_url": "https://www.youtube.com/@videospeach",
        "upload_date": "20211110",
        "duration": 1627,
        "view_count": 1019,
        "like_count": 32,
        "comment_count": 2,
        "tags": [],
        "categories": [
            "Nonprofits & Activism"
        ],
        "description": "Осенью в Python завезут pattern matching. Так же как десять лет назад с аннотациями, разработчики языка пока не очень понимают для чего и как новая фича будет использоваться. И будет ли использоваться вообще.\n\nМы перерыли черновики, обсуждения, посмотрели на другие языки — и поделимся своими прогнозами. В докладе: лучшие применения для pattern matching, концепция «как рассказать кодом историю» и деревья. Много разных деревьев.",
        "thumbnail": "https://i.ytimg.com/vi/_LghPLJH1OM/maxresdefault.jpg",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=_LghPLJH1OM",
        "original_url": "https://www.youtube.com/watch?v=_LghPLJH1OM"
    },
    {
        "index": 12,
        "title": "Ярослав Игошев. Distributed Data Processing and XGBoost Training and Prediction",
        "url": "https://www.youtube.com/watch?v=oo_lxUjsFTM",
        "video_id": "oo_lxUjsFTM",
        "uploader": "Видео с мероприятий {speach!",
        "uploader_id": "@videospeach",
        "uploader_url": "https://www.youtube.com/@videospeach",
        "upload_date": "20211110",
        "duration": 1945,
        "view_count": 479,
        "like_count": 8,
        "comment_count": null,
        "tags": [],
        "categories": [
            "Nonprofits & Activism"
        ],
        "description": "Расскажу о том, как можно ускорить пайплайн, который включает в себя обработку данных, обучение XGBoost модели и предсказание, даваемой этой моделью, за счет распределения вычислений на множество процессов.\n\nПри этом вам не придется изучать новые библиотеки и их API. Фокус будет сосредоточен вокруг небольшого ряда библиотек хорошо известных людям, которые знакомы с Data Science и Machine Learning.\nВ частности, речь пойдет о таких библиотеках как pandas, Modin и XGBoost.\nПокажу, как Modin позволяет ускорить pandas запросы, всего лишь, изменив одну строку кода вашего сценария, а также расскажу о его распределенной реализации обучения и прогнозирования XGBoost модели.",
        "thumbnail": "https://i.ytimg.com/vi/oo_lxUjsFTM/maxresdefault.jpg",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=oo_lxUjsFTM",
        "original_url": "https://www.youtube.com/watch?v=oo_lxUjsFTM"
    },
    {
        "index": 13,
        "title": "Олег Ивашов, Сергей Матвеенко. Шина сообщений NSQ в Python — что это, зачем и как",
        "url": "https://www.youtube.com/watch?v=SX9XGa-ptsE",
        "video_id": "SX9XGa-ptsE",
        "uploader": "Видео с мероприятий {speach!",
        "uploader_id": "@videospeach",
        "uploader_url": "https://www.youtube.com/@videospeach",
        "upload_date": "20211110",
        "duration": 2488,
        "view_count": 1889,
        "like_count": 69,
        "comment_count": null,
        "tags": [],
        "categories": [
            "Nonprofits & Activism"
        ],
        "description": "Часто при выборе шины сообщений для Python проекта выбор сводится к Kafka или RabbitMQ. Однако, есть ещё одна менее известная в Python-сообществе альтернатива — NSQ.\n\nСергей расскажет как прийти к выбору NSQ для вашего проекта, про положительные и отрицательные стороны использования NSQ в продакшене.\n\nОлег покажет библиотеку ansq, приемы её удобного использования и расскажет про подводные камни, с которыми пришлось столкнуться.\n\nДоклад основан на опыте использования NSQ в большом реальном продукте на протяжении последних 1.5 лет.",
        "thumbnail": "https://i.ytimg.com/vi/SX9XGa-ptsE/maxresdefault.jpg",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=SX9XGa-ptsE",
        "original_url": "https://www.youtube.com/watch?v=SX9XGa-ptsE"
    },
    {
        "index": 14,
        "title": "Павел Дружинин. Из веб-девелопмента к \"железу\"",
        "url": "https://www.youtube.com/watch?v=ah22uzNp3I8",
        "video_id": "ah22uzNp3I8",
        "uploader": "Видео с мероприятий {speach!",
        "uploader_id": "@videospeach",
        "uploader_url": "https://www.youtube.com/@videospeach",
        "upload_date": "20211110",
        "duration": 2384,
        "view_count": 905,
        "like_count": 36,
        "comment_count": null,
        "tags": [],
        "categories": [
            "Nonprofits & Activism"
        ],
        "description": "В корпорациях любят всё автоматизировать. Большое количество энтерпрайз-продуктов и внутренних веб-сервисов, которые общаются между собой — все это привычные задачи внутренней и инфраструктурной разработки.\n\nНо что, если необходимо автоматизировать выдачу оборудования сотруднику компании? Это возможность выйти за рамки стандартных веб-сервисов и узнать что происходит на уровне железа.\n\nКак включить огромную железную коробку, которая умеет только принимать байты на серийный порт, в привычный нам, веб-разработчикам, стек Django, React. js, PostgreSQL, Celery и заставить все это общаться между собой?\n\nПосмотрим на консьюмеры Kombu, RabbitMQ. Поучимся управлять пружинами вендинга при помощи Python, читать оптические датчики. Построим всю систему до пользовательского интерфейса «снизу-вверх». И постараемся по пути не отрезать себе палец, когда будем перекидывать питание крутящих серво-приводов между шинами :)",
        "thumbnail": "https://i.ytimg.com/vi/ah22uzNp3I8/maxresdefault.jpg",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=ah22uzNp3I8",
        "original_url": "https://www.youtube.com/watch?v=ah22uzNp3I8"
    },
    {
        "index": 15,
        "title": "Богдан Володарский. Data/ML QA on Python",
        "url": "https://www.youtube.com/watch?v=qkKkVErDpN0",
        "video_id": "qkKkVErDpN0",
        "uploader": "Видео с мероприятий {speach!",
        "uploader_id": "@videospeach",
        "uploader_url": "https://www.youtube.com/@videospeach",
        "upload_date": "20211110",
        "duration": 1899,
        "view_count": 414,
        "like_count": 10,
        "comment_count": null,
        "tags": [],
        "categories": [
            "Nonprofits & Activism"
        ],
        "description": "Сегмент данных взрослеет и за этим следует потребность в их валидации.\nРасскажу как построить процесс тестирования на данных на проекте на основе фреймворка great expecations. Как интегрироваться в дата пайплайн в AWS. Расскажу, как мы решили проблему репортинга и дашбординга + как на результатах Data QA устроить ML QA",
        "thumbnail": "https://i.ytimg.com/vi/qkKkVErDpN0/maxresdefault.jpg",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=qkKkVErDpN0",
        "original_url": "https://www.youtube.com/watch?v=qkKkVErDpN0"
    },
    {
        "index": 16,
        "title": "Юлия Волкова. Разработка на Python. А можно еще быстрее?",
        "url": "https://www.youtube.com/watch?v=nD4Y-yM_HRs",
        "video_id": "nD4Y-yM_HRs",
        "uploader": "Видео с мероприятий {speach!",
        "uploader_id": "@videospeach",
        "uploader_url": "https://www.youtube.com/@videospeach",
        "upload_date": "20211110",
        "duration": 2377,
        "view_count": 935,
        "like_count": 29,
        "comment_count": null,
        "tags": [],
        "categories": [
            "Nonprofits & Activism"
        ],
        "description": "Расскажу о том, как экономить время на старте проектов. Посмотрим как тут выручает генерация кода и что есть из готовых решений.\nКак можно, просто введя 2 команды из DDL схемы базы данных, получить готовый CRUD REST сервис с моделями и endpoint-ами.\nЗачем мне в 2020 пришлось писать свой ddl парсер и генерацию ORM & Pydantic моделей, и как это облегчило жизнь проекту.\nЧто из чего вообще можно генерировать, чтобы не писать это руками. Бегло посмотрим какие есть готовые библиотеки на сегодняшний день (основные их категории) и кейсы их использования.\nОбсудим плюсы данного тренда. Лично мне кажется, что это тренд — с каждым годом таких библиотек все больше и больше, и мы стараемся не писать тот код, который можно не писать. Рассмотрим кейсы, когда это удобно/полезно (про быстрые PoC, RnD) и направления, куда двигаться дальше, если тема интереса.",
        "thumbnail": "https://i.ytimg.com/vi/nD4Y-yM_HRs/maxresdefault.jpg",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=nD4Y-yM_HRs",
        "original_url": "https://www.youtube.com/watch?v=nD4Y-yM_HRs"
    },
    {
        "index": 17,
        "title": "Вячеслав Буторов. Как создать ваш собственный плагин для Sentry, при полном отсутствии документации",
        "url": "https://www.youtube.com/watch?v=K8rBbEBvVJs",
        "video_id": "K8rBbEBvVJs",
        "uploader": "Видео с мероприятий {speach!",
        "uploader_id": "@videospeach",
        "uploader_url": "https://www.youtube.com/@videospeach",
        "upload_date": "20211110",
        "duration": 2235,
        "view_count": 586,
        "like_count": 19,
        "comment_count": 1,
        "tags": [],
        "categories": [
            "Nonprofits & Activism"
        ],
        "description": "Мы много лет используем Sentry (28k звёзд, 3.2k форков на гитхабе) для мониторинга исключений на проектах, а так же мессенджер Telegram для общения. Когда я захотел получать уведомления об инцидентах из Sentry в Telegram, я не нашёл такой возможности, но что самое интересное — ни слова в официальной документации как добавить такой плагин.\n\nПройдя путь от изучения устройства плагинов, поддерживаемых авторами Sentry и работы с ними в самом ядре Sentry, до создания своего плагина, используемого многими компаниями, я вижу, по поступающим вопросам, что интерес к теме не уменьшается со временем, а актуальной информации в сети всё так же нет.\n\nЯ вижу, что отдельные разработчики регулярно создают свои плагины для Sentry, но каждый из них вынужден проходить этот путь с нуля и самостоятельно, как это делал я.\n\nНеплохо разобравшись в процессе с вопросом, я был бы рад поделиться знаниями с участниками PyCon.\n\nВместе со участниками мы пройдём по таким пунктам как:\n\nобщее устройство плагина для Sentry: от простого к более сложному\nего место в общей архитектуре Sentry и как он запускается\nпроблема с использованием популярных плагинов в cloud версии Sentry\nправильный способ установки плагинов в Sentry (грабли, по которым прошёл я, и провёл за собой N пользователей первых версий своего плагина)\nдобавление своих интерфейсов настроек в интерфейс Sentry\nработа с сетью из вашего плагина: отправка запросов и получение их от внешних систем\nработа с базой данных и миграциями\nнедокументированные, но вычленённые из исходников, best practice которые следует использовать при создании плагинов, чтобы не поотстреливать ноги себе и своему админу, который поддерживает Sentry",
        "thumbnail": "https://i.ytimg.com/vi/K8rBbEBvVJs/maxresdefault.jpg",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=K8rBbEBvVJs",
        "original_url": "https://www.youtube.com/watch?v=K8rBbEBvVJs"
    },
    {
        "index": 18,
        "title": "Данил Ахтаров. Кеширование — делаем всё правильно",
        "url": "https://www.youtube.com/watch?v=L0xmgTW3QAo",
        "video_id": "L0xmgTW3QAo",
        "uploader": "Видео с мероприятий {speach!",
        "uploader_id": "@videospeach",
        "uploader_url": "https://www.youtube.com/@videospeach",
        "upload_date": "20211110",
        "duration": 2058,
        "view_count": 3783,
        "like_count": 84,
        "comment_count": 2,
        "tags": [],
        "categories": [
            "Nonprofits & Activism"
        ],
        "description": "В докладе поделюсь опытом настройки политики кэширования данных в Python-приложениях.\n\nНаверное, каждый, кто решал эту проблему, столкнулся с ней в неподходящий момент. Давайте сразу настроим «агрессивное» кэширование, а дальше будем оптимизировать инфраструктуру вокруг. А именно — решим вопросы:\n— Какой backend использовать: redis, keydb? А, может, in memory?\n— В каком формате хранить данные?\n— Как мы можем это мониторить? Нам точно нужен кэш?\n— Какой инструмент лучше всего подходит?",
        "thumbnail": "https://i.ytimg.com/vi/L0xmgTW3QAo/maxresdefault.jpg",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=L0xmgTW3QAo",
        "original_url": "https://www.youtube.com/watch?v=L0xmgTW3QAo"
    },
    {
        "index": 19,
        "title": "Денис Аникин. FastAPI как основной framework для python бекендов",
        "url": "https://www.youtube.com/watch?v=4zjj1aHJoko",
        "video_id": "4zjj1aHJoko",
        "uploader": "Видео с мероприятий {speach!",
        "uploader_id": "@videospeach",
        "uploader_url": "https://www.youtube.com/@videospeach",
        "upload_date": "20211110",
        "duration": 1864,
        "view_count": 27414,
        "like_count": 763,
        "comment_count": 98,
        "tags": [],
        "categories": [
            "Nonprofits & Activism"
        ],
        "description": "FastAPI уже не первый год с нами.\nПоследние пару лет фреймворк явно на подъеме: количество звезд на гитхабе уже больше чем 50% от мастодонтов рынка — django, flask. В ds среде и в каждом туториале flask, в каждой второй вакансии суперсовременные горизонтально масштабируемые сервисы на… django.\n\nОднако, про fastapi разговоров довольно немного и проникновение как в рынок, так и в публичное пространство у него не велико. И уж тем более, пока ещё про него не говорили с позиции продакшена (как минимум, на конференциях).\n\nТак сложилось, что в банке мы сделали на нем несколько десятков сервисов и уже больше года активно эксплуатируем как раз в том самом продакшене, а так же рекомендуем его внутри, как основной, практически всем. За это время мы успели полюбить этот фреймворк, но при этом нашли его «зоны роста».\n\nВ своем докладе я постараюсь раскрыть три темы:\n\nсделаю краткий обзор на сам фреймворк\nподелюсь тем, чего ему не хватает для полноценной жизни в продакшене (с моей точки зрения)\nподсвечу довольно очевидные потенциальные проблемы.\nНу и, конечно же, займусь неймдроппингом: FastAPI!",
        "thumbnail": "https://i.ytimg.com/vi/4zjj1aHJoko/maxresdefault.jpg",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=4zjj1aHJoko",
        "original_url": "https://www.youtube.com/watch?v=4zjj1aHJoko"
    },
    {
        "index": 20,
        "title": "Альбина Альмухаметова. Оптимизация i-запросов в Django+Postgres или неточности документации",
        "url": "https://www.youtube.com/watch?v=kq-1PzEE4IQ",
        "video_id": "kq-1PzEE4IQ",
        "uploader": "Видео с мероприятий {speach!",
        "uploader_id": "@videospeach",
        "uploader_url": "https://www.youtube.com/@videospeach",
        "upload_date": "20211110",
        "duration": 1553,
        "view_count": 4351,
        "like_count": 166,
        "comment_count": 13,
        "tags": [],
        "categories": [
            "Nonprofits & Activism"
        ],
        "description": "На рынке веб-разработки Django, пожалуй, один из самых популярных фреймворков. Но может ли оказаться так, что в документации такого «старичка» есть неточности?\nВ докладе расскажу о том, как оптимизация простого поискового запроса пошла не по плану.\nВспомним старые добрые индексы и разберёмся, какие нам действительно нужны, и как соединить их с нашим приложением.\nВ конце обсудим, что же нового случилось в 3 версии и как она упростила нам жизнь.",
        "thumbnail": "https://i.ytimg.com/vi/kq-1PzEE4IQ/maxresdefault.jpg",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=kq-1PzEE4IQ",
        "original_url": "https://www.youtube.com/watch?v=kq-1PzEE4IQ"
    },
    {
        "index": 21,
        "title": "Андрей Алексеев. ETNA Time Series Library: удобное прогнозирование временных рядов",
        "url": "https://www.youtube.com/watch?v=VxWHLEFgXnE",
        "video_id": "VxWHLEFgXnE",
        "uploader": "Видео с мероприятий {speach!",
        "uploader_id": "@videospeach",
        "uploader_url": "https://www.youtube.com/@videospeach",
        "upload_date": "20211110",
        "duration": 2694,
        "view_count": 4273,
        "like_count": 157,
        "comment_count": 4,
        "tags": [],
        "categories": [
            "Nonprofits & Activism"
        ],
        "description": "Временные ряды — это любые данные, у которых есть временная метка. Некоторые ряды нужно прогнозировать — например, сколько глазированных сырков купят на этой неделе, сколько посетителей будет в магазине, сколько наличных останется в банкомате. Для их прогноза нужны разные модели и признаки, но подход к исследованию проблемы будет одинаковый.\nСначала мы пробовали решать каждую отдельную задачу усилиями разных ML-специалистов: это было долго, каждый пилил свой собственный «велосипед», не было обмена опытом и не спасало от ошибок. Поэтому мы решили сделать ML-эксперименты с временными рядами простыми и быстрыми — и придумали библиотеку ETNA.\n\nГлавные ценности ETNA:\n— Гибкость\n— Простота\n— Расширяемость\n\nРасскажем:\n— Что такое временной ряд\n— Как его прогнозировать\n— О болях, которые хотим решить\n— Как придумали библиотеку и внедрили библиотеку\n— Как добавляли и выпиливали фичи и рефакторы\n— Что библиотека представляет из себя сейчас\n— Что мы узнали пока ее делали",
        "thumbnail": "https://i.ytimg.com/vi/VxWHLEFgXnE/maxresdefault.jpg",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=VxWHLEFgXnE",
        "original_url": "https://www.youtube.com/watch?v=VxWHLEFgXnE"
    },
    {
        "index": 22,
        "title": "Алексей Кузьмин. Обработка ошибок в Python",
        "url": "https://www.youtube.com/watch?v=AhlEAXjhUZ4",
        "video_id": "AhlEAXjhUZ4",
        "uploader": "Видео с мероприятий {speach!",
        "uploader_id": "@videospeach",
        "uploader_url": "https://www.youtube.com/@videospeach",
        "upload_date": "20211110",
        "duration": 2224,
        "view_count": 4372,
        "like_count": 183,
        "comment_count": 4,
        "tags": [],
        "categories": [
            "Nonprofits & Activism"
        ],
        "description": "Алексей Кузьмин, ДомКлик, Москва\n\nОбработка ошибок в Python\n\nВ нашем IT-мире есть только один достоверный источник информации — исходный код. Документация может быть не актуальной, книжка может устареть, статья может осветить только один аспект. А исходный код — честен, доступен и открывает тайны всем, кто достаточно смел, чтобы заглянуть в него.\n\nНа мой взгляд нет ничего интереснее, чем поковыряться в нем и понять как работает та или иная технология, тот или иной инструмент на самом деле. Я приглашаю Вас в увлекательное приключение по обработке ошибок в Python cо стороны исходного кода — мы заглянем внутрь, увидим как работают основные механизмы обработки ошибок, рассмотрим частные виды исключений и их особенности и еще много чего интересного.",
        "thumbnail": "https://i.ytimg.com/vi/AhlEAXjhUZ4/maxresdefault.jpg",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=AhlEAXjhUZ4",
        "original_url": "https://www.youtube.com/watch?v=AhlEAXjhUZ4"
    },
    {
        "index": 23,
        "title": "Анна Богданова. Rефакторинг: Regулярный и ASTообразный",
        "url": "https://www.youtube.com/watch?v=C0s3DIlj790",
        "video_id": "C0s3DIlj790",
        "uploader": "Видео с мероприятий {speach!",
        "uploader_id": "@videospeach",
        "uploader_url": "https://www.youtube.com/@videospeach",
        "upload_date": "20211110",
        "duration": 2274,
        "view_count": 1096,
        "like_count": 41,
        "comment_count": 2,
        "tags": [],
        "categories": [
            "Nonprofits & Activism"
        ],
        "description": "Анна Богданова, Ostrovok.ru, Москва\n\nRефакторинг: Regулярный и ASTообразный\n\nРасскажу, как можно автоматизировать рефакторинг большой кодовой базы на примере перехода с синтаксиса одной библиотеки на синтаксис другой.\n\nПокажу, как можно реализовать это двумя способами: с помощью регулярных выражений и с помощью абстрактных синтаксических деревьев.\n\nБуду сравнивать оба подхода: что быстрее в реализации, что быстрее работает, какие нюансы стоит учитывать при выборе одного или второго подхода",
        "thumbnail": "https://i.ytimg.com/vi/C0s3DIlj790/maxresdefault.jpg",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=C0s3DIlj790",
        "original_url": "https://www.youtube.com/watch?v=C0s3DIlj790"
    },
    {
        "index": 24,
        "title": "Андрей Ермилов, Максим Белоусов. Советы по использованию опциональной статической типизации",
        "url": "https://www.youtube.com/watch?v=Z6sUShcirsU",
        "video_id": "Z6sUShcirsU",
        "uploader": "Видео с мероприятий {speach!",
        "uploader_id": "@videospeach",
        "uploader_url": "https://www.youtube.com/@videospeach",
        "upload_date": "20211116",
        "duration": 2519,
        "view_count": 1163,
        "like_count": 30,
        "comment_count": null,
        "tags": [],
        "categories": [
            "Nonprofits & Activism"
        ],
        "description": "На тему использования опциональной статический типизации в Python написано много статей.\n\nВ докладе мы не будем повторять прописные истины, а попробуем ответить на вопрос для чего нужно ее использовать, на примерах разберем, как это можно делать и покажем преимущества, которая она дает.\n\nТакже мы коснемся сложностей, которые возникают при использовании типизации и продемонстрируем способы их решения.",
        "thumbnail": "https://i.ytimg.com/vi/Z6sUShcirsU/maxresdefault.jpg",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=Z6sUShcirsU",
        "original_url": "https://www.youtube.com/watch?v=Z6sUShcirsU"
    },
    {
        "index": 25,
        "title": "Максим Данилов. Скрытая супер-сила Django Admin Panel в масштабируемом Backend приложении",
        "url": "https://www.youtube.com/watch?v=5tJdO0bkb3A",
        "video_id": "5tJdO0bkb3A",
        "uploader": "Видео с мероприятий {speach!",
        "uploader_id": "@videospeach",
        "uploader_url": "https://www.youtube.com/@videospeach",
        "upload_date": "20211122",
        "duration": 2967,
        "view_count": 5743,
        "like_count": 204,
        "comment_count": 10,
        "tags": [],
        "categories": [
            "Nonprofits & Activism"
        ],
        "description": "В своем докладе я расскажу о том, что на самом деле может django.contrib.admin, как и зачем преодолевать внутреннее сопротивление при работе с ним.\n\nDjango Admin Panel — сложный и мало документированный инструмент в Django Framework, который способен значительно повысить скорость разработки, если в нём по-настоящему разобраться.\n\n— «A Не проще ли нам написать свой Backend?»\nЯ отвечу: «Нет, не проще!».\nСемь лет инсайтов и открытий в моем докладе.",
        "thumbnail": "https://i.ytimg.com/vi/5tJdO0bkb3A/maxresdefault.jpg",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=5tJdO0bkb3A",
        "original_url": "https://www.youtube.com/watch?v=5tJdO0bkb3A"
    }
]