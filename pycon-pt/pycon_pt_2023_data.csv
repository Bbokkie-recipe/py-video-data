index,title,url,video_id,uploader,uploader_id,uploader_url,upload_date,duration,view_count,like_count,comment_count,tags,categories,description,thumbnail,age_limit,is_live,was_live,availability,webpage_url,original_url
1,PyCon PT 23 | KEYNOTE: Optimising for joy,https://www.youtube.com/watch?v=gfa_kjcCrx4,gfa_kjcCrx4,PyCon Portugal,@pyconportugal,https://www.youtube.com/@pyconportugal,20230928,3383,63,0,,,People & Blogs,"KEYNOTE: Optimising for joy by Tom Forbes

New developers experience excitement through an abundance of things to learn and improve, often leading to a positive feedback loop of visible and rewarding progress.

However as we gain experience and proficiency new ideas, techniques and knowledge become increasingly more complex, and so it becomes challenging to sustain the same level of enthusiasm.

How can we overcome this hurdle so that we can all fall back into that rewarding feedback loop again, and reignite the joy and satisfaction that code can bring?",https://i.ytimg.com/vi/gfa_kjcCrx4/maxresdefault.jpg,0,False,False,public,https://www.youtube.com/watch?v=gfa_kjcCrx4,https://www.youtube.com/watch?v=gfa_kjcCrx4
2,"PyCon PT 23 | Amazon CodeWhisperer, ChatGPT, and GitHub Copilot: Choosing the Best AI Code Assistant",https://www.youtube.com/watch?v=zH443rkt8YE,zH443rkt8YE,PyCon Portugal,@pyconportugal,https://www.youtube.com/@pyconportugal,20230928,1568,57,0,,,People & Blogs,"Talk: Amazon CodeWhisperer, ChatGPT, and GitHub Copilot: Choosing the Best Python AI Code Assistant by Darya Petrashka

Given the recent boom of AI code assistants, more and more programmers are starting to use them to increase their day-to-day performance and delegate some routine tasks. But how to choose a suitable and robust helper? Is this possible at the moment?

During this talk, we are going to compare 3 AI code assistants for Python: ChatGPT, GitHub Copilot, and Amazon CodeWhisperer.
The criteria will be as follows:
- security: how passwords & SQL queries are being handled
- code readability: is generated code easy to follow?
- cut-off date: what is the latest knowledge of assistant (Python version, packages awareness)
- creativity: given a certain code, how good is the assistant at creating a Streamlit app?
- code testing: the ability to generate unit tests to code for different scenarios
- debugging/troubleshooting: the ability to find an error or to handle it

In addition to comparison, the results of the programmers' AI code assistants usage survey will be shared. By the end of this talk, attendants will have a good understanding of the differences between AI code assistants for Python, and they will be aware of the possible advantages/disadvantages of each mentioned assistant.",https://i.ytimg.com/vi/zH443rkt8YE/maxresdefault.jpg,0,False,False,public,https://www.youtube.com/watch?v=zH443rkt8YE,https://www.youtube.com/watch?v=zH443rkt8YE
3,PyCon PT 23 | A simple serverless data pipeline,https://www.youtube.com/watch?v=WPc5CVdOwJY,WPc5CVdOwJY,PyCon Portugal,@pyconportugal,https://www.youtube.com/@pyconportugal,20230928,819,55,1,,,People & Blogs,"TALK: A simple serverless data pipeline by Riccardo Magliocchetti

Building and maintaining data pipelines when it’s not your full time job is a pain! So better keep things simple without the need to manage the system yourself. In this talk I’ll show a data pipeline architecture built leveraging some cloud offerings by AWS and Preset.

In this talk we’ll discuss:
- an overview of the architecture
- the data lake: AWS S3, AWS Athena
- the exploration and visualization platform: Apache Superset
- data formats and Python implementations
- vendors lock-in",https://i.ytimg.com/vi/WPc5CVdOwJY/maxresdefault.jpg,0,False,False,public,https://www.youtube.com/watch?v=WPc5CVdOwJY,https://www.youtube.com/watch?v=WPc5CVdOwJY
4,PyCon PT 23 | Tools to setup great python projects,https://www.youtube.com/watch?v=6_W1_CbMCw4,6_W1_CbMCw4,PyCon Portugal,@pyconportugal,https://www.youtube.com/@pyconportugal,20230928,1716,98,7,,,People & Blogs,"TALK: Tools to setup great python projects by Duarte Pompeu

In a professional python project, there are many steps one can take to improve its quality. In this talk, I will review some tools that have been useful to me:

package managers
code formatters
code linters
test runners
python manager
I will also talk about centralizing the configuration so different tools can act consistently, eg CLI, IDE and CI/CD.",https://i.ytimg.com/vi/6_W1_CbMCw4/maxresdefault.jpg,0,False,False,public,https://www.youtube.com/watch?v=6_W1_CbMCw4,https://www.youtube.com/watch?v=6_W1_CbMCw4
5,"PyCon PT 23 | Legacy apps, deadlines and project pragmatism",https://www.youtube.com/watch?v=zTInGGZxqb0,zTInGGZxqb0,PyCon Portugal,@pyconportugal,https://www.youtube.com/@pyconportugal,20230928,1423,32,1,,,People & Blogs,"TALK: Legacy apps, deadlines and project pragmatism - Delivering thousands of messages every night in primary healthcare by João Ferreira

In my talk I will go over the story of how I set up the service that sends text message reminders to patients of the Portuguese primary care health system. I will explain the constraints of working with a distributed silo legacy application and other proprietary projects in a large company, and the impact of that and short deadlines on application design. Python shines through the project for its vast amazing libraries, ease of design and speed of iteration.",https://i.ytimg.com/vi/zTInGGZxqb0/maxresdefault.jpg,0,False,False,public,https://www.youtube.com/watch?v=zTInGGZxqb0,https://www.youtube.com/watch?v=zTInGGZxqb0
6,PyCon PT 23 | Artificial Intelligence running on the Blockchain,https://www.youtube.com/watch?v=CFtGhSTj7Zk,CFtGhSTj7Zk,PyCon Portugal,@pyconportugal,https://www.youtube.com/@pyconportugal,20230928,614,52,0,,,People & Blogs,"TALK: Artificial Intelligence running on the Blockchain by Lucas Roitman

Until now, dapps have never been able to incorporate machine learning models. Therefore, it is hard for a dapp such as DTube to compete against centralized apps such as YouTube that can offer better content recommendations to their users.
Now, you can finally upload your machine learning model to the blockchain, to use in dapps, protocols, or cryptocurrencies. This technology will be explained in detail and how anyone can easily deploy a very simple machine learning model to the blockchain.

The talk addresses the challenge of integrating machine learning models into decentralized applications (dapps). This has historically been a barrier, limiting the competitiveness of dapps against their centralized counterparts. The session will provide insights on how to deploy and leverage ML models on the blockchain, thus empowering dapps to deliver more personalized and advanced services. It aims to facilitate the convergence of AI and blockchain for enhanced application development.
The goal is for attendees to leave with a clear understanding of how to deploy machine learning models on blockchain; and to see the potential of blockchain and AI convergence in creating more personalized, secure, and efficient dapps, thus bridging the gap between decentralized and centralized applications. It is also aimed to foster innovation and collaboration in the blockchain space.",https://i.ytimg.com/vi/CFtGhSTj7Zk/maxresdefault.jpg,0,False,False,public,https://www.youtube.com/watch?v=CFtGhSTj7Zk,https://www.youtube.com/watch?v=CFtGhSTj7Zk
7,PyCon PT 23 | The Aesthetics of Unbiased Machine Learning Systems: Crafting Fairness in Practice,https://www.youtube.com/watch?v=zitLtQN_S8Q,zitLtQN_S8Q,PyCon Portugal,@pyconportugal,https://www.youtube.com/@pyconportugal,20230928,2110,31,0,,,People & Blogs,"TALK: The Aesthetics of Unbiased Machine Learning Systems: Crafting Fairness in Practice by Rashmi Nagpal

In Artificial Intelligence systems, a renaissance has unfolded in recent years, captivating the imagination of many! However, a startling statistic emerges amidst the enthusiasm: merely 13% of machine learning models are deployed into production!

Indeed, the artistry of building and deploying these systems supersedes mere scientific methodology as these models dwell within the realm of complexity and are characterized by an inherent reliance on data distribution. Have you ever wondered if these models are trained upon biased data they are destined to produce haywire decisions?

In this talk, let us delve into the realm of ethicality, fairness, and unbiasedness, culminating in the seamless integration of machine learning models that embrace ethical considerations in their journey towards production using Python!",https://i.ytimg.com/vi/zitLtQN_S8Q/maxresdefault.jpg,0,False,False,public,https://www.youtube.com/watch?v=zitLtQN_S8Q,https://www.youtube.com/watch?v=zitLtQN_S8Q
8,PyCon PT 23 | Weird Python: A few ways in which Python can misbehave,https://www.youtube.com/watch?v=qeUuJvh93D8,qeUuJvh93D8,PyCon Portugal,@pyconportugal,https://www.youtube.com/@pyconportugal,20230928,1570,70,2,,,People & Blogs,"TALK: Weird Python: A few ways in which Python can misbehave by 
Quazi Nafiul Islam

Python has some weird interpreter quirks that behave in unexpected ways. In this talk, we will go over a few ways in which Python behaves unexpectedly:

Introduction: What this talk is about, and why it is important to steer clear of some known ""gotchas""
Meat of the Talk: Going over examples of ways in which Python behaves weirdly:
1. Mutable default arguments: When we provide mutable default arguments, some strange things might happen.
2. Integer Caching: This is how the is operator can behave in weird ways, and sometimes it is not between -5 and 256 that the is operator works.
3. Late Binding Closures: Python late-binds when creating functions within another function.
4. Match/Case Weirdness: Match/Case statements actually assign the variables when binding values to variables.
Questions/Answers",https://i.ytimg.com/vi/qeUuJvh93D8/maxresdefault.jpg,0,False,False,public,https://www.youtube.com/watch?v=qeUuJvh93D8,https://www.youtube.com/watch?v=qeUuJvh93D8
9,PyCon PT 23 | Tavern Crawler: a tool to enable fast and easy development of automated API tests,https://www.youtube.com/watch?v=pp6DMRBEI0Q,pp6DMRBEI0Q,PyCon Portugal,@pyconportugal,https://www.youtube.com/@pyconportugal,20230928,1962,108,1,,,People & Blogs,"TALK: Tavern Crawler: a tool to enable fast and easy development of automated API tests by Jorge Miranda

Tavern is an open source pytest plugin aimed to write automated integration tests for HTTP and MQTT APIs. Although based in pytest, the tests are specified in the YAML format, which makes support out-of-the-box in major Python IDEs, such as PyCharm or Visual Studio Code, not possible.

Tavern Crawler was developed to address the non-existence of a Tavern UI tool. The tool is a Visual Studio Code (VSCode) extension, with an interface loosely based in VSCode’s Test Explorer, so that developers feel immediately familiar working with it. Having such tool eases writing tests, which can become difficult especially when the number of tests and its complexity increases; and also enables quick visual assessment of the state of these.

This talk will address the following topics:
1. Brief introduction to Tavern
2. Issues with large Tavern projects and why an UI is important
3. Present and explore the Tavern Crawler extension with live examples
4. Lessons learned and the future of Tavern Crawler",https://i.ytimg.com/vi/pp6DMRBEI0Q/maxresdefault.jpg,0,False,False,public,https://www.youtube.com/watch?v=pp6DMRBEI0Q,https://www.youtube.com/watch?v=pp6DMRBEI0Q
10,PyCon PT 23 | KEYNOTE: Breaking Bias: PyWomen = 0 #ErrorAlert,https://www.youtube.com/watch?v=dEObTboU7AE,dEObTboU7AE,PyCon Portugal,@pyconportugal,https://www.youtube.com/@pyconportugal,20231002,2343,13,0,,,People & Blogs,"KEYNOTE: Breaking Bias: PyWomen = 0 #ErrorAlertIn by Cláudia Mendes

In this keynote we are going to talk about how unconscious bias can impact on business and real world IT products and learn the importance of understanding the inclusion of diverse teams.",https://i.ytimg.com/vi/dEObTboU7AE/maxresdefault.jpg,0,False,False,public,https://www.youtube.com/watch?v=dEObTboU7AE,https://www.youtube.com/watch?v=dEObTboU7AE
11,PyCon PT 23 | CPython Survival Kit: basic C concepts to understand Python better,https://www.youtube.com/watch?v=-KHeFoyCzSQ,-KHeFoyCzSQ,PyCon Portugal,@pyconportugal,https://www.youtube.com/@pyconportugal,20231002,1888,73,6,,,People & Blogs,"TALK: CPython Survival Kit: basic C concepts to understand Python better by Cristián Maureira-Fredes

The newest Python versions are including many changes that improve the performance and functionality, but what's going on under the hood? In this talk, you will learn the necessary topics to start discovering how CPython internals work, and how to create a new module based in C or C++.",https://i.ytimg.com/vi/-KHeFoyCzSQ/maxresdefault.jpg,0,False,False,public,https://www.youtube.com/watch?v=-KHeFoyCzSQ,https://www.youtube.com/watch?v=-KHeFoyCzSQ
12,PyCon PT 23 | Living and breathing backwards compatible changes,https://www.youtube.com/watch?v=QrYgQxOsz78,QrYgQxOsz78,PyCon Portugal,@pyconportugal,https://www.youtube.com/@pyconportugal,20231002,1881,14,1,,,People & Blogs,"TALK: Living and breathing backwards compatible changes by Leandro Damascena and Henrique Graça

Breaking changes can have a significant impact on the developer experience and the adoption of an open source project. How can we strike the right balance between developing our software and keeping our users happy and engaged with our projects?

As maintainers of AWS Lambda Powertools for Python, we embrace the exciting challenges that come with developing a widely adopted project, serving thousands of customers worldwide. Throughout our journey, we've discovered firsthand the immense complexities of managing software changes while engaging with a thriving community. Today, we stand proud, having unlocked the secrets to fostering an interactive and dynamic community around a rapidly evolving project. In this captivating presentation, we eagerly share the invaluable lessons we've learned along the way. As an attendee, you will discover insights that will benefit both consumers and maintainers of open source projects alike.",https://i.ytimg.com/vi/QrYgQxOsz78/maxresdefault.jpg,0,False,False,public,https://www.youtube.com/watch?v=QrYgQxOsz78,https://www.youtube.com/watch?v=QrYgQxOsz78
13,PyCon PT 23 | Practical Guide to Database Locks with Django,https://www.youtube.com/watch?v=ixzPqspdYnU,ixzPqspdYnU,PyCon Portugal,@pyconportugal,https://www.youtube.com/@pyconportugal,20231002,1513,43,1,,,People & Blogs,"TALK: Practical Guide to Database Locks with Django by Efe Öge

Race conditions? No problem! Dive into the world of database locks with Django and gain hands-on knowledge on how to eliminate race conditions, maintain order, and boost your application's performance.",https://i.ytimg.com/vi/ixzPqspdYnU/maxresdefault.jpg,0,False,False,public,https://www.youtube.com/watch?v=ixzPqspdYnU,https://www.youtube.com/watch?v=ixzPqspdYnU
14,PyCon PT 23| Python in Qiskit Environments for quantum computing,https://www.youtube.com/watch?v=bNQTYPxZSTg,bNQTYPxZSTg,PyCon Portugal,@pyconportugal,https://www.youtube.com/@pyconportugal,20231002,1848,13,0,,,People & Blogs,"TALK: Python in Qiskit Environments for quantum computing by Francisco Lavrador Pires

Python's presence in Qiskit environments for quantum computing is vital for several reasons. Its simplicity, extensive libraries, and integration with scientific computing tools make it an ideal language for expressing quantum algorithms and designing quantum circuits. Python's versatility allows researchers to combine quantum computing with machine learning techniques, opening new possibilities for advancements in the field. Furthermore, Python's emphasis on readability and the support of a vibrant community fosters collaboration and knowledge-sharing, propelling the growth and adoption of quantum computing.",https://i.ytimg.com/vi/bNQTYPxZSTg/maxresdefault.jpg,0,False,False,public,https://www.youtube.com/watch?v=bNQTYPxZSTg,https://www.youtube.com/watch?v=bNQTYPxZSTg
15,"PyCon PT 23 | I know Polars is fast, but my data pipelines are written in pandas!",https://www.youtube.com/watch?v=OlvEtR6365A,OlvEtR6365A,PyCon Portugal,@pyconportugal,https://www.youtube.com/@pyconportugal,20231002,1596,52,0,,,People & Blogs,"TALK: I know Polars is fast, but my data pipelines are written in pandas! by Luca Baggi

How long do you think it would take to rewrite your data pipelines from pandas to Polars? It turns out, less than you would expect! Of course, ""if it ain't broke, don't fix it"" - yet there are some fruits that are just hanging too low for you to ignore.

Starting from I/O, to (almost) zero-copy conversion from pandas to Polars, you will quickly realise how cheap and convenient it is to swap some bits of your pipelines from pandas to Polars. Though pandas' API is incredibly good, you will soon realise how Polars took it to the next level and made it much more powerful, expressive and intuitive.

Come for the speed, stay for the syntax!",https://i.ytimg.com/vi/OlvEtR6365A/maxresdefault.jpg,0,False,False,public,https://www.youtube.com/watch?v=OlvEtR6365A,https://www.youtube.com/watch?v=OlvEtR6365A
16,PyCon PT 23 | Faster Python with friends,https://www.youtube.com/watch?v=ssK7rE2x1p0,ssK7rE2x1p0,PyCon Portugal,@pyconportugal,https://www.youtube.com/@pyconportugal,20231002,1687,23,3,,,People & Blogs,"TALK: Faster Python with friends by Murilo Cunha

Python's ""speed problem"" is not a new issue, but there are different ways to speed a Python program up. In recent years, Python 3.11 was released and popularized as the ""faster Python"" and Mojo programming language was recently announced, advertised as having ""usability of Python with the performance of C"". Going back further, we see languages such as Cython, Just In Time (JIT) compilers and bindings.

In this talk, we'll go over the different approaches to increasing the speed of a Python application. We'll briefly explain how they work, compare the performance through a simple use case, and look at the limitations, tooling, trade-offs, and ease of use.",https://i.ytimg.com/vi/ssK7rE2x1p0/maxresdefault.jpg,0,False,False,public,https://www.youtube.com/watch?v=ssK7rE2x1p0,https://www.youtube.com/watch?v=ssK7rE2x1p0
17,PyCon PT 23 | Comprehending Comprehensions,https://www.youtube.com/watch?v=5fGrtPP_4G0,5fGrtPP_4G0,PyCon Portugal,@pyconportugal,https://www.youtube.com/@pyconportugal,20231002,1695,82,3,,,People & Blogs,"TALK: Comprehending Comprehensions by Rodrigo Girão Serrão

Discover the immense potential of Python's list comprehensions, dictionary comprehensions, set comprehensions, and generator expressions, as we present them as an idiom that focuses on data transformations.

Using real-world examples, we'll demonstrate how these tools can streamline data manipulation and transformation tasks while enhancing code readability. We'll also provide insights on best practices and use cases to maximize their effectiveness.

By the end of this talk, you will be equipped to confidently harness the full potential of comprehensions and generator expressions, empowering you to create more expressive and elegant Python code. Join us on this exciting journey and level up your Python programming!",https://i.ytimg.com/vi/5fGrtPP_4G0/maxresdefault.jpg,0,False,False,public,https://www.youtube.com/watch?v=5fGrtPP_4G0,https://www.youtube.com/watch?v=5fGrtPP_4G0
18,PyCon PT 23 | Building advanced back-office interfaces using Django & HTMX,https://www.youtube.com/watch?v=hdLWZQb8pkE,hdLWZQb8pkE,PyCon Portugal,@pyconportugal,https://www.youtube.com/@pyconportugal,20231002,1251,208,13,,,People & Blogs,"TALK: Building advanced back-office interfaces using Django & HTMX by Lucas Pires

Explore a pragmatic approach to enhancing Django's back-office interfaces. Delve into the practical integration of lightweight frameworks like HTMX and AlpineJS to introduce interactivity with minimal JavaScript. This talk focuses on custom generic class-based views, offering insights into CRUD operations, formsets, and advanced techniques for managing Django models.

Join me for a comprehensive overview of these techniques, from read-only forms to patching HTMX into the Django Admin, as we redefine Django development practices.",https://i.ytimg.com/vi/hdLWZQb8pkE/maxresdefault.jpg,0,False,False,public,https://www.youtube.com/watch?v=hdLWZQb8pkE,https://www.youtube.com/watch?v=hdLWZQb8pkE
19,PyCon PT 23 | Getting started with (modern) Python packaging,https://www.youtube.com/watch?v=2vgDn0F3eAI,2vgDn0F3eAI,PyCon Portugal,@pyconportugal,https://www.youtube.com/@pyconportugal,20231002,1408,116,1,,,People & Blogs,"TALK: Getting started with (modern) Python packaging by Filipe Laíns

Let's make sense of modern Python packaging tooling.

Python packaging has seen a lot of change recently. In the last few years lots of different tools showed up and getting started with Python packaging can be confusing. In this talk, I will introduce you to the available tooling, help you make sense of it, and guide you through the process of creating and releasing a Python package.",https://i.ytimg.com/vi/2vgDn0F3eAI/maxresdefault.jpg,0,False,False,public,https://www.youtube.com/watch?v=2vgDn0F3eAI,https://www.youtube.com/watch?v=2vgDn0F3eAI
20,Esmerald and Saffier - Complex Python made it easy with async,https://www.youtube.com/watch?v=XN0O1QAyyVQ,XN0O1QAyyVQ,PyCon Portugal,@pyconportugal,https://www.youtube.com/@pyconportugal,20231002,1444,128,3,,,People & Blogs,"TALK: Esmerald and Saffier - Complex Python made it easy with async by Tiago Silva and Pedro Correia

There are great frameworks out there like FastAPI, Flama, Flask, Django... All of them solving majority of the current day-to-day problems of 99% of the applications but leaving the 1% that is usually around structure and design/business without to much to do.

Esmerald got the inspiration from those great frameworks out there and was built with all the known amazing features but with business in mind as well.

Saffier leverages the power of Pydantic for its fields while offering a friendly, familiar and easy to use interface.

This ORM was designed to be flexible and compatible with pretty much every ASGI framework, like Esmerald, Starlette, FastAPI, Sanic, Quart... With simple pluggable design thanks to its origins.",https://i.ytimg.com/vi/XN0O1QAyyVQ/maxresdefault.jpg,0,False,False,public,https://www.youtube.com/watch?v=XN0O1QAyyVQ,https://www.youtube.com/watch?v=XN0O1QAyyVQ
21,PyCon PT 23 | Lightning Talks,https://www.youtube.com/watch?v=j1A34lBKuBU,j1A34lBKuBU,PyCon Portugal,@pyconportugal,https://www.youtube.com/@pyconportugal,20231002,2333,51,1,,,People & Blogs,,https://i.ytimg.com/vi/j1A34lBKuBU/maxresdefault.jpg,0,False,False,public,https://www.youtube.com/watch?v=j1A34lBKuBU,https://www.youtube.com/watch?v=j1A34lBKuBU
22,PyCon PT 23 | Voices from the Community,https://www.youtube.com/watch?v=6E0v_699W2s,6E0v_699W2s,PyCon Portugal,@pyconportugal,https://www.youtube.com/@pyconportugal,20240415,85,185,0,,,People & Blogs,🎥 Hear it straight from the community! Attendees from last year share why you shouldn't miss out on PyConPT 24! Get inspired and mark your calendars! 🐍✨,https://i.ytimg.com/vi/6E0v_699W2s/maxresdefault.jpg,0,False,False,public,https://www.youtube.com/watch?v=6E0v_699W2s,https://www.youtube.com/watch?v=6E0v_699W2s
