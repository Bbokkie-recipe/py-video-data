[
    {
        "index": 1,
        "title": "Opening Ceremony",
        "url": "https://www.youtube.com/watch?v=dm-4jQoV16k",
        "video_id": "dm-4jQoV16k",
        "uploader": "PyCon South Africa",
        "uploader_id": "@pyconza",
        "uploader_url": "https://www.youtube.com/@pyconza",
        "upload_date": "20171008",
        "duration": 505,
        "view_count": 327,
        "like_count": 2,
        "comment_count": null,
        "tags": [
            "pyconza",
            "pyconza2017",
            "python",
            "DavidSharpe"
        ],
        "categories": [
            "Education"
        ],
        "description": "David Sharpe\nhttps://2017.za.pycon.org/news/opening-ceremony/\n# Opening Ceremony\n\nA general welcome and an introduction to all the exciting things that will be happening at PyConZA 2017!",
        "thumbnail": "https://i.ytimg.com/vi_webp/dm-4jQoV16k/maxresdefault.webp",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=dm-4jQoV16k",
        "original_url": "https://www.youtube.com/watch?v=dm-4jQoV16k"
    },
    {
        "index": 2,
        "title": "Don't try to look smart. Be smart",
        "url": "https://www.youtube.com/watch?v=OovYNyWWuL0",
        "video_id": "OovYNyWWuL0",
        "uploader": "PyCon South Africa",
        "uploader_id": "@pyconza",
        "uploader_url": "https://www.youtube.com/@pyconza",
        "upload_date": "20171008",
        "duration": 3753,
        "view_count": 255,
        "like_count": 5,
        "comment_count": null,
        "tags": [
            "pyconza",
            "pyconza2017",
            "python",
            "FlavioPercoco"
        ],
        "categories": [
            "Education"
        ],
        "description": "Flavio Percoco\nhttps://2017.za.pycon.org/talks/1/\nThe technology industry is growing and already huge. The number of humans in this industry and the number of areas they can work on are overwhelming. The number of opportunities often don't seem as many for an industry that big, nonetheless.\n\nRegardless of how long you've been in this industry, you often feel overwhelmed, unfocused, demotivated by the size of the industry, the uncertainty it generates and the urge of doing something others consider important.\n\nThroughout this talk, the audience will learn how to grow in an industry that is often blasted with intellectual appearances, quantity over quality and unstoppable, constant, changes. The talk provides tips to cope with large communities and fields as well as experiences and examples.",
        "thumbnail": "https://i.ytimg.com/vi_webp/OovYNyWWuL0/maxresdefault.webp",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=OovYNyWWuL0",
        "original_url": "https://www.youtube.com/watch?v=OovYNyWWuL0"
    },
    {
        "index": 3,
        "title": "Experiences in Asynchronous Application Development with Crossbar.io",
        "url": "https://www.youtube.com/watch?v=G5eYUj-y2oQ",
        "video_id": "G5eYUj-y2oQ",
        "uploader": "PyCon South Africa",
        "uploader_id": "@pyconza",
        "uploader_url": "https://www.youtube.com/@pyconza",
        "upload_date": "20171006",
        "duration": 2365,
        "view_count": 633,
        "like_count": 10,
        "comment_count": 1,
        "tags": [
            "pyconza",
            "pyconza2017",
            "python",
            "AdamJorgensen"
        ],
        "categories": [
            "Education"
        ],
        "description": "Adam Jorgensen\nhttps://2017.za.pycon.org/talks/19/\nRecently at OpenDNA we've been rebuilding one of our core internal applications from the ground-up. Early on we decided that we wanted to make the new system completely asynchronous, leveraging the ability of modern browsers to communicate with the server in a bi-directional fashion unconstrained by the usual flow of a RESTful application. \n\nThere are a number of ways to implement this kind of application in Python but only one of them (in our humble opinion) is really worth investing time in: Crossbar.io\n\nIn this talk I will cover the process of developing a purely asynchronous application using Crossbar from top to bottom, detailing everything from high-level design considerations to low-level code decisions to potential pitfalls and how to avoid them.\n\nThe aim: To convince you that your next application should be built using Crossbar!\n\nThis talk should be suitable for any audience but will be of particular interest to developers looking for a way to leverage WebSockets and/or WAMP to develop highly or even purely asynchronous applications.",
        "thumbnail": "https://i.ytimg.com/vi_webp/G5eYUj-y2oQ/maxresdefault.webp",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=G5eYUj-y2oQ",
        "original_url": "https://www.youtube.com/watch?v=G5eYUj-y2oQ"
    },
    {
        "index": 4,
        "title": "Control and Monitoring of the Karoo Telescope Arrays using Python (5 years later)",
        "url": "https://www.youtube.com/watch?v=z1YtqlEEF2I",
        "video_id": "z1YtqlEEF2I",
        "uploader": "PyCon South Africa",
        "uploader_id": "@pyconza",
        "uploader_url": "https://www.youtube.com/@pyconza",
        "upload_date": "20171008",
        "duration": 2623,
        "view_count": 189,
        "like_count": 1,
        "comment_count": null,
        "tags": [
            "pyconza",
            "pyconza2017",
            "python",
            "ToufeeqOckards",
            "MartinSlabber"
        ],
        "categories": [
            "Education"
        ],
        "description": "Toufeeq Ockards, Martin Slabber\nhttps://2017.za.pycon.org/talks/55/\nIn 2012 the The SKA SA Control and Monitoring (CAM) gave a talk at PyConZA and it can be viewed at this [Youtube Video](https://www.youtube.com/watch?v=HN5cMyZucKI) and more info at [PyConZA 2012 link](https://2012.za.pycon.org/speaker/27/detail.html). \n\n5 years later, Python is still used for Controlling and Monitoring of this world-class instrument, that is on its path to being the most sensitive radio telescope in the southern hemisphere. The 64 dish array completion is around the corner and we take a look back at the last 5 years and our time with Python.\n\nWho is your audience?  \n\\- The general audience. It should interest all the attendees.\n\nWhat will they get out of it?   \n\\- Insight into the use of Python in a Large Experimental Physics Control System.\n\nWhat will you cover?  \n\\- Overview (SKA vs MeerKAT vs KAT-7)   \n\\- Why SKA SA chose Python   \n\\- How and where Python is used at SKA SA.  \n\\- Description of the Control and Monitoring problem domain (what we monitor &amp; control, data volumes)  \n\\- Architecture of the CAM subsystem (KATcp, proxies, monitors)  \n\\- Some of the lessons learnt over the last 5 years using Python.  \n\\- Overview of Control interfaces   \n\\- Live demo   \n\\- astronomy images produced by MeerKAT",
        "thumbnail": "https://i.ytimg.com/vi_webp/z1YtqlEEF2I/maxresdefault.webp",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=z1YtqlEEF2I",
        "original_url": "https://www.youtube.com/watch?v=z1YtqlEEF2I"
    },
    {
        "index": 5,
        "title": "ZimboPy: Empowering Zimbabwean Girls As Change Makers",
        "url": "https://www.youtube.com/watch?v=8f_TI8kp5zw",
        "video_id": "8f_TI8kp5zw",
        "uploader": "PyCon South Africa",
        "uploader_id": "@pyconza",
        "uploader_url": "https://www.youtube.com/@pyconza",
        "upload_date": "20171006",
        "duration": 1456,
        "view_count": 269,
        "like_count": 6,
        "comment_count": 1,
        "tags": [
            "pyconza",
            "pyconza2017",
            "python",
            "MarleneMhangami",
            "RonaldMaravanyika"
        ],
        "categories": [
            "Education"
        ],
        "description": "Marlene Mhangami, Ronald Maravanyika\nhttps://2017.za.pycon.org/talks/17/\nZimboPy is an organic, on-the-ground effort by a local non-profit organization and Python developers in the Harare software development community to advance the cause of women in technology in Zimbabwe. The program operates in community centers, universities, high schools and tech hubs to make programming accessible to girls regardless of their socio-economic status. Upon initially joining a ZimboPy club, many of the girls would have never used a computer before, let alone code.\n\nIn Zimbabwe, only 17% of computer science undergraduate majors are women, and in the developing world, women make up less than 20% of the information and technology workforce. ZimboPy exists to empower Zimbabwean girls with the skills and confidence necessary to not only enter the local tech industry, but to lead it.\n\nIn addition to learning to code, ZimboPy club members also join a global network of women in technology that are working to tackle social challenges through human-centered design and computer science.The Python community has been a central part of our work. For our mentorship week that was held in April we had python programmers from USA, Italy, Australia and of course Zimbabwe join us in person and virtually. Our talk will outline what we've achieved so far and how anyone who's part of the Python community can get involved. We invite developers from around the world to help Zimbabwean girls address local problems which can be solved with technology, such as clean water and e-commerce solutions for small shops in towns and villages. Mentors can travel to Zimbabwe and work with girls as they develop a plan for their applications and pair-program with them, answering questions and providing feedback along the way. Overall, ZimboPy looks forward to changing Zimbabwe's future through creativity, collaboration and the power of Python programming",
        "thumbnail": "https://i.ytimg.com/vi_webp/8f_TI8kp5zw/maxresdefault.webp",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=8f_TI8kp5zw",
        "original_url": "https://www.youtube.com/watch?v=8f_TI8kp5zw"
    },
    {
        "index": 6,
        "title": "OpenStack and Software Engineering - Questions, Tricks and everything else about OpenStack.",
        "url": "https://www.youtube.com/watch?v=QKM7IODvFlE",
        "video_id": "QKM7IODvFlE",
        "uploader": "PyCon South Africa",
        "uploader_id": "@pyconza",
        "uploader_url": "https://www.youtube.com/@pyconza",
        "upload_date": "20171008",
        "duration": 2132,
        "view_count": 108,
        "like_count": 0,
        "comment_count": null,
        "tags": [
            "pyconza",
            "pyconza2017",
            "python",
            "StephanLudik",
            "ThomasLee"
        ],
        "categories": [
            "Education"
        ],
        "description": "Stephan Ludik, Thomas Lee\nhttps://2017.za.pycon.org/talks/75/\n**1 Introduction**\n\n**1.1 Presenters**\n\n  * Thomas Lee\n  * Stephan Ludik\n\n**1.2 Our OpenStack experience**\n\nOur OpenStack Journey\n\nOur Open Source Contributions\n\n**2 OpenStack Introduction**\n\n**2.1 What OpenStack Is**\n\nWe will talk about the OpenStack program as a whole and what it consists of. We will alsodiscuss some of the main projects in OpenStack and how they fit together to deliver IaaS and other services.\n\n**2.2 OpenStack project factoids**\n\nWe discuss a few key aspects of the OpenStack project and community around it.\n\n**2.3 Case Study**\n\nBuilding OpenStack for Test, Dev and Production use.\n\n**2.4 OpenStack vs. Competitors**\n\nCost structure\n\nFunctional benefits\n\n**3 Demo of OpenStack in action**\n\nA little demonstration of what is possible with OpenStack.\n\n  * Start up a Django based application via an heat template, showing the progress.\n  * Show the environment is functioning on the cloud.\n  * Destroy the complete environment.\n\n**4 Q&amp;A**",
        "thumbnail": "https://i.ytimg.com/vi_webp/QKM7IODvFlE/maxresdefault.webp",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=QKM7IODvFlE",
        "original_url": "https://www.youtube.com/watch?v=QKM7IODvFlE"
    },
    {
        "index": 7,
        "title": "Jupyter Notebooks for Radio Astronomy Research",
        "url": "https://www.youtube.com/watch?v=L5TxeCwNV_4",
        "video_id": "L5TxeCwNV_4",
        "uploader": "PyCon South Africa",
        "uploader_id": "@pyconza",
        "uploader_url": "https://www.youtube.com/@pyconza",
        "upload_date": "20171008",
        "duration": 2086,
        "view_count": 579,
        "like_count": 16,
        "comment_count": null,
        "tags": [
            "pyconza",
            "pyconza2017",
            "python",
            "BradFrank"
        ],
        "categories": [
            "Education"
        ],
        "description": "Brad Frank\nhttps://2017.za.pycon.org/talks/23/\nAt the Inter-University Institute for Data Intensive Astronomy (IDIA, www.idia.ac.za), we are focusing on several important use-cases related to the delivery of science data products from large radio telescopes, such as MeerKAT. The requirements for the hardcore processing and analysis of raw radio data has to be counter-balanced with our essential need to collaborate on our science projects. \n\nWe have thus adopted the Jupyter Hub/Notebooks as the principle means of running radio astronomy workflows, pipelines and calibration scripts. We have found this to be an enormously useful and powerful medium to prototype technical recipes, and to share lessons learned. This allows us to shorten the amount of time taken to develop a complex astronomical workflow, and shifts the focus on the data and the processes involved in a single, comprehensive framework. \n\nThe usage of Jupyter Notebooks is become quite popular in radio astronomy, and marks a distinct paradigm shift in the way that astronomers all over the world are collaborating on large science projects.\n\nIn my talk I will focus on our usage of Jupyter Hub/Notebooks within an astronomical context, and some highlights related to the development of our astronomical computing software stack in python.",
        "thumbnail": "https://i.ytimg.com/vi_webp/L5TxeCwNV_4/maxresdefault.webp",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=L5TxeCwNV_4",
        "original_url": "https://www.youtube.com/watch?v=L5TxeCwNV_4"
    },
    {
        "index": 8,
        "title": "The importance of Agile Software Testing",
        "url": "https://www.youtube.com/watch?v=XYbrl2Dyj-4",
        "video_id": "XYbrl2Dyj-4",
        "uploader": "PyCon South Africa",
        "uploader_id": "@pyconza",
        "uploader_url": "https://www.youtube.com/@pyconza",
        "upload_date": "20171008",
        "duration": 3325,
        "view_count": 244,
        "like_count": 3,
        "comment_count": null,
        "tags": [
            "pyconza",
            "pyconza2017",
            "python",
            "KudakwasheSiziva"
        ],
        "categories": [
            "Education"
        ],
        "description": "Kudakwashe Siziva\nhttps://2017.za.pycon.org/talks/46/\nFrom the beginning of time, the relationship between developers and software testers has always been that of 'Cat and Mouse'. This relationship has had its fair share of short comings which chiefly included unmet deadlines and lack of confidence when shipping software products. The talk is meant to introduce a better relationship between developers and testers by going over the importance of including testing in an Agile cycle.\n\nWe will look at different levels of testing E.g. Unit vs integration testing, how units work together. Knowing why we are writing each test - what are we trying to achieve when we write a test for a unit as that is a place that developers struggle and either write duplicate tests or not enough and changeability and confidence can suffer as a result.\n\nObjective is to build better agile software teams and ship clean python projects with confidence.",
        "thumbnail": "https://i.ytimg.com/vi_webp/XYbrl2Dyj-4/maxresdefault.webp",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=XYbrl2Dyj-4",
        "original_url": "https://www.youtube.com/watch?v=XYbrl2Dyj-4"
    },
    {
        "index": 9,
        "title": "Better APIs using GraphQL with Python and React",
        "url": "https://www.youtube.com/watch?v=lkKGfcp9Cvc",
        "video_id": "lkKGfcp9Cvc",
        "uploader": "PyCon South Africa",
        "uploader_id": "@pyconza",
        "uploader_url": "https://www.youtube.com/@pyconza",
        "upload_date": "20171006",
        "duration": 2236,
        "view_count": 4608,
        "like_count": 53,
        "comment_count": null,
        "tags": [
            "pyconza",
            "pyconza2017",
            "python",
            "MikeJones"
        ],
        "categories": [
            "Education"
        ],
        "description": "Mike Jones\nhttps://2017.za.pycon.org/talks/34/\nhttps://speakerdeck.com/imsickofmaps/better-apis-using-graphql-with-python\n\nHave you ever found yourself stuck in a battle between creating more and more granular REST endpoints to return different payloads suitable for the individual use cases of different consumers and just Exposing All The Data, All The Time?\n\nEnter GraphQL, born at Facebook but now in wide use in many organisation and with a burgeoning ecosystem of tools across many languages.\n\nWe'll be examining what GraphQL is, comparison to REST APIs, its potential use-cases and how to get productive quickly with Graphene (Python GraphQL service) on your backend and Apollo (Javascript client) on your frontend.\n\nWe'll use real-world examples from Picsa, where we've adopted Graphene-Django as the core element in our platform for building financial services for low-income farmworkers in South Africa.\n\nThis will be an introduction to these frameworks that should be applicable for those who have no prior experience.",
        "thumbnail": "https://i.ytimg.com/vi_webp/lkKGfcp9Cvc/maxresdefault.webp",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=lkKGfcp9Cvc",
        "original_url": "https://www.youtube.com/watch?v=lkKGfcp9Cvc"
    },
    {
        "index": 10,
        "title": "PyPy3, Numpy, and maybe a GIL-less future",
        "url": "https://www.youtube.com/watch?v=Nj8mA-qZ_VU",
        "video_id": "Nj8mA-qZ_VU",
        "uploader": "PyCon South Africa",
        "uploader_id": "@pyconza",
        "uploader_url": "https://www.youtube.com/@pyconza",
        "upload_date": "20171006",
        "duration": 2354,
        "view_count": 816,
        "like_count": 10,
        "comment_count": 1,
        "tags": [
            "pyconza",
            "pyconza2017",
            "python",
            "MaciejFijalkowski",
            "ArminRigo"
        ],
        "categories": [
            "Education"
        ],
        "description": "Maciej Fijalkowski, Armin Rigo\nhttps://2017.za.pycon.org/talks/69/\nPyPy is a Python implementation, alternative to the standard CPython. PyPy comes with a JIT (Just-in-Time compiler). We'll see the recent developments:\n\n  * PyPy now supports either Python 2.7 or (in beta) Python 3.5.\n\n  * Numpy and the scientific stack are getting ever closer to fully working.\n\nWe will also mention a potential future direction: getting rid of the GIL (Global Interpreter Lock). The Python community has been discussing removing the GIL for a long time, with no success so far. Targeting PyPy instead of CPython would still be quite involved, but more doable.",
        "thumbnail": "https://i.ytimg.com/vi_webp/Nj8mA-qZ_VU/maxresdefault.webp",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=Nj8mA-qZ_VU",
        "original_url": "https://www.youtube.com/watch?v=Nj8mA-qZ_VU"
    },
    {
        "index": 11,
        "title": "Making man-made medicine price data more useful",
        "url": "https://www.youtube.com/watch?v=AHhB74ttslM",
        "video_id": "AHhB74ttslM",
        "uploader": "PyCon South Africa",
        "uploader_id": "@pyconza",
        "uploader_url": "https://www.youtube.com/@pyconza",
        "upload_date": "20171006",
        "duration": 1951,
        "view_count": 56,
        "like_count": 2,
        "comment_count": 1,
        "tags": [
            "pyconza",
            "pyconza2017",
            "python",
            "JDBothma"
        ],
        "categories": [
            "Education"
        ],
        "description": "JD Bothma\nhttps://2017.za.pycon.org/talks/79/\nA walk-through of how we practically clean and use a public dataset that is changing people's lives.\n\nThe [Medicine Price Registry](http://mpr.gov.za/) is a spreadsheet published one or more times per year, with the latest prices and active ingredients for medicines registered for sale in South Africa. Like most data, it's dirty and has limited usability in its original form. We take you through some of the practical steps we take to clean the data and make it easier to analyse and use. This allows us, for example, to analyse how price competition from generics lower medicine prices, or not!\n\nThis is intended as a simple real-world example of how we work around the issues with a dataset using a few common tools. This could be done with any platform, but jupyter notebooks, sqlalchemy, alembic migrations and the brevity of python is a nice combination for the iteration needed to work with this data and adapt as we get to know it. We start with a GUI tool called OpenRefine but it pretty quickly becomes necessary to write just a bit of code to move quickly.\n\nThere's a lot of material out there on specific tools. I'd like to show the reality of dirty datasets, and the workarounds and approaches we use to get value from it nonetheless. One such example is using charts and ordering to group related data and visually identify interesting events. I encourage people to ask questions and offer suggestions. The effort put into this project has been limited by time constraints but any improvements can have real world impact.\n\nIf you're interested in trying something like this yourself, you're invited to chat with me about civic technology, perhaps join our civic tech community, and help figure out how it can be most effective. You may also be interested in the CodeBridge Community Evening Thursday 5 October at 18:30.",
        "thumbnail": "https://i.ytimg.com/vi_webp/AHhB74ttslM/maxresdefault.webp",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=AHhB74ttslM",
        "original_url": "https://www.youtube.com/watch?v=AHhB74ttslM"
    },
    {
        "index": 12,
        "title": "In the land of Serverless, who uses Zappa is king!",
        "url": "https://www.youtube.com/watch?v=1aggqfPzhNY",
        "video_id": "1aggqfPzhNY",
        "uploader": "PyCon South Africa",
        "uploader_id": "@pyconza",
        "uploader_url": "https://www.youtube.com/@pyconza",
        "upload_date": "20171008",
        "duration": 2155,
        "view_count": 2288,
        "like_count": 11,
        "comment_count": 2,
        "tags": [
            "pyconza",
            "pyconza2017",
            "python",
            "JonatasBaldin"
        ],
        "categories": [
            "Education"
        ],
        "description": "Jonatas Baldin\nhttps://2017.za.pycon.org/talks/47/\nServerless is an architecture style where we don't have servers*, dealing just with third-party services. This means infinite scaling, less downtime and less maintenance. Of course this is not the answer for every problem, but it can be a good choice.\n\nTogether with this concept, there's Zappa, a framework that makes that easily to deploy Python WSGI applications with AWS Lambda and AWS API Gateway.\n\nIn this talk, we're going to discuss about the concept and the tool, deploying a web Python application with Zappa!\n\n  * Kidding: Serverless still has servers ;)",
        "thumbnail": "https://i.ytimg.com/vi_webp/1aggqfPzhNY/maxresdefault.webp",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=1aggqfPzhNY",
        "original_url": "https://www.youtube.com/watch?v=1aggqfPzhNY"
    },
    {
        "index": 13,
        "title": "Meet MariaDB 10.2/10.3",
        "url": "https://www.youtube.com/watch?v=3pSzg-yr62A",
        "video_id": "3pSzg-yr62A",
        "uploader": "PyCon South Africa",
        "uploader_id": "@pyconza",
        "uploader_url": "https://www.youtube.com/@pyconza",
        "upload_date": "20171008",
        "duration": 1773,
        "view_count": 379,
        "like_count": 2,
        "comment_count": null,
        "tags": [
            "pyconza",
            "pyconza2017",
            "python",
            "IanGilfillan"
        ],
        "categories": [
            "Education"
        ],
        "description": "Ian Gilfillan\nhttps://2017.za.pycon.org/talks/11/\nMariaDB 10.2 is the current stable release, and MariaDB 10.3 the current development release. This talk introduces some of the new features that may be of interest to Python developers, in particular Window Functions and Common Table Expressions (CTEs). Window functions are similar to aggregate functions in that they perform calculations across a set of rows. Recursive CTEs are excellent for navigating a tree structure, or a route map, which regular SQL is poor at.\n\nBy making use of these features. more work can be passed on to the database layer, simplifying the code and improving performance.",
        "thumbnail": "https://i.ytimg.com/vi_webp/3pSzg-yr62A/maxresdefault.webp",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=3pSzg-yr62A",
        "original_url": "https://www.youtube.com/watch?v=3pSzg-yr62A"
    },
    {
        "index": 14,
        "title": "Large-scale media analysis for driving accountability",
        "url": "https://www.youtube.com/watch?v=NbvyzqeEUj0",
        "video_id": "NbvyzqeEUj0",
        "uploader": "PyCon South Africa",
        "uploader_id": "@pyconza",
        "uploader_url": "https://www.youtube.com/@pyconza",
        "upload_date": "20171008",
        "duration": 2627,
        "view_count": 111,
        "like_count": 1,
        "comment_count": null,
        "tags": [
            "pyconza",
            "pyconza2017",
            "python",
            "MatthewAdendorff"
        ],
        "categories": [
            "Education"
        ],
        "description": "Matthew Adendorff\nhttps://2017.za.pycon.org/talks/60/\nIn an age where fake news is an emerging concern, digestion of digital media should be assisted by informative measures that are exemplary of integrity, responsibility, equal representation, and a lack of personal agenda. Such metrics are intrinsically complex and their derivation, calculation and implementation should be handled with care. At the core of developing such accountability measures is the ability to ingest, process, analyze and draw insights from digital media. To achieve this, Media Monitoring Africa has developed a cloud-based platform, built on Flask, with a full Python stack, to automatically ingest digital media from several countries (particularly South Africa and other African countries). The system then performs Natural Language Processing to highlight important sources, topics, and entities, and allows for advanced analytics on the resulting data to be performed.\n\nThis talk will present the rationale, data flow and cloud implementation of this platform, as well as its application to driving accountability and insights in South African media. The intended audience is broad, where members can see a detailed road-map of constructing a Python-based Big Data type system, the analyses that can be performed with it, as well as the impact it can have on a society's approach to digital media.",
        "thumbnail": "https://i.ytimg.com/vi_webp/NbvyzqeEUj0/maxresdefault.webp",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=NbvyzqeEUj0",
        "original_url": "https://www.youtube.com/watch?v=NbvyzqeEUj0"
    },
    {
        "index": 15,
        "title": "Solid Snakes or: How to Take 5 Weeks of Vacation",
        "url": "https://www.youtube.com/watch?v=rjZLZ6is-u4",
        "video_id": "rjZLZ6is-u4",
        "uploader": "PyCon South Africa",
        "uploader_id": "@pyconza",
        "uploader_url": "https://www.youtube.com/@pyconza",
        "upload_date": "20171006",
        "duration": 3226,
        "view_count": 84,
        "like_count": 1,
        "comment_count": null,
        "tags": [
            "pyconza",
            "pyconza2017",
            "python",
            "HynekSchlawack"
        ],
        "categories": [
            "Education"
        ],
        "description": "Hynek Schlawack\nhttps://2017.za.pycon.org/talks/6/\nNo matter whether you run a web app, search for gravitational waves, or maintain a backup script: being responsible for a piece of software or infrastructure means that you either get a pager right away, or that you get angry calls from people affected by outages. Being paged at 4am in everyday life is bad enough. Having to fix problems from hotel rooms while your travel buddies go for brunch is even worse.\n\nAnd while incidents can’t be prevented completely, there are ways to make your systems more reliable and minimize the need for (your!) manual intervention. This talk will help you to get calm nights and relaxing vacations by teaching you some of them.",
        "thumbnail": "https://i.ytimg.com/vi_webp/rjZLZ6is-u4/maxresdefault.webp",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=rjZLZ6is-u4",
        "original_url": "https://www.youtube.com/watch?v=rjZLZ6is-u4"
    },
    {
        "index": 16,
        "title": "You suck at shell scripting: building awesome command line tools in Python for fun and profit!",
        "url": "https://www.youtube.com/watch?v=6OY1xFYJVxQ",
        "video_id": "6OY1xFYJVxQ",
        "uploader": "PyCon South Africa",
        "uploader_id": "@pyconza",
        "uploader_url": "https://www.youtube.com/@pyconza",
        "upload_date": "20171008",
        "duration": 3055,
        "view_count": 57194,
        "like_count": 599,
        "comment_count": 7,
        "tags": [
            "pyconza",
            "pyconza2017",
            "python",
            "TobiasBrandt"
        ],
        "categories": [
            "Education"
        ],
        "description": "Tobias Brandt\nhttps://2017.za.pycon.org/talks/71/\nYou do! You're aweful! You are as bad at shell scripting as Helen Zille is at Twitter. However clever that 140 character bash one liner seemed at the time, you know that you regretted it once it became an integral part of your production build pipeline. This talk will show you how to write maintainable Command Line Interfaces with click and pathlib that won't leave you trying to rewrite your git commit history after the next production system outage.\n\nAs a simple illustration I'll demonstrate command line application to download and analyse digital asset data (aka cryptocurrencies).",
        "thumbnail": "https://i.ytimg.com/vi_webp/6OY1xFYJVxQ/maxresdefault.webp",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=6OY1xFYJVxQ",
        "original_url": "https://www.youtube.com/watch?v=6OY1xFYJVxQ"
    },
    {
        "index": 17,
        "title": "Thursday Lightning Talks",
        "url": "https://www.youtube.com/watch?v=JRn4Fg-poak",
        "video_id": "JRn4Fg-poak",
        "uploader": "PyCon South Africa",
        "uploader_id": "@pyconza",
        "uploader_url": "https://www.youtube.com/@pyconza",
        "upload_date": "20171008",
        "duration": 1831,
        "view_count": 133,
        "like_count": 0,
        "comment_count": null,
        "tags": [
            "pyconza",
            "pyconza2017",
            "python",
            "RobynFarah"
        ],
        "categories": [
            "Education"
        ],
        "description": "Robyn Farah\nhttps://2017.za.pycon.org/talks/thursday-lightning-talks/\n# Thursday Lightning Talks\n\n  * Adrian Moisey: \"Lint-Review\"\n  * Alex Hall: \"Bird's Eye\"\n  * Lasse Schuirmann: \"Sticky Notes\"\n  * JP Viljoen: \"Magic Wormhole\"\n  * José Carlos S Fonseca: \"Editing Fortran .ini configuration files from Python\"\n\nSee [Lightning Talks](/talks/lightning-talks) for details of how to submit a talk",
        "thumbnail": "https://i.ytimg.com/vi_webp/JRn4Fg-poak/maxresdefault.webp",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=JRn4Fg-poak",
        "original_url": "https://www.youtube.com/watch?v=JRn4Fg-poak"
    },
    {
        "index": 18,
        "title": "Zen and the Art of Data Science",
        "url": "https://www.youtube.com/watch?v=IVZriKujKZ0",
        "video_id": "IVZriKujKZ0",
        "uploader": "PyCon South Africa",
        "uploader_id": "@pyconza",
        "uploader_url": "https://www.youtube.com/@pyconza",
        "upload_date": "20171007",
        "duration": 2281,
        "view_count": 234,
        "like_count": 6,
        "comment_count": null,
        "tags": [
            "pyconza",
            "pyconza2017",
            "python",
            "HelgeReikeras"
        ],
        "categories": [
            "Education"
        ],
        "description": "Helge Reikeras\nhttps://2017.za.pycon.org/talks/67/\nThe popularity of Data Science in the business world has exploded in recent years as companies are realising the value that data can yield to their products, services, and business decisions.\n\nIn this talk, we'll discuss a typical data science workflow, from extracting the raw data through to serving real-time machine learning predictions using a REST API.\n\nWe'll feature a range of Python tools that make up the Data Science pipeline, including Pandas, Scikit-learn, Gensim, Luigi, and Flask, and show how these all can work together.\n\nA real-world implementation done at Offerzen will be presented as an example.",
        "thumbnail": "https://i.ytimg.com/vi_webp/IVZriKujKZ0/maxresdefault.webp",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=IVZriKujKZ0",
        "original_url": "https://www.youtube.com/watch?v=IVZriKujKZ0"
    },
    {
        "index": 19,
        "title": "Managing 2000+ CPEs with Celery and Django",
        "url": "https://www.youtube.com/watch?v=8K9ZjvmEfB8",
        "video_id": "8K9ZjvmEfB8",
        "uploader": "PyCon South Africa",
        "uploader_id": "@pyconza",
        "uploader_url": "https://www.youtube.com/@pyconza",
        "upload_date": "20171008",
        "duration": 1416,
        "view_count": 521,
        "like_count": 6,
        "comment_count": null,
        "tags": [
            "pyconza",
            "pyconza2017",
            "python",
            "DuaneChurms"
        ],
        "categories": [
            "Education"
        ],
        "description": "Duane Churms\nhttps://2017.za.pycon.org/talks/40/\nWe implemented an interface between a TR069 Auto Configuration Server (ACS) and an ISP's billing system. This system ensures consistency between data on the billing system and over 2000 CPEs (Customer Premises Equipment) in the field. It prevents fraud by ensuring that credentials are only used on the devices for which they are intended. Django was used to present an API to the billing system, which can provision credentials for each CPE or deprovision a CPE. Celery is used to perform asynchronous communication with the ACS, which can take several seconds per call.\n\nWe encountered several challenges during this project, such as TR069 parameter locations being inconsistent across CPE models and firmware versions. A mapping system had to be implemented to allow all device models to be managed. This talk covers the challenges we faced and the approach we used to overcome these challenges.",
        "thumbnail": "https://i.ytimg.com/vi_webp/8K9ZjvmEfB8/maxresdefault.webp",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=8K9ZjvmEfB8",
        "original_url": "https://www.youtube.com/watch?v=8K9ZjvmEfB8"
    },
    {
        "index": 20,
        "title": "Python 2 and 3 compatibility: In a single codebase",
        "url": "https://www.youtube.com/watch?v=j_nrSyL7CxQ",
        "video_id": "j_nrSyL7CxQ",
        "uploader": "PyCon South Africa",
        "uploader_id": "@pyconza",
        "uploader_url": "https://www.youtube.com/@pyconza",
        "upload_date": "20171007",
        "duration": 1363,
        "view_count": 166,
        "like_count": 4,
        "comment_count": null,
        "tags": [
            "pyconza",
            "pyconza2017",
            "python",
            "JoannahNanjekye"
        ],
        "categories": [
            "Education"
        ],
        "description": "Joannah Nanjekye\nhttps://2017.za.pycon.org/talks/56/\nAlthough Python 3 is considered the future of Python, Python 2.x will be maintained for several more years, alongside Python 3 which is not backwards compatible with many open source projects and some packages on PYPi still supporting python 2.x because the users of these projects still use python 2.x. \n\nThis talk explains clean ways to write code that will run on both Python 2.x and 3.x with examples of how to convert existing Python 2-compatible code to code that will run reliably on both Python 2.x and 3.x.\n\nDevelopers working on either small, medium, or large projects will appreciate the explanations, detailed examples, and clean techniques to help them extend support for both versions to their existing Python 2-compatible projects. \n\nThe talk will give insight into the content in the book [Python 2 and 3 Compatibility](https://www.amazon.com/Python-Compatibility-Python-Future-Joannah-Nanjekye/dp/1484229541) that will available in October but be released in paper backs in January 2018 by Apress.",
        "thumbnail": "https://i.ytimg.com/vi_webp/j_nrSyL7CxQ/maxresdefault.webp",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=j_nrSyL7CxQ",
        "original_url": "https://www.youtube.com/watch?v=j_nrSyL7CxQ"
    },
    {
        "index": 21,
        "title": "Deep Learning - a gentle dive",
        "url": "https://www.youtube.com/watch?v=LNxnut89bJ4",
        "video_id": "LNxnut89bJ4",
        "uploader": "PyCon South Africa",
        "uploader_id": "@pyconza",
        "uploader_url": "https://www.youtube.com/@pyconza",
        "upload_date": "20171006",
        "duration": 2162,
        "view_count": 140,
        "like_count": 2,
        "comment_count": null,
        "tags": [
            "pyconza",
            "pyconza2017",
            "python",
            "DriesCronje"
        ],
        "categories": [
            "Education"
        ],
        "description": "Dries Cronje\nhttps://2017.za.pycon.org/talks/68/\nDeep Learning has the ability to disrupt and to disrupt fast. There are tools and algorithms mature enough to add value in almost any industry and you do not need a Math Ph.D to learn Deep Learning.\n\nIn this talk, I will briefly paint a picture of the exciting world of Deep Learning and then explain Deep Learning concepts using Convolutional Neural Networks as a base.\n\nThe last part will be a live demo of a Convolutional Neural Network written in Python doing image classification.",
        "thumbnail": "https://i.ytimg.com/vi_webp/LNxnut89bJ4/maxresdefault.webp",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=LNxnut89bJ4",
        "original_url": "https://www.youtube.com/watch?v=LNxnut89bJ4"
    },
    {
        "index": 22,
        "title": "Deploying Django web applications in Docker containers",
        "url": "https://www.youtube.com/watch?v=T2hooQzvurQ",
        "video_id": "T2hooQzvurQ",
        "uploader": "PyCon South Africa",
        "uploader_id": "@pyconza",
        "uploader_url": "https://www.youtube.com/@pyconza",
        "upload_date": "20171007",
        "duration": 2416,
        "view_count": 15193,
        "like_count": 188,
        "comment_count": 3,
        "tags": [
            "pyconza",
            "pyconza2017",
            "python",
            "JamieHewland"
        ],
        "categories": [
            "Education"
        ],
        "description": "Jamie Hewland\nhttps://2017.za.pycon.org/talks/21/\nThis talk will describe how to package a Django web application as a Docker container image for use on a container orchestration platform. Starting with a common Django setup involving Nginx, Gunicorn, and Celery, we will show how to adapt the application to run inside containers.\n\nContainer orchestration platforms such as Kubernetes and DC/OS are growing increasingly popular. These systems provide many advantages, but require significant changes to how applications are packaged and deployed. Instead of running on staticly-configured webservers, applications must run in containers that are dynamically deployed to a pool of hosts.\n\nThere are further benefits to packaging applications as containers. By providing an easy-to-use and tested base image for Django applications, deployment best-practices are easily and consistently replicated. Integration testing becomes more practical, as containers can be run similarly between development and production environments.\n\nThis talk expects some familiarity with Django, as well as the basics of Docker and HTTP. There should be lessons relevant to anybody interested in using Docker for Python-based web applications.",
        "thumbnail": "https://i.ytimg.com/vi_webp/T2hooQzvurQ/maxresdefault.webp",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=T2hooQzvurQ",
        "original_url": "https://www.youtube.com/watch?v=T2hooQzvurQ"
    },
    {
        "index": 23,
        "title": "Say Hello to the new wave of software bots...",
        "url": "https://www.youtube.com/watch?v=1HB3aab-9OM",
        "video_id": "1HB3aab-9OM",
        "uploader": "PyCon South Africa",
        "uploader_id": "@pyconza",
        "uploader_url": "https://www.youtube.com/@pyconza",
        "upload_date": "20171007",
        "duration": 1778,
        "view_count": 107,
        "like_count": 7,
        "comment_count": null,
        "tags": [
            "pyconza",
            "pyconza2017",
            "python",
            "IrikidzaiMuchaneta"
        ],
        "categories": [
            "Education"
        ],
        "description": "Irikidzai Muchaneta\nhttps://2017.za.pycon.org/talks/72/\nNo, really, say \"hello\" to them. The age of voice enabled interfaces is already upon us with the rise of driverless cars, ubiquitous technology and the Internet of Things(IoT), computers no longer need to speak in code but they have learnt to speak the human language. Google home is a voice-activated speaker powered by the google assistant similar to other assistants namely Siri, Alexa and Cortana. \n\nIn this talk, I will be looking at developing and deploying Actions (Conversations) on the Google home assistant. This will be done by creating an application (web hook) triggered by an action created in API.AI using a python template.\n\n  * Audience is anyone interested in creating bots using API.AI\n  * Anyone interested in adding customized actions to the google assistant\n  * Anyone interested in learning about voice enabled actions\n\nSpecific aspects I will cover include: \\- Reasons, voice enabled interfacing is an interesting topic to follow \\- Simplified overview of the steps to create custom \"conversation actions\" - Going into a bit of detail where the challenges arise \\- Examples of cool projects out there currently\n\nI will end with a look into creating your first simplified google \"conversational action\" in hopefully less than 10 minutes once all the prerequisite software is installed.\n\nLadies and Gentlemen...the software bots have risen.",
        "thumbnail": "https://i.ytimg.com/vi_webp/1HB3aab-9OM/maxresdefault.webp",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=1HB3aab-9OM",
        "original_url": "https://www.youtube.com/watch?v=1HB3aab-9OM"
    },
    {
        "index": 24,
        "title": "Getting more out of your pandas",
        "url": "https://www.youtube.com/watch?v=EuYRwQ-v1J4",
        "video_id": "EuYRwQ-v1J4",
        "uploader": "PyCon South Africa",
        "uploader_id": "@pyconza",
        "uploader_url": "https://www.youtube.com/@pyconza",
        "upload_date": "20171008",
        "duration": 2290,
        "view_count": 282,
        "like_count": 2,
        "comment_count": null,
        "tags": [
            "pyconza",
            "pyconza2017",
            "python",
            "LauraRichter"
        ],
        "categories": [
            "Education"
        ],
        "description": "Laura Richter\nhttps://2017.za.pycon.org/talks/70/\nPandas is a python library for data processing. It makes many of your typical data operations easy - input and output, joining, aggregating, and various analytics. But being so easy to use makes it easy to use poorly (pandamonium)! This talk will explore how to get more out of pandas by using it the way it wants to be used. I’ll speak about the internals of pandas and pandas data structures. I will then describe ways to speed up your code by by structuring your data processing in a more pandonic way, demonstrated through worked examples.",
        "thumbnail": "https://i.ytimg.com/vi_webp/EuYRwQ-v1J4/maxresdefault.webp",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=EuYRwQ-v1J4",
        "original_url": "https://www.youtube.com/watch?v=EuYRwQ-v1J4"
    },
    {
        "index": 25,
        "title": "Mixing Metals with Snakes - Moving an Industry Forward",
        "url": "https://www.youtube.com/watch?v=nhbmFA258AM",
        "video_id": "nhbmFA258AM",
        "uploader": "PyCon South Africa",
        "uploader_id": "@pyconza",
        "uploader_url": "https://www.youtube.com/@pyconza",
        "upload_date": "20171007",
        "duration": 2481,
        "view_count": 67,
        "like_count": 0,
        "comment_count": null,
        "tags": [
            "pyconza",
            "pyconza2017",
            "python",
            "JohanZietsman"
        ],
        "categories": [
            "Education"
        ],
        "description": "Johan Zietsman\nhttps://2017.za.pycon.org/talks/53/\nThe South Africa mining and metallurgical industry is the bedrock of our economy... or it is supposed to be. We are blessed with more mineral resources than any other country in the world. Unfortunately we are tending, more and more, to export ore to China and other countries without adding value to it here. The end result is that we lose billions of Rand in potential revenue.\n\nComputational modelling plays an important part in helping us understand things better, make better decisions, develop better processes, and be more competitive. In our metallurgical industry processes are mostly described with Excel models. These models have many drawbacks, and of limited use. There is another way. We can integrate detailed thermochemistry into our models to describe process more accurately. This, however, is fairly difficult, and not many people are able to do it. Our challenge is to make this type of modelling easier, and to make it more accessible, so that our industry can benefit.\n\nOur journey has been a long one, and has winded through territories like C++, VB, VBA, C#.net and others. Eventually we arrived at Python. We will share our experiences in using things like Django, Jinja2, Celery and Postgres to move modelling of metallurgical processes into the 21st century, into the cloud, and to move our industry forward.",
        "thumbnail": "https://i.ytimg.com/vi_webp/nhbmFA258AM/maxresdefault.webp",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=nhbmFA258AM",
        "original_url": "https://www.youtube.com/watch?v=nhbmFA258AM"
    },
    {
        "index": 26,
        "title": "The practice of TDD: tips&tricks",
        "url": "https://www.youtube.com/watch?v=jFDq14F3_X8",
        "video_id": "jFDq14F3_X8",
        "uploader": "PyCon South Africa",
        "uploader_id": "@pyconza",
        "uploader_url": "https://www.youtube.com/@pyconza",
        "upload_date": "20171008",
        "duration": 2455,
        "view_count": 280,
        "like_count": 1,
        "comment_count": null,
        "tags": [
            "pyconza",
            "pyconza2017",
            "python",
            "AntonioCuni"
        ],
        "categories": [
            "Education"
        ],
        "description": "Antonio Cuni\nhttps://2017.za.pycon.org/talks/73/\nTest Driven Development is a well known practice in software development. However, passing from knowing the principles of TDD to applying them in real world situations is not straightforward: the aim of this talk is to help the audience to fill the gap and apply TDD effectively in Python. The talk will include:\n\n  * a brief overview of most popular tools and libraries (e.g. unittest, pytest, nose, tox)\n  * useful design patterns\n  * common mistakes and how to avoid them\n  * some real life example taken from the projects the author has worked on in the past 15 years (including PyPy, pdb++, capnpy)\n\nThis talk is primarily aimed at beginners.",
        "thumbnail": "https://i.ytimg.com/vi_webp/jFDq14F3_X8/maxresdefault.webp",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=jFDq14F3_X8",
        "original_url": "https://www.youtube.com/watch?v=jFDq14F3_X8"
    },
    {
        "index": 27,
        "title": "Deep Learning for Computer Vision",
        "url": "https://www.youtube.com/watch?v=WeGBkNRUcnM",
        "video_id": "WeGBkNRUcnM",
        "uploader": "PyCon South Africa",
        "uploader_id": "@pyconza",
        "uploader_url": "https://www.youtube.com/@pyconza",
        "upload_date": "20171008",
        "duration": 2634,
        "view_count": 968,
        "like_count": 21,
        "comment_count": null,
        "tags": [
            "pyconza",
            "pyconza2017",
            "python",
            "AlexConway"
        ],
        "categories": [
            "Education"
        ],
        "description": "Alex Conway\nhttps://2017.za.pycon.org/talks/57/\nThe state-of-the-art in image classification has skyrocketed thanks to the development of deep convolutional neural networks and increases in the amount of data and computing power available to train them. The top-5 error rate in the international ImageNet competition to predict which of 1000 classes an image belongs to has plummeted from 28% error in 2010 before deep learning to just 2.25% in 2017 (human level error is around 5%). \n\nIn addition to being able to classify objects in images (including not hotdogs), deep learning can be used to automatically generate captions for images, convert photos into paintings, detect cancer in pathology slide images, and help self-driving cars ‘see’. \n\nThe talk will give an overview of the cutting edge in the field and some of the core mathematical concepts behind the models. It will also include a short code-first tutorial to show how easy it is to get started using deep learning for computer vision in python…",
        "thumbnail": "https://i.ytimg.com/vi_webp/WeGBkNRUcnM/maxresdefault.webp",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=WeGBkNRUcnM",
        "original_url": "https://www.youtube.com/watch?v=WeGBkNRUcnM"
    },
    {
        "index": 28,
        "title": "Growing Pains: Scaling a Django Project and Team",
        "url": "https://www.youtube.com/watch?v=0UTfzhx-Cho",
        "video_id": "0UTfzhx-Cho",
        "uploader": "PyCon South Africa",
        "uploader_id": "@pyconza",
        "uploader_url": "https://www.youtube.com/@pyconza",
        "upload_date": "20171006",
        "duration": 2462,
        "view_count": 308,
        "like_count": 3,
        "comment_count": null,
        "tags": [
            "pyconza",
            "pyconza2017",
            "python",
            "CoryZue"
        ],
        "categories": [
            "Education"
        ],
        "description": "Cory Zue\nhttps://2017.za.pycon.org/talks/76/\nIn this talk I’ll describe the evolution of a Django project as it goes from something small and simple to a full-blown multi-server, multi-datacenter behemoth. The talk will use examples from real-world applications I’ve either built or contributed do, and draw heavily from my experience leading the development of [CommCare HQ](https://www.commcarehq.org/) (an 8-year old, ~500,000 LoC codebase currently developed and maintained by about 20 people).\n\nThe goal of the talk is to try and demonstrate how and why complexity and process seeps into projects over time and is in fact necessary as a project’s lifecycle matures. I'll base the talk around a series of examples that highlight a problem and then discuss how the introduction of a new subsystem, architecture, or process helps to address that problem. These problems / solutions will be a mix of the technical (e.g. \"the site is slow\") and human (e.g. \"we can't ship features quickly anymore\").\n\nAnyone who is part of a growing project or team should hopefully learn something or get some ideas for what might be in store for your future!",
        "thumbnail": "https://i.ytimg.com/vi_webp/0UTfzhx-Cho/maxresdefault.webp",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=0UTfzhx-Cho",
        "original_url": "https://www.youtube.com/watch?v=0UTfzhx-Cho"
    },
    {
        "index": 29,
        "title": "Taking back control of your code",
        "url": "https://www.youtube.com/watch?v=GtZgpNlaabI",
        "video_id": "GtZgpNlaabI",
        "uploader": "PyCon South Africa",
        "uploader_id": "@pyconza",
        "uploader_url": "https://www.youtube.com/@pyconza",
        "upload_date": "20171008",
        "duration": 2070,
        "view_count": 69,
        "like_count": 2,
        "comment_count": null,
        "tags": [
            "pyconza",
            "pyconza2017",
            "python",
            "NickolasGrigoriadis"
        ],
        "categories": [
            "Education"
        ],
        "description": "Nickolas Grigoriadis\nhttps://2017.za.pycon.org/talks/12/\nManaging your code is like managing anything else.  \nTo take ~~back~~ control of your code, you need to **measure** everything you can!\n\nThis talk is about my experience of wresting an unruly codebase into a well behaved one.  \nWell, better behaved, at least...\n\nIn this talk I'll cover the following, and how they affect your Python application:\n\n  * **Complexity**  \n_and how it differs from ease_\n  * **Risk**  \n_not all code is equally important_\n  * **Static analysis**  \n_don't fear the `pylint`, whilst `typing` \\+ `mypy` can save the day_\n  * **Testing**  \n_why &amp; when to write tests (`hypothesis` is **awesome**)_\n  * **Formally design your internal data format**  \n_whilst it seems obvious, internal data formats are often left unchecked_\n  * **Profiling**  \n_a good programmer with a profiler is better than one without_",
        "thumbnail": "https://i.ytimg.com/vi_webp/GtZgpNlaabI/maxresdefault.webp",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=GtZgpNlaabI",
        "original_url": "https://www.youtube.com/watch?v=GtZgpNlaabI"
    },
    {
        "index": 30,
        "title": "Semantic Concept Embedding for a natural language FAQ system",
        "url": "https://www.youtube.com/watch?v=MjEb9O0Cyx0",
        "video_id": "MjEb9O0Cyx0",
        "uploader": "PyCon South Africa",
        "uploader_id": "@pyconza",
        "uploader_url": "https://www.youtube.com/@pyconza",
        "upload_date": "20171006",
        "duration": 1890,
        "view_count": 430,
        "like_count": 5,
        "comment_count": null,
        "tags": [
            "pyconza",
            "pyconza2017",
            "python",
            "BernardtDuvenhage"
        ],
        "categories": [
            "Education"
        ],
        "description": "Bernardt Duvenhage\nhttps://2017.za.pycon.org/talks/35/\nFor a number of months now work has been proceeding in order to bring perfection to the crudely conceived idea of a super-positioning of word vectors that would not only capture the tenor of a sentence in a vector of similar dimension, but that is based on the high dimensional manifold hypothesis to optimally retain the various semantic concepts. Such a super-positioning of word vectors is called the semantic concept embedding.\n\nNow basically the only new principle involved is that instead of using the mean of the word vectors of a sentence one rather retains the dominant semantic concepts over all of the words. A modification informed by the aforementioned manifold hypothesis.\n\nThe original implementation retains the absolute maximum value over each of the dimensions of an embedding such as the GloVe embedding developed at Stanford University. The use of these semantic concept vectors then allows effective matching of users' questions to an online FAQ system which in turn allows a natural language adaptation of said system that easily achieves an F-score of 0.922 on the Quora dataset given only three examples of how any particular question may be asked.\n\nThe semantic concept embedding has now reached a high level of development. First, an analysis of the word embedding is applied to find the prepotent semantic concepts. The associated direction vectors are then used to transform the embeddings in just the right way to optimally detangle the principal manifolds and further increase the performance of the natural language FAQ system.\n\nThis talk will give an overview of:\n    \n    \n    • The problem of semantic sentence embedding.\r\n    • How NLTK, numpy, and Python machine learning frameworks are used to solve the problem.\r\n    • How semantic concept embedding is used for natural language FAQ systems in chatbots, etc.",
        "thumbnail": "https://i.ytimg.com/vi_webp/MjEb9O0Cyx0/maxresdefault.webp",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=MjEb9O0Cyx0",
        "original_url": "https://www.youtube.com/watch?v=MjEb9O0Cyx0"
    },
    {
        "index": 31,
        "title": "What is this \"Search\" that you speak of?",
        "url": "https://www.youtube.com/watch?v=fiNtlgQvMDM",
        "video_id": "fiNtlgQvMDM",
        "uploader": "PyCon South Africa",
        "uploader_id": "@pyconza",
        "uploader_url": "https://www.youtube.com/@pyconza",
        "upload_date": "20171008",
        "duration": 2559,
        "view_count": 118,
        "like_count": 3,
        "comment_count": null,
        "tags": [
            "pyconza",
            "pyconza2017",
            "python",
            "HonzaKrál"
        ],
        "categories": [
            "Education"
        ],
        "description": "Honza Král\nhttps://2017.za.pycon.org/talks/38/\nFulltext search is hard, or is it? In this talk we will go through the theory and background of search engines all the way to implementing your own search engine in Python.\n\nThis process should give everyone insight into how search engines work that can then be applied even when using production-ready systems like Elasticsearch.",
        "thumbnail": "https://i.ytimg.com/vi_webp/fiNtlgQvMDM/maxresdefault.webp",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=fiNtlgQvMDM",
        "original_url": "https://www.youtube.com/watch?v=fiNtlgQvMDM"
    },
    {
        "index": 32,
        "title": "Another angle on test infrastructure",
        "url": "https://www.youtube.com/watch?v=sL577rL4TcI",
        "video_id": "sL577rL4TcI",
        "uploader": "PyCon South Africa",
        "uploader_id": "@pyconza",
        "uploader_url": "https://www.youtube.com/@pyconza",
        "upload_date": "20171008",
        "duration": 2050,
        "view_count": 93,
        "like_count": 0,
        "comment_count": null,
        "tags": [
            "pyconza",
            "pyconza2017",
            "python",
            "IwanVosloo"
        ],
        "categories": [
            "Education"
        ],
        "description": "Iwan Vosloo\nhttps://2017.za.pycon.org/talks/74/\nLast year at PyConZA I presented a talk about different approaches to test setup and alluded to an idea that we have been playing with at [Reahl](http://www.reahl.org): class based test Fixtures. We have since refined our approach and built it as an add-on that works with py.test.\n\nIn this talk I briefly introduce Fixtures again for people who did not see the [last year's talk](https://2016.za.pycon.org/talks/26/). I then show more detail about the types of problems we deal with while testing and how our fixture ideas solve these issues.\n\nFor example, in our tests the database schema is created from scratch at the beginning of a test run, but the database is kept clean by rolling back a transaction between each individual test. We can also create extra temporary database tables, just for a test run. \n\nWe integrate Selenium webdriver with our web server so that the web server runs in the same thread as the tests themselves, in the same database transaction. The effect of this is that when something breaks inside the web server, the test immediately breaks as well, and gives a sensible stack trace.\n\nIn our code, we use a global context much like what Flask does. This is a design often criticised because of the fact that it makes testing difficult. We use our fixtures to hide the associated complexities regarding the global context as well.\n\nThe talk covers some details about how we use Fixtures to provide this functionality and some thoughts on where we found it useful and which things we still struggle to deal with elegantly.",
        "thumbnail": "https://i.ytimg.com/vi_webp/sL577rL4TcI/maxresdefault.webp",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=sL577rL4TcI",
        "original_url": "https://www.youtube.com/watch?v=sL577rL4TcI"
    },
    {
        "index": 33,
        "title": "House of Salt: Extending and leveraging SaltStack",
        "url": "https://www.youtube.com/watch?v=P9A-MW8haHo",
        "video_id": "P9A-MW8haHo",
        "uploader": "PyCon South Africa",
        "uploader_id": "@pyconza",
        "uploader_url": "https://www.youtube.com/@pyconza",
        "upload_date": "20171008",
        "duration": 2823,
        "view_count": 196,
        "like_count": 3,
        "comment_count": null,
        "tags": [
            "pyconza",
            "pyconza2017",
            "python",
            "MarcoSlaviero",
            "MaxMclaughlin"
        ],
        "categories": [
            "Education"
        ],
        "description": "Marco Slaviero, Max Mclaughlin\nhttps://2017.za.pycon.org/talks/15/\nOnce upon a time, sysadmins had cute naming schemes for their boxen, and it was good. Suddenly, virtualisation! And the cute names withered as herds of servers were born. Infrastructure automation and management became a thing. Helper software was released (without which a nine person company could not hope to manage 400-odd servers.) And it was good again, until the edges showed. Then we started to build.\n\nIn this talk we’ll discuss the challenges encountered in managing hundreds of servers delivering a single product on AWS. Relying on SaltStack for deployment, management and diagnostics, we’ve automated away painful steps and reduced our attack surface. SaltStack handles configuration and package management well, but is capable of much more once you start to customise it.\n\nAlong the way we’ll show examples of custom SaltStack modules, runners, and event handlers. We’ll describe threats and show how SaltStack helps us limit their exposure and impact. We’ll catalogue the lessons we’ve faced in two years of running SaltStack in our production environment. \n\nWe won't rehash content from previous talks, and novice users will get to see how the tool can be stretched. If you’re wanting to get more out of SaltStack than the builtin modules allow for, this talk is for you.",
        "thumbnail": "https://i.ytimg.com/vi_webp/P9A-MW8haHo/maxresdefault.webp",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=P9A-MW8haHo",
        "original_url": "https://www.youtube.com/watch?v=P9A-MW8haHo"
    },
    {
        "index": 34,
        "title": "Tachyonic: an open source DEVOPS project written in Python for the Networking community",
        "url": "https://www.youtube.com/watch?v=fsFihMhmaKI",
        "video_id": "fsFihMhmaKI",
        "uploader": "PyCon South Africa",
        "uploader_id": "@pyconza",
        "uploader_url": "https://www.youtube.com/@pyconza",
        "upload_date": "20171008",
        "duration": 1766,
        "view_count": 309,
        "like_count": 1,
        "comment_count": null,
        "tags": [
            "pyconza",
            "pyconza2017",
            "python",
            "AllanSwanepoel"
        ],
        "categories": [
            "Education"
        ],
        "description": "Allan Swanepoel\nhttps://2017.za.pycon.org/talks/77/\n### By: The authors of Tachyonic\n\n### Intro: (10 mins)\n\nMeet Bob. Bob is a Network Administrator at a Service Provider. As a well seasoned network engineer, he’s been building packet pushing networks since the days when IP shared bandwidth with IPX, Appletalk, DECnet etc. He is a well rounded network engineer with robust set of networking skills. He mastered making, shaping of networks with his tool set such as Spanning Tree, RAPS, Vlans, VXLAN and MPLS.\n\nHowever, Bob’s world is changing. Networks are not what they used be. Today’s networks are growing more rapidly than ever. This means there are more devices to manage and also more data produced by these devices to work with. Doing things manually just don’t scale anmore. Bob has no other option to turn to automation.\n\nIn the Devops world these issues have been and are being addressed. The Networking universe is lagging behind. Standard Bodies and Vendors have started coming up with solutions such as Openflow and NETCONF, but there are limits.\n\nAlso, many Open source projects (most of them written in Python) and proprietary solutions have joined the scene, which we will talk about.\n\nSo Bob has options, but… none of them has all the answers. Except for one!\n\n### Introduction to Tachyonic Open Source Project (10 mins)\n\n  * Why Python? ** (you probably know some of the answer already)\n  * What is Tachyonic? ** Tachyonic framework is intended to control a large pool of services such as cloud, networking, dns, email managed through a single dashboard. The goal here is to have a “single pane of glass” view. Tachyonic scale is only dependent on the deployment method used and is designed to be massively horizontally scalable. It's all open-source and completely customizable.\n  * Modular - extensible ** All interfaces such as API endpoints and Dashboard views are fully extensible via plugins/modules. All you need to do is write the bit of python to meet your need, and plug it into the Tachyonic framework. ** Components and endpoints can run on the same Server, or different ones.\n  * API and UI ** Tachyonic comes with both a RESTful API, as well as a UI for those who wish to use it. In fact the UI simply uses the API in the back-end\n  * Multi-Tenancy ** With Tachyonic you get a framework that us Multi-Tenant, and Multi-Tiered. That means you can use it to add customers, and Customers can even be resellers that have their own customers. Tachyonic takes care of who is allowed access to what.\n\n### What you get (10 mins)\n\nWe have done all the hard work for you: _ User login and RBAC _ Separate Domains _ UI _ API * WSGI Framework\n\n### What you need to code\n\nYou may simply write the python you require, and plug it in! Single extendable portal, restapi framework does it all! \n\n### Use cases\n\n  * Build customer portals to provision services in addition to integrated helpdesk and payment gateways.\n  * Build Billing and Telemetry services on top of Python using well-known open-source projects such as Pandas for time series data.\n  * Automate deployment and monitoring of network devices\n  * With knowledge of Python and Tachyonic, you may never have to look at a new system ever again!\n\n### Where can i get more info?\n\nVisit our site: http://tachyonic.co.za/",
        "thumbnail": "https://i.ytimg.com/vi_webp/fsFihMhmaKI/maxresdefault.webp",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=fsFihMhmaKI",
        "original_url": "https://www.youtube.com/watch?v=fsFihMhmaKI"
    },
    {
        "index": 35,
        "title": "Surviving a Legacy Codebase",
        "url": "https://www.youtube.com/watch?v=H6HCRpUtawo",
        "video_id": "H6HCRpUtawo",
        "uploader": "PyCon South Africa",
        "uploader_id": "@pyconza",
        "uploader_url": "https://www.youtube.com/@pyconza",
        "upload_date": "20171007",
        "duration": 2178,
        "view_count": 245,
        "like_count": 5,
        "comment_count": null,
        "tags": [
            "pyconza",
            "pyconza2017",
            "python",
            "JeremyThurgood"
        ],
        "categories": [
            "Education"
        ],
        "description": "Jeremy Thurgood\nhttps://2017.za.pycon.org/talks/43/\nFew things strike more fear into the heart of a seasoned software developer than the words \"legacy code\". However, many of us spend a lot of time working on byzantine monstrosities inherited from contractors, third parties, or Bob who left the company three months ago. Over the past several years, I've sunk way more hours than I care to think about into making legacy codebases more malleable. I've picked up a few tricks and strategies along the way that make the process a little smoother and less painful, and I will be sharing them in this talk.",
        "thumbnail": "https://i.ytimg.com/vi_webp/H6HCRpUtawo/maxresdefault.webp",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=H6HCRpUtawo",
        "original_url": "https://www.youtube.com/watch?v=H6HCRpUtawo"
    },
    {
        "index": 36,
        "title": "Friday Lightning Talks",
        "url": "https://www.youtube.com/watch?v=BlcnfzpapmU",
        "video_id": "BlcnfzpapmU",
        "uploader": "PyCon South Africa",
        "uploader_id": "@pyconza",
        "uploader_url": "https://www.youtube.com/@pyconza",
        "upload_date": "20171008",
        "duration": 2579,
        "view_count": 200,
        "like_count": 1,
        "comment_count": 1,
        "tags": [
            "pyconza",
            "pyconza2017",
            "python",
            "PiDelport"
        ],
        "categories": [
            "Education"
        ],
        "description": "Pi Delport\nhttps://2017.za.pycon.org/talks/friday-lightning-talks/\n# Friday Lightning Talks\n\n  * Bruce Merry: \"asyncio: it's all about the cancellation\"\n  * Simba Nyatsanga: \"Keep you friends close and caches closer\"\n  * Peter van Onselen: \"And now for something completely different\"\n  * Simon Cross: \"Python Software Society of South Africa\"\n  * Whitney Tennant: \"Why I kept flying to Cape Town for sammiches\"\n  * Matthew French: \"Grid computing on a budget (Or: Reinventing celery)\"\n  * Marlene Mhangami: \"The PSF and Python in Africa\"\n\nSee [Lightning Talks](/talks/lightning-talks) for details of how to submit a talk",
        "thumbnail": "https://i.ytimg.com/vi_webp/BlcnfzpapmU/maxresdefault.webp",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=BlcnfzpapmU",
        "original_url": "https://www.youtube.com/watch?v=BlcnfzpapmU"
    },
    {
        "index": 37,
        "title": "From Fun to Business - How Open Source can Change Your Life",
        "url": "https://www.youtube.com/watch?v=j0O1lGFgO10",
        "video_id": "j0O1lGFgO10",
        "uploader": "PyCon South Africa",
        "uploader_id": "@pyconza",
        "uploader_url": "https://www.youtube.com/@pyconza",
        "upload_date": "20171007",
        "duration": 2218,
        "view_count": 68,
        "like_count": 1,
        "comment_count": null,
        "tags": [
            "pyconza",
            "pyconza2017",
            "python",
            "LasseSchuirmann"
        ],
        "categories": [
            "Education"
        ],
        "description": "Lasse Schuirmann\nhttps://2017.za.pycon.org/talks/50/\n# Abstract\n\ncoala is an Open Source project with well over 400 contributors and more than 50 Google Summer of Code applications this year. What’s behind it? How did it all start? What is the secret sauce to its growth and how do we make a living of it? This talk tells our story with the key takeaways and provides a top level story driven insight on those and more topics. This talk is perfect for people who want to live and work for their own ideas rather than being a gear in a machine.\n\n# Description\n\ncoala began as a fun project. We never believed there would be anything useful growing out of it - and yet it did. Contributors all over the world came to us and helped creating the community as it is. Eventually I became a freelancer and got funding for working on a startup based on coala.\n\nHow did all of this happen? What does this mean for the main contributors? How can we make a living of an open source project?\n\nThis talk tells our story. What we did - good and bad things - so we all can learn from it. From my personal open source contributions over founding an open source project to building a freelance agency and founding a startup.\n\nParticipants will learn how they can grow an open project, automate newcomer processes and gain insights into how they can start making a living of it, possibly founding a company eventually. There is no single recipe for this but we can - and should - exchange the tips and tricks we’ve gained with our ventures. This talk is for entrepreneurs, wanna-be-freelancers and future or open source project founders and contributors.",
        "thumbnail": "https://i.ytimg.com/vi_webp/j0O1lGFgO10/maxresdefault.webp",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=j0O1lGFgO10",
        "original_url": "https://www.youtube.com/watch?v=j0O1lGFgO10"
    },
    {
        "index": 38,
        "title": "Closing Ceremony",
        "url": "https://www.youtube.com/watch?v=3q9MbkrFLxU",
        "video_id": "3q9MbkrFLxU",
        "uploader": "PyCon South Africa",
        "uploader_id": "@pyconza",
        "uploader_url": "https://www.youtube.com/@pyconza",
        "upload_date": "20171008",
        "duration": 599,
        "view_count": 24,
        "like_count": 0,
        "comment_count": null,
        "tags": [
            "pyconza",
            "pyconza2017",
            "python",
            "DavidSharpe"
        ],
        "categories": [
            "Education"
        ],
        "description": "David Sharpe\nhttps://2017.za.pycon.org/news/closing-ceremony/\n# Closing Ceremony\n\nThe closing ceremony. A general wrap of the conference. There will also be announcements about sprints on Saturday and Sunday.",
        "thumbnail": "https://i.ytimg.com/vi_webp/3q9MbkrFLxU/maxresdefault.webp",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=3q9MbkrFLxU",
        "original_url": "https://www.youtube.com/watch?v=3q9MbkrFLxU"
    }
]