[
    {
        "index": 1,
        "title": "Principals of System Integration",
        "url": "https://www.youtube.com/watch?v=hSycD0aK1so",
        "video_id": "hSycD0aK1so",
        "uploader": "PyCon South Africa",
        "uploader_id": "@pyconza",
        "uploader_url": "https://www.youtube.com/@pyconza",
        "upload_date": "20200213",
        "duration": 2394,
        "view_count": 14502,
        "like_count": 185,
        "comment_count": 3,
        "tags": [
            "python",
            "PyCon",
            "PyConZA"
        ],
        "categories": [
            "Science & Technology"
        ],
        "description": "by Matthew French\n\nAt: PyConZA 2019\n\nGetting different IT systems to talk to each other doesn't need to be hard, but we often find ways to make it much more difficult than it needs to be. \n\nThis talk will discuss some of the common mistakes made when trying to move data between different systems, and ways to avoid them. The focus will be on the most common use case: real time communication in a single direction.\n\nThe talk will have examples using Python and RabbitMQ, although the principals we will discuss could apply to many technologies and communication paradigms.\n\nRoom: Boundary Room\nScheduled start: 2019-10-11 09:45:00+02",
        "thumbnail": "https://i.ytimg.com/vi_webp/hSycD0aK1so/maxresdefault.webp",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=hSycD0aK1so",
        "original_url": "https://www.youtube.com/watch?v=hSycD0aK1so"
    },
    {
        "index": 2,
        "title": "Anomaly Detection using Autoencoders",
        "url": "https://www.youtube.com/watch?v=Alkm-PJu9To",
        "video_id": "Alkm-PJu9To",
        "uploader": "PyCon South Africa",
        "uploader_id": "@pyconza",
        "uploader_url": "https://www.youtube.com/@pyconza",
        "upload_date": "20200213",
        "duration": 1653,
        "view_count": 5625,
        "like_count": 75,
        "comment_count": null,
        "tags": [
            "python",
            "PyCon",
            "PyConZA"
        ],
        "categories": [
            "Science & Technology"
        ],
        "description": "by Naledi Modise and Angela Lai King\n\nAt: PyConZA 2019\n\nFinding anomalous behaviour can be similar to finding a needle in a haystack. This information can be very useful for fraud detection or identifying unusual behavior. Machine Learning techniques such as autoencoders can assist in this process. \n\nWe will present a jupyter notebook followed by a visualisation which indicates anomalous activity using an open source credit card dataset. The anomalous activity will be compared to known fraudulent activity within the dataset. The technologies used for visualisation is Qliksense and the python implementation of autoencoders is the h2o deeplearning estimator package.\n\nRoom: Boundary Room\nScheduled start: 2019-10-11 09:00:00+02",
        "thumbnail": "https://i.ytimg.com/vi_webp/Alkm-PJu9To/maxresdefault.webp",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=Alkm-PJu9To",
        "original_url": "https://www.youtube.com/watch?v=Alkm-PJu9To"
    },
    {
        "index": 3,
        "title": "Production-ready Flask & Django apps on Kubernetes",
        "url": "https://www.youtube.com/watch?v=rdjtPTV_WWo",
        "video_id": "rdjtPTV_WWo",
        "uploader": "PyCon South Africa",
        "uploader_id": "@pyconza",
        "uploader_url": "https://www.youtube.com/@pyconza",
        "upload_date": "20200213",
        "duration": 1973,
        "view_count": 1710,
        "like_count": 37,
        "comment_count": null,
        "tags": [
            "python",
            "PyCon",
            "PyConZA"
        ],
        "categories": [
            "Science & Technology"
        ],
        "description": "by Jamie Hewland\n\nAt: PyConZA 2019\n\nThis talk will explain how to host Flask, Django, and other WSGI web applications on Kubernetes, making effective use of the available abstractions.\n\nTopics covered will include:\n\n- Some of the benefits of running Flask & Django applications as part of a Service-oriented architecture (SOA) on Kubernetes.\n- How the abstractions Kubernetes provides can be used to replace or integrate with existing well-known tools.\n- General best practices for running Python web applications on Kubernetes.\n- Reflections on some of the widely-used Python tools for running web applications and how well they suit modern containerised deployments.\n\nSome basic familiarity with Docker containers as well as either Flask, Django, or similar Python-based web frameworks will be helpful. The talk is aimed at people interested in migrating their existing applications to Kubernetes.\n\nRoom: Marathon\nScheduled start: 2019-10-11 14:15:00+02",
        "thumbnail": "https://i.ytimg.com/vi_webp/rdjtPTV_WWo/maxresdefault.webp",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=rdjtPTV_WWo",
        "original_url": "https://www.youtube.com/watch?v=rdjtPTV_WWo"
    },
    {
        "index": 4,
        "title": "Making Sense of Python Virtual Environment Tools and Workflows",
        "url": "https://www.youtube.com/watch?v=YKfAwIItO7M",
        "video_id": "YKfAwIItO7M",
        "uploader": "PyCon South Africa",
        "uploader_id": "@pyconza",
        "uploader_url": "https://www.youtube.com/@pyconza",
        "upload_date": "20200213",
        "duration": 2192,
        "view_count": 791,
        "like_count": 16,
        "comment_count": null,
        "tags": [
            "python",
            "PyCon",
            "PyConZA"
        ],
        "categories": [
            "Science & Technology"
        ],
        "description": "by Daniel Holmes\n\nAt: PyConZA 2019\n\nOne of the challenges developers at any level face is managing their dependencies and development environments. Python is no exception. In the Python ecosystem, there are a number of tools for managing dependencies and environments. However, many of these tools have similar names with slightly differing functions and workflows (e.g: `virtualenv`, `pyenv`, `venv`, `virtualenvwrapper`, `pipenv`, and so on...) Furthermore, a number of new tools in this space continue to surface each year. This often creates confusion and appears to contradict the adage: _“There should be one – and preferably only one – obvious way to do it.” -- The Zen of Python_\n\nIn the absence of \"one obvious way\", the aim of this talk is to help developers at any level better understand the current tools available, what each achieves, and how they can potentially make the developer's life easier. It will cover Python dependency management and the importance of using virtual environments. An explanation and comparison of these different tools, including newer ones, will be also be presented.\n\nRoom: Boundary Room\nScheduled start: 2019-10-10 14:15:00+02",
        "thumbnail": "https://i.ytimg.com/vi_webp/YKfAwIItO7M/maxresdefault.webp",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=YKfAwIItO7M",
        "original_url": "https://www.youtube.com/watch?v=YKfAwIItO7M"
    },
    {
        "index": 5,
        "title": "Sentry as a way not to be afraid",
        "url": "https://www.youtube.com/watch?v=aT5nX0J4XaQ",
        "video_id": "aT5nX0J4XaQ",
        "uploader": "PyCon South Africa",
        "uploader_id": "@pyconza",
        "uploader_url": "https://www.youtube.com/@pyconza",
        "upload_date": "20200213",
        "duration": 2253,
        "view_count": 792,
        "like_count": 6,
        "comment_count": null,
        "tags": [
            "python",
            "PyCon",
            "PyConZA"
        ],
        "categories": [
            "Science & Technology"
        ],
        "description": "by Irina Grechikhina\n\nAt: PyConZA 2019\n\nSentry is an open-source error tracking software. It allows you to know exactly what's going on with your web application in real-time and get exact and detailed reports about occurred errors. Lot's of web developers used to rely only on app logs and generic monitoring software, but it's not enough. Multiple production servers, overwhelmed logging, lack of information about request content in case of error hinders problem investigation and produces permanent developer fear of changes. Sentry could ease the whole process and make you: stay calm during deployment, be sure your application works properly, solve problems before users report about it. \n\nDuring my talk, I will compare Sentry to ordinary logging, show how to use Sentry, explain how to read Sentry reports and demonstrate that its deployment is very easy. The whole demo will be done using Sentry hosted on my laptop. I will describe the problems I have faced up during sentry.io usage and explain why I prefer self-hosting. Also, I will share a link to my Github with docker-compose and ansible files to deploy your self-hosted Sentry, run through the whole idea and demonstrate that everything is clear and easy. Then I will show how to adjust the first project in Sentry and connect it to a working application in both backend and frontend parts. For each backend and frontend cases, there will be its separate part with examples when Sentry is useful and cannot be replaced by other tools and recommendations on how to make Sentry as effective as possible.\n\nMy talk will be useful for web developers of any level who wants to ease the process of problem investigation and finds application logs not handy.\n\nRoom: Boundary Room\nScheduled start: 2019-10-11 11:00:00+02",
        "thumbnail": "https://i.ytimg.com/vi_webp/aT5nX0J4XaQ/maxresdefault.webp",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=aT5nX0J4XaQ",
        "original_url": "https://www.youtube.com/watch?v=aT5nX0J4XaQ"
    },
    {
        "index": 6,
        "title": "Detecting Propaganda in Fake News using Natural Language Processing",
        "url": "https://www.youtube.com/watch?v=gJ7KsLROxhY",
        "video_id": "gJ7KsLROxhY",
        "uploader": "PyCon South Africa",
        "uploader_id": "@pyconza",
        "uploader_url": "https://www.youtube.com/@pyconza",
        "upload_date": "20200213",
        "duration": 2279,
        "view_count": 488,
        "like_count": 14,
        "comment_count": null,
        "tags": [
            "python",
            "PyCon",
            "PyConZA"
        ],
        "categories": [
            "Science & Technology"
        ],
        "description": "by Aroma Rodrigues\n\nAt: PyConZA 2019\n\n❮strong❯Propaganda Detection in Fake News using Natural Language Processing❮/strong❯\n\n❮strong❯What is the real world basis for this problem?❮/strong❯\n\nModern times have modern problems. And in India for the past few years we have seen a spike in mob incited violence and killings as a result of fake news spread through social media, messengers and even at times through legit news channels. Apart from educating the masses to identify fake and real news and not get carried away by propaganda, this problem also has a technology based solution. Fake news has already existed in the world, but social media, the fact that the world is so connected that it takes mere seconds for these to spread has exacerbated this issue. All the checks on a piece of news that can be done by a human, can be automated too. This paper aims at doing exactly that by checking with mainstream news agencies to verify the claims by extracting keywords and detecting propaganda using natural language processing libraries. \n\n.\n\n❮strong❯Why attend this talk?❮/strong❯\n\nThis is a technical talk, but the underlying idea is one that almost anyone could identify with. The implementations and the technical know-how’s would be suitable for those even in the Beginner stages in their understanding of machine learning and natural language processing. This talk is to be taken as an example of how some societal/civic problems can be considered technology problems and solved. It also serves as an example in translating almost any such problem into a tech one, dividing it into steps and solving every mini problem to solve the whole.\n\n\n\n❮strong❯The big idea!!!❮/strong❯\n\nWhat exactly is fake news? For the uninitiated, fake news is news that looks real, at times, and deludes people into believing it but is actually fake or modified to suit vested interests. Fake news has always existed in the world. Till the end of the cold war, fake news has existed, as either pro-Soviet or pro-America propaganda. Some fake news has political implications, affects trade deals and does result in affecting the life of the people living in the countries involved. This is an indirect effect though. In the 21st century with the widespread use of social media, instant messengers the effects are more dangerously direct. Fake news in the last few years have been used to slander communities, inciting violence, riots and even on occasion lynching and killing people. Fake news has also been used on social media to topple governments, swivel elections and build up mass perspective for and against individuals and organizations. This also means that for the modern world and democratic ideals to survive in today’s world the menace of fake news must be addressed.\n\n\n\nThere are a few characteristics that help a human differentiate fake news from the rest. A lot of the “fake news” containing messages shared on social media handles, have bad spellings and wrong grammar. A properly researched news article that has been taken from a credible news channel, paper or any other media is less likely to have any of these. Secondly, there would be no legitimate sources mentioned. And the keywords from the article, if searched for would result in either the news not existing, or skillfully modified to the interest of the maker. Images and videos are also not spared from these modifications with the usage of photo editing and video editing software in today’s world. Propaganda based fake news also generally either praises or criticizes individuals, communities or organizations. These characteristics can translate into a technical module, to predict whether a particular article is fake news or not. \n\n\n\nBased on these very steps this proposal now describes how two major steps are implemented and integrated to accomplish this. \n\n\n\nThe first is to find out reliable sources for the piece of news. Here we can use the Rapid Automatic Keyword Extraction algorithm. It is based on the frequency of a particular word and the co-occurrence of these words, basically a n- gram based approach. The nltk rake algorithm takes care of all the stop words in the English language which consists of prepositions, articles and such. The RAKE algorithm also gives us ranked phrases which makes it easier to use the first “n” ranked phrases to search in a neutral, well established and reputed news aggregator API to find if there are any articles corresponding to these phrases. The second step is to find the similarity of the articles retrieved if any, and the fake news. This  is done by comparing the fake news passage to the extract of sentences from the article containing the said keywords and using the SpaCy similarity feature to determine this.\n\n\n\nThe second part is identifying propaganda and this is where I use the Path Model of Blame to determine if the news contains any propaganda both blame and praise. Apart from these propaganda can also be identified from the contents of the article. \n\n\n\n❮…",
        "thumbnail": "https://i.ytimg.com/vi_webp/gJ7KsLROxhY/maxresdefault.webp",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=gJ7KsLROxhY",
        "original_url": "https://www.youtube.com/watch?v=gJ7KsLROxhY"
    },
    {
        "index": 7,
        "title": "Using Python to visualize and analyze ion beam experiment data  at a particle accelerator facility",
        "url": "https://www.youtube.com/watch?v=AtQXriM5gl0",
        "video_id": "AtQXriM5gl0",
        "uploader": "PyCon South Africa",
        "uploader_id": "@pyconza",
        "uploader_url": "https://www.youtube.com/@pyconza",
        "upload_date": "20200213",
        "duration": 2217,
        "view_count": 407,
        "like_count": 5,
        "comment_count": null,
        "tags": [
            "python",
            "PyCon",
            "PyConZA"
        ],
        "categories": [
            "Science & Technology"
        ],
        "description": "by Caswell Pieters\n\nAt: PyConZA 2019\n\nThe electrostatic Tandetron accelerator of the Materials Research Department at iThemba LABS is used primarily for conducting research in the field of Ion Beam Analysis. \n\nThe field comprises of several techniques, one of which is Real Time In-Situ Rutherford Backscattering Spectrometry. This technique studies elemental composition and depth profiling during the formation of metal silicides, in real time, while the sample material is thermally annealed. Data for these experiments must be acquired by reading out electronics modules, and visualized/analyzed both during the experiment, and offline.\n\nData acquisition is done using largely in-house developed software built on top of open-source frameworks. The offline analysis, visualization and manipulation of this data, which includes the creation of contour and 3 dimensional plots of the backscattered particle histograms over time, is done using Python in combination with the [ROOT](https://root.cern.ch/) data analysis framework developed at CERN. ROOT has an extension module named PyRoot, that allows interaction with ROOT functions and data structures from Python. \n\nThis talks discusses how the software was developed to achieve that, as well as how Python is used during a live experiment to log information about the state of the experiment and display that data using an ELK stack. While this is a case study in creating specific software tools to handle data from a novel physics experiment, it would be of general interest to anybody wanting to visualize data or do logging using Python.\n\nRoom: Marathon\nScheduled start: 2019-10-11 11:00:00+02",
        "thumbnail": "https://i.ytimg.com/vi_webp/AtQXriM5gl0/maxresdefault.webp",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=AtQXriM5gl0",
        "original_url": "https://www.youtube.com/watch?v=AtQXriM5gl0"
    },
    {
        "index": 8,
        "title": "Machine Learning Engineering principles with Python and MLFlow",
        "url": "https://www.youtube.com/watch?v=oIrnMdG4L0I",
        "video_id": "oIrnMdG4L0I",
        "uploader": "PyCon South Africa",
        "uploader_id": "@pyconza",
        "uploader_url": "https://www.youtube.com/@pyconza",
        "upload_date": "20200213",
        "duration": 2571,
        "view_count": 388,
        "like_count": 5,
        "comment_count": 1,
        "tags": [
            "python",
            "PyCon",
            "PyConZA"
        ],
        "categories": [
            "Science & Technology"
        ],
        "description": "by Natu Lauchande\n\nAt: PyConZA 2019\n\nMachine Learning is a very hyped topic of the moment. While a lot of the talks and presentations cover the data science component, very few cover the nity gritty details of a machine learning pipeline. This talk will focus on the engineering part of Machine Learning by covering different Machine Learning systems architecture best practices, strategies including design. We will delve into the essence of Uber's Michelangelo, Airbnbs s Bighead and Facebooks FB Learner. During the talk, I will use MLFlow and Python as platforms to create an open-source based solution similar to the ones from the big tech companies for the everyday tech startup. The entirety of the cycle of training, deployment, monitoring, champion/challenger testing, and serving layer will be addressed. Technical debt prevention is another topic that will be addressed in the end of the talk.\n\nRoom: Ballroom\nScheduled start: 2019-10-10 11:00:00+02",
        "thumbnail": "https://i.ytimg.com/vi_webp/oIrnMdG4L0I/maxresdefault.webp",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=oIrnMdG4L0I",
        "original_url": "https://www.youtube.com/watch?v=oIrnMdG4L0I"
    },
    {
        "index": 9,
        "title": "Managers, Diplomats & Gaskets: On Being the Seal That Holds Teams Together",
        "url": "https://www.youtube.com/watch?v=mn06eCDur2o",
        "video_id": "mn06eCDur2o",
        "uploader": "PyCon South Africa",
        "uploader_id": "@pyconza",
        "uploader_url": "https://www.youtube.com/@pyconza",
        "upload_date": "20200213",
        "duration": 2753,
        "view_count": 244,
        "like_count": 6,
        "comment_count": null,
        "tags": [
            "python",
            "PyCon",
            "PyConZA"
        ],
        "categories": [
            "Science & Technology"
        ],
        "description": "by Petrus Theron\n\nAt: PyConZA 2019\n\n“For important negotiations we don’t send telegrams; we send ambassadors.” — Alan Kay\n\nThe problem with ambassadors is they only speak one language…typically French. But to negotiate between worlds, you need to speak two languages. You need a diplomat - or in mechanical terms, a gasket.\n\nThis talk is about transmuting wealth between domains of knowledge. Electrical engineering, in particular, has been unreasonably effective at predicting phenomena in other domains. So let's explore some ideas for creating wealth in an increasingly specialised world by cultivating generalist skills.\n\nRoom: Ballroom\nScheduled start: 2019-10-11 16:00:00+02",
        "thumbnail": "https://i.ytimg.com/vi_webp/mn06eCDur2o/maxresdefault.webp",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=mn06eCDur2o",
        "original_url": "https://www.youtube.com/watch?v=mn06eCDur2o"
    },
    {
        "index": 10,
        "title": "No more struggles with Apache Spark (PySpark) workloads in production",
        "url": "https://www.youtube.com/watch?v=I59f168hgS4",
        "video_id": "I59f168hgS4",
        "uploader": "PyCon South Africa",
        "uploader_id": "@pyconza",
        "uploader_url": "https://www.youtube.com/@pyconza",
        "upload_date": "20200213",
        "duration": 2159,
        "view_count": 173,
        "like_count": 1,
        "comment_count": null,
        "tags": [
            "python",
            "PyCon",
            "PyConZA"
        ],
        "categories": [
            "Science & Technology"
        ],
        "description": "by Chetan Khatri\n\nAt: PyConZA 2019\n\nSpark is a good tool for processing large amounts of data, but there are many pitfalls to avoid in order to build large scale systems in production, This talk will take you through fundamental concepts of Apache Spark for Python Developers. We'll examine some of the data serialization and interoperability issues specifically with Python libraries like Numpy, Pandas which are highly impacting PySpark performance. We will address this issue with Apache arrow (PyArrow API) which is a cross-language development platform for in-memory data. This talk will show what the challenges you may face while productionizing Spark for TB’s of data and their possible solutions.\n\nRoom: Marathon\nScheduled start: 2019-10-11 09:00:00+02",
        "thumbnail": "https://i.ytimg.com/vi_webp/I59f168hgS4/maxresdefault.webp",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=I59f168hgS4",
        "original_url": "https://www.youtube.com/watch?v=I59f168hgS4"
    },
    {
        "index": 11,
        "title": "Automating infrastructure at SA Home Loans with Python (and friends)",
        "url": "https://www.youtube.com/watch?v=BT8Pxayqh84",
        "video_id": "BT8Pxayqh84",
        "uploader": "PyCon South Africa",
        "uploader_id": "@pyconza",
        "uploader_url": "https://www.youtube.com/@pyconza",
        "upload_date": "20200213",
        "duration": 2023,
        "view_count": 173,
        "like_count": 4,
        "comment_count": null,
        "tags": [
            "python",
            "PyCon",
            "PyConZA"
        ],
        "categories": [
            "Science & Technology"
        ],
        "description": "by Kim van Wyk\n\nAt: PyConZA 2019\n\nSA Home Loans develops most of its business software in-house, with 5 agile teams of developers, database specialists and testers. Each team is provided with an isolated virtualised clone of the production environment, comprising more than 20 Windows servers, 5 Linux servers and various databases and supporting infrastructure. A combination of Python, Node.js, bash and Powershell is used to glue a variety of open-source apps together and spin up new labs in as automated a fashion as possible. One of the main focuses of this talk is an illustration of some of the tools and methods SAHL uses or has written to do this work, as opposed to previously creating each lab manually over a week of error-prone manual effort per lab. \n\nThis talk will aim to show that this kind of automation need not be complex or require a large team. The easy-to-learn nature of Python has allowed SAHL's existing developers and devops engineers to work on the above systems after about 2 days of internally-developed Python training and a bit of at-desk assistance when needed.\n\nThe talk will also discuss some of the lessons learned while moving away from manual methods to an automated approach.\n\nRoom: Marathon\nScheduled start: 2019-10-10 14:15:00+02",
        "thumbnail": "https://i.ytimg.com/vi_webp/BT8Pxayqh84/maxresdefault.webp",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=BT8Pxayqh84",
        "original_url": "https://www.youtube.com/watch?v=BT8Pxayqh84"
    },
    {
        "index": 12,
        "title": "Why You Should Care About Types",
        "url": "https://www.youtube.com/watch?v=iYjaXlmbaDM",
        "video_id": "iYjaXlmbaDM",
        "uploader": "PyCon South Africa",
        "uploader_id": "@pyconza",
        "uploader_url": "https://www.youtube.com/@pyconza",
        "upload_date": "20200213",
        "duration": 3436,
        "view_count": 156,
        "like_count": 4,
        "comment_count": null,
        "tags": [
            "python",
            "PyCon",
            "PyConZA"
        ],
        "categories": [
            "Science & Technology"
        ],
        "description": "by Luka Sterbic\n\nAt: PyConZA 2019\n\nBy now you have probably all heard about Python static typing. But why should you care? Are types in Python even Pythonic? SPOILER: Guido says so. Is Python turning into Java? In this talk I’ll try to answer these questions and explain how type annotations helped my team scale, made our code more efficient and new hires happier.\n\nWe will start with how the typing system in Python came to be, what is the motivation for it and how it looks today. I will demonstrate how to gradually add types to a pre-existing codebase and what benefits will your team get in the long run from a 100% typed project. I will also cover Facebook specific technologies that have now been open sourced like our runtime type collection system, MonkeyType, and the scalable type checker, Pyre!\n\nRoom: Ballroom\nScheduled start: 2019-10-10 09:30:00+02",
        "thumbnail": "https://i.ytimg.com/vi_webp/iYjaXlmbaDM/maxresdefault.webp",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=iYjaXlmbaDM",
        "original_url": "https://www.youtube.com/watch?v=iYjaXlmbaDM"
    },
    {
        "index": 13,
        "title": "Getting Machine Learning Models Ready For Production Using Python",
        "url": "https://www.youtube.com/watch?v=oSOTKk3R6bM",
        "video_id": "oSOTKk3R6bM",
        "uploader": "PyCon South Africa",
        "uploader_id": "@pyconza",
        "uploader_url": "https://www.youtube.com/@pyconza",
        "upload_date": "20200213",
        "duration": 2126,
        "view_count": 151,
        "like_count": 4,
        "comment_count": null,
        "tags": [
            "python",
            "PyCon",
            "PyConZA"
        ],
        "categories": [
            "Science & Technology"
        ],
        "description": "by Adit Mehta\n\nAt: PyConZA 2019\n\nAs a Scientist, it’s incredibly satisfying to be given the freedom to experiment by applying new research and rapidly prototyping. This satisfaction can be sustained quite well in a lab environment but can diminish quickly in a corporate environment. This is because of the underlying commercial value motive which science is driven by in a business setting — if it doesn’t add business value to employees or customers, there’s no place for it! Business value, however, goes beyond just being a nifty experiment which shows potential value to employees or customers. In the context of Machine Learning models, the only [business] valuable models, are models in Production!\n\nIn this talk, I will take the audience through the steps involved in moving from experiments in Jupyter Notebooks to automated model training, serving and deployments for Production using an array of Python tools such as Numpy, Pandas, SciKit Learn and Docker.\n\nThe intended audience for this talk includes Data Scientists, Software Engineers and any other Data practitioners who have or want to go through the journey of gaining real-time value from  Machine Learning models in Production. This talk will impart lessons learnt in moving from Jupyter experiments to writing production-ready Python code, as well as impart important Python tools, frameworks and libraries which can be used to accelerate such a transition.\n\nRoom: Ballroom\nScheduled start: 2019-10-11 14:15:00+02",
        "thumbnail": "https://i.ytimg.com/vi_webp/oSOTKk3R6bM/maxresdefault.webp",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=oSOTKk3R6bM",
        "original_url": "https://www.youtube.com/watch?v=oSOTKk3R6bM"
    },
    {
        "index": 14,
        "title": "Using QPython in smartphones as mobile computational laboratory anywhere, anytime and anyhow",
        "url": "https://www.youtube.com/watch?v=4lgIkhaTA98",
        "video_id": "4lgIkhaTA98",
        "uploader": "PyCon South Africa",
        "uploader_id": "@pyconza",
        "uploader_url": "https://www.youtube.com/@pyconza",
        "upload_date": "20200213",
        "duration": 1981,
        "view_count": 140,
        "like_count": 6,
        "comment_count": null,
        "tags": [
            "python",
            "PyCon",
            "PyConZA"
        ],
        "categories": [
            "Science & Technology"
        ],
        "description": "by Godfrey Akpojotor\n\nAt: PyConZA 2019\n\nThe remarkably continuous penetration of smartphones into Africa and the availability of the free and open source Python programming capabilities as QPython (QP) in smartphones meets the accessibility requirement to make them mobile computational laboratory (MCL). We present here one of our current projects under the Python African Computational Science and Engineering Tour Project (PACSETPro) of using QP as MCL for teaching programming and development of smartphone Apps to students, new beginners as well as expert programmers anywhere, anytime and anyhow.\n\nRoom: Boundary Room\nScheduled start: 2019-10-10 11:45:00+02",
        "thumbnail": "https://i.ytimg.com/vi_webp/4lgIkhaTA98/maxresdefault.webp",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=4lgIkhaTA98",
        "original_url": "https://www.youtube.com/watch?v=4lgIkhaTA98"
    },
    {
        "index": 15,
        "title": "Radio Astronomy Reduction Pipelines Using Python and Various Container Technologies",
        "url": "https://www.youtube.com/watch?v=O7ypn-0US08",
        "video_id": "O7ypn-0US08",
        "uploader": "PyCon South Africa",
        "uploader_id": "@pyconza",
        "uploader_url": "https://www.youtube.com/@pyconza",
        "upload_date": "20200213",
        "duration": 2660,
        "view_count": 133,
        "like_count": 7,
        "comment_count": null,
        "tags": [
            "python",
            "PyCon",
            "PyConZA"
        ],
        "categories": [
            "Science & Technology"
        ],
        "description": "by Athanaseus Ramaila\n\nAt: PyConZA 2019\n\nModern-era radio interferometry software packages have improved enough to allow astronomers to start to address some of the calibration and imaging issues that are posed by the next generation radio interferometers, particularly the MeerKAT, LOFAR, ASKAP and Square Kilometre Array (SKA). I will present a framework that uses a platform-independent scripting tool called ❮a href=\"https://github.com/SpheMakh/Stimela\"❯Stimela❮/a❯ that allows the easy creation of astronomical data reduction pipelines using python and any of the supported (❮a href=\"https://www.docker.com/\"❯Docker❮/a❯, ❮a href=\"https://podman.io/\"❯Podman❮/a❯, ❮a href=\"https://sylabs.io/docs/#singularity\"❯Singularity❮/a❯ and ❮a href=\"https://github.com/indigo-dc/udocker\"❯uDocker❮/a❯) container technology of choice. In this framework, radio interferometry related tasks such as data synthesis, calibration and imaging are executed in containers. In fact, within this framework, the packages that perform these tasks are mostly Python modules. The primary aims are to provide the following services to the Radio Astronomy community: a) A user-friendly environment that gives general users easy access to novel radio interferometry packages. b) Simplified installation and production deployment. I will also discuss other great benefits to this deployment model such as providing a fixed production environment and reproducibility of scientific results.\n\nRoom: Marathon\nScheduled start: 2019-10-11 11:45:00+02",
        "thumbnail": "https://i.ytimg.com/vi_webp/O7ypn-0US08/maxresdefault.webp",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=O7ypn-0US08",
        "original_url": "https://www.youtube.com/watch?v=O7ypn-0US08"
    },
    {
        "index": 16,
        "title": "Deep Neural Networks for Video Applications",
        "url": "https://www.youtube.com/watch?v=rV8e7jFB5pg",
        "video_id": "rV8e7jFB5pg",
        "uploader": "PyCon South Africa",
        "uploader_id": "@pyconza",
        "uploader_url": "https://www.youtube.com/@pyconza",
        "upload_date": "20200213",
        "duration": 3539,
        "view_count": 93,
        "like_count": 6,
        "comment_count": null,
        "tags": [
            "python",
            "PyCon",
            "PyConZA"
        ],
        "categories": [
            "Science & Technology"
        ],
        "description": "by Alex Conway\n\nAt: PyConZA 2019\n\nMost CCTV video cameras exist as a sort of time machine for insurance purposes. Deep neural networks make it easy to convert video into actionable data which can be used to trigger real-time anomaly alerts and optimize complex business processes. In addition to commercial applications, deep learning can be used to analyze large amounts of video recorded from the point of view of animals to study complex behavior patterns impossible to otherwise analyze. This talk will present some theory of deep neural networks for video applications as well as academic research and several applied real-world industrial examples, with code examples in python.\n\nRoom: Ballroom\nScheduled start: 2019-10-10 16:00:00+02",
        "thumbnail": "https://i.ytimg.com/vi_webp/rV8e7jFB5pg/maxresdefault.webp",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=rV8e7jFB5pg",
        "original_url": "https://www.youtube.com/watch?v=rV8e7jFB5pg"
    },
    {
        "index": 17,
        "title": "Apache Airflow @ Umuzi.org",
        "url": "https://www.youtube.com/watch?v=IAmWKZDmvek",
        "video_id": "IAmWKZDmvek",
        "uploader": "PyCon South Africa",
        "uploader_id": "@pyconza",
        "uploader_url": "https://www.youtube.com/@pyconza",
        "upload_date": "20200213",
        "duration": 2177,
        "view_count": 81,
        "like_count": 1,
        "comment_count": null,
        "tags": [
            "python",
            "PyCon",
            "PyConZA"
        ],
        "categories": [
            "Science & Technology"
        ],
        "description": "by Sheena O'Connell\n\nAt: PyConZA 2019\n\nPeople don't want data - what they really want is insight. Or even better, actionable insight. Now the road from data to insights can be a bit of a beast. Take Airbnb as an example - it started as a scrappy social hack and grew into a large and data-driven company. When they were small so was their data, but as the company and technical architecture grew in scale and complexity leveraging that data became a challenge. It became more and more necessary to combine multiple messy data-sources in novel ways, in the right order and on a strict schedule... using distributed computing... with proper logging and error recovery... gosh. Batch jobs, cron, sticky tape and bits of string soon proved insufficient.\n\nEnter Airflow.\n\nAirflow is an Apache top-level project that was open-sourced by Airbnb. It's a seriously powerful tool that's all about defining, scheduling, running, monitoring and distributing complicated workflows.\n\nIn this talk I'll give you a bit of a tour of airflow's moving parts. I'll also talk a little bit about how we are leveraging Airflow at Umuzi\n\nRoom: Ballroom\nScheduled start: 2019-10-10 14:15:00+02",
        "thumbnail": "https://i.ytimg.com/vi_webp/IAmWKZDmvek/maxresdefault.webp",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=IAmWKZDmvek",
        "original_url": "https://www.youtube.com/watch?v=IAmWKZDmvek"
    },
    {
        "index": 18,
        "title": "Working with data in Python for the Aspiring Data Scientists",
        "url": "https://www.youtube.com/watch?v=lLbmAcjq2Zw",
        "video_id": "lLbmAcjq2Zw",
        "uploader": "PyCon South Africa",
        "uploader_id": "@pyconza",
        "uploader_url": "https://www.youtube.com/@pyconza",
        "upload_date": "20200213",
        "duration": 2102,
        "view_count": 77,
        "like_count": 0,
        "comment_count": null,
        "tags": [
            "python",
            "PyCon",
            "PyConZA"
        ],
        "categories": [
            "Science & Technology"
        ],
        "description": "by Jean-Pierre Voogt\n\nAt: PyConZA 2019\n\nData Science is the latest data buzzword, but what does this mean for us, the analysts and developers? Well, this is just another opportunity to grow and learn a new skill. The great thing about the era we live in is that information is everywhere, but can be a little overwhelming for someone who is just starting off in a new field or wants to learn a new skill.\n\nIn this session, we will use Python in an easy-to-understand layout by using Jupyter Notebooks as our interface and pandas as our data manipulation library. This session is for everyone that is just starting off in Python. We will learn how to import/export data into Python, as well as manipulate and analyze data. Finally, we will look at how to bring this back into our SQL Server world.\n\nRoom: Marathon\nScheduled start: 2019-10-10 11:00:00+02",
        "thumbnail": "https://i.ytimg.com/vi_webp/lLbmAcjq2Zw/maxresdefault.webp",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=lLbmAcjq2Zw",
        "original_url": "https://www.youtube.com/watch?v=lLbmAcjq2Zw"
    },
    {
        "index": 19,
        "title": "Teaching kids to code 2.0",
        "url": "https://www.youtube.com/watch?v=W-YiQd5DgjQ",
        "video_id": "W-YiQd5DgjQ",
        "uploader": "PyCon South Africa",
        "uploader_id": "@pyconza",
        "uploader_url": "https://www.youtube.com/@pyconza",
        "upload_date": "20200213",
        "duration": 2072,
        "view_count": 72,
        "like_count": 0,
        "comment_count": null,
        "tags": [
            "python",
            "PyCon",
            "PyConZA"
        ],
        "categories": [
            "Science & Technology"
        ],
        "description": "by Whitney Tennant and David Campey\n\nAt: PyConZA 2019\n\nThis is a joint talk featuring David Campey and Whitney Tennant\n\nIn this talk (which is a new and improved version of ❮a href=\"https://2018.za.pycon.org/talks/78-teach-kids-7-17-to-code-with-python-coderdojo/\"❯David Campey's 2018 talk❮/a❯ on teaching kids to code) \nwe'll discuss:\n\n- Software and games available to teach kids how to code\n\n- Microcontrollers and other fun gadgets\n\n- How to get involved if you would like to mentor\n\n- Best practices for making sure it's fun and enjoyable for kids\n\nHaving taught kids how to code in partnership with CoderDojo (a worldwide free community-driven coding education program) David Campey has created CoderLevelUp. CoderLevelUp is a for-purpose initiative which aims to expand the network for free coding education for kids in South Africa. \nHe heads up the dojo at the science center in CT for teaching kids to code. He has also recently started a class in Gugulethu. \n\nWhitney Tennant met David through PyConZA because of last years talk on this topic. She has since volunteered, is an active mentor and excited to be part of growing CoderLevelUp.\n\nRoom: Boundary Room\nScheduled start: 2019-10-10 13:30:00+02",
        "thumbnail": "https://i.ytimg.com/vi_webp/W-YiQd5DgjQ/maxresdefault.webp",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=W-YiQd5DgjQ",
        "original_url": "https://www.youtube.com/watch?v=W-YiQd5DgjQ"
    },
    {
        "index": 20,
        "title": "A gentle introduction on Building an intelligent Chatbot in Python",
        "url": "https://www.youtube.com/watch?v=1_bNWTd1wH0",
        "video_id": "1_bNWTd1wH0",
        "uploader": "PyCon South Africa",
        "uploader_id": "@pyconza",
        "uploader_url": "https://www.youtube.com/@pyconza",
        "upload_date": "20200213",
        "duration": 2111,
        "view_count": 70,
        "like_count": 1,
        "comment_count": null,
        "tags": [
            "python",
            "PyCon",
            "PyConZA"
        ],
        "categories": [
            "Science & Technology"
        ],
        "description": "by Paulus M Shituna\n\nAt: PyConZA 2019\n\nChatbots have the potential to save any individual’s time, hassle, and tedium by automating mundane tasks. Today almost every company has a chatbot deployed to engage with the users. Some of the ways in which companies are using chatbots are: Information distribution & customers support.\nSo In this talk, I am going to take you through step-by-step on how to develop a chatbot in python; by exploring some of the its attributes, Classes, Reflections, Instances, API integrations, database, Dictionaries and interfaces.\nSince this will be purely introduction talk, I expect the audiences to be intermediate and beginners.\n\nRoom: Ballroom\nScheduled start: 2019-10-11 09:45:00+02",
        "thumbnail": "https://i.ytimg.com/vi_webp/1_bNWTd1wH0/maxresdefault.webp",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=1_bNWTd1wH0",
        "original_url": "https://www.youtube.com/watch?v=1_bNWTd1wH0"
    },
    {
        "index": 21,
        "title": "Programming for accessibility",
        "url": "https://www.youtube.com/watch?v=bhPpmvBCSOc",
        "video_id": "bhPpmvBCSOc",
        "uploader": "PyCon South Africa",
        "uploader_id": "@pyconza",
        "uploader_url": "https://www.youtube.com/@pyconza",
        "upload_date": "20200213",
        "duration": 2882,
        "view_count": 67,
        "like_count": 0,
        "comment_count": null,
        "tags": [
            "python",
            "PyCon",
            "PyConZA"
        ],
        "categories": [
            "Science & Technology"
        ],
        "description": "by Rory Preddy\n\nAt: PyConZA 2019\n\nMy life is a hilarious roller coaster of miss-intended programming bugs because at 4 foot tall and 65 kilograms I completely fall off your radar.\n\nWhy did my scale call me! Why does facial recognition see me as a child? These are all valid questions I often ask myself as I navigate my weird and different world. Have you heard the phrase “You have to be this tall for Micro-services”? well what about: “You have to be this tall to operate a mobile phone?”. I am finding it harder and harder to reach any button except for “#” and “9”.\n\nBuilding accessibility into the planning stages of programming can eliminate barriers for participation and create an inclusive environment for people with disabilities. Programming for diversity serves as an unquestionable indicator that your software embraces the diversity of your users and cares about their safety and comfort.\n\nJoin me on a fascinating and thought-provoking look at how you can program for accessibility.\n\nRoom: Marathon\nScheduled start: 2019-10-10 11:45:00+02",
        "thumbnail": "https://i.ytimg.com/vi_webp/bhPpmvBCSOc/maxresdefault.webp",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=bhPpmvBCSOc",
        "original_url": "https://www.youtube.com/watch?v=bhPpmvBCSOc"
    },
    {
        "index": 22,
        "title": "Rapsheet: Continuous HTTP and DNS monitoring",
        "url": "https://www.youtube.com/watch?v=dNKZ6nq2cZM",
        "video_id": "dNKZ6nq2cZM",
        "uploader": "PyCon South Africa",
        "uploader_id": "@pyconza",
        "uploader_url": "https://www.youtube.com/@pyconza",
        "upload_date": "20200213",
        "duration": 1600,
        "view_count": 63,
        "like_count": 1,
        "comment_count": null,
        "tags": [
            "python",
            "PyCon",
            "PyConZA"
        ],
        "categories": [
            "Science & Technology"
        ],
        "description": "by Keagan Jarvis\n\nAt: PyConZA 2019\n\nOur company runs hundreds of servers with thousands of clients connecting to them every minute. This translates to thousands of HTTP and DNS endpoints that need to be reachable at all times. In order to monitor these channels we developed Rapsheet a monitoring tool that performs continuous testing of all channels against a variety of third party infrastructure providers. Rapsheet uses asyncio libraries such as aiodns and aiohttp to manage bulk requests and queries.\n\nDNS queries are performed against separate DNS servers such as OpenDNS, CloudFlare and Google's DNS servers. HTTP requests check for availability and actual content correctness. (As a bonus, HTTP and Domains are also constantly checked against third party blacklist providers like Google's SafeBrowsing db).\n\nThe other thing that’s different about Rapsheet is its philosophy. It doesn’t do fancy graphs or pretty world-map overlays (even though we do project it on an office wall). Rapsheet is built on the principle of preventing alarm deafness. (Alarm deafness comes from alarms being in an alert state for long periods of time). Rapsheet's chief goal was to strive towards a zero state measured, so any metric in a non-zero state would be an obvious call to action.\n\nA very basic understanding of DNS and HTTP would be useful for this talk. We also think that the general thinking on logging, alerting and alert blindness will be useful for all devs pushing out code that needs to be monitored at scale. Rapsheet is now publically available on Dockerhub and this talk is a crash course on its background thinking, design and functionality.\n\nRoom: Marathon\nScheduled start: 2019-10-11 13:30:00+02",
        "thumbnail": "https://i.ytimg.com/vi_webp/dNKZ6nq2cZM/maxresdefault.webp",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=dNKZ6nq2cZM",
        "original_url": "https://www.youtube.com/watch?v=dNKZ6nq2cZM"
    },
    {
        "index": 23,
        "title": "Talk Data to Me - the art of storytelling",
        "url": "https://www.youtube.com/watch?v=F18nPVpmQTs",
        "video_id": "F18nPVpmQTs",
        "uploader": "PyCon South Africa",
        "uploader_id": "@pyconza",
        "uploader_url": "https://www.youtube.com/@pyconza",
        "upload_date": "20200213",
        "duration": 1454,
        "view_count": 62,
        "like_count": 2,
        "comment_count": null,
        "tags": [
            "python",
            "PyCon",
            "PyConZA"
        ],
        "categories": [
            "Science & Technology"
        ],
        "description": "by Diana Pholo\n\nAt: PyConZA 2019\n\nCollecting data is now seen as a very important aspect of business. Many companies therefore invest in solutions such as Business Intelligence tools, spreadsheets and dashboards in an attempt to extract useful information from their data. However, these tools still fail to present what is hidden in the data because they do not bring out their underlying significance. This is where data storytelling comes in. It helps to visualise information, understand the narrative behind it and share it.\n\nThis talk is aimed at anyone who wishes to get started with storytelling using data. What do you look for? How do you present your findings to stakeholders? Together, we will have a look at common visualisation tools provided Matplotlib, Pandas and Seaborn (accompanied with code snippets and sample outputs). We will then look at the story behind the Harambee youth employment journey data. (Data provided by ❮a href=\"https://harambee.co.za/\"❯Harambee Youth Employment Accelerator❮/a❯)\n\nRoom: Ballroom\nScheduled start: 2019-10-11 11:45:00+02",
        "thumbnail": "https://i.ytimg.com/vi_webp/F18nPVpmQTs/maxresdefault.webp",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=F18nPVpmQTs",
        "original_url": "https://www.youtube.com/watch?v=F18nPVpmQTs"
    },
    {
        "index": 24,
        "title": "Introduction to the PSSSA",
        "url": "https://www.youtube.com/watch?v=OfAlI1IkcdM",
        "video_id": "OfAlI1IkcdM",
        "uploader": "PyCon South Africa",
        "uploader_id": "@pyconza",
        "uploader_url": "https://www.youtube.com/@pyconza",
        "upload_date": "20200213",
        "duration": 282,
        "view_count": 60,
        "like_count": 1,
        "comment_count": 1,
        "tags": [
            "python",
            "PyCon",
            "PyConZA"
        ],
        "categories": [
            "Science & Technology"
        ],
        "description": "by David Sharpe\n\nAt: PyConZA 2019\n\nA brief introduction to the Python Software Society of South Africa, why it exists, what it does and what it can do.\n\nRoom: Ballroom\nScheduled start: 2019-10-10 09:25:00+02",
        "thumbnail": "https://i.ytimg.com/vi_webp/OfAlI1IkcdM/maxresdefault.webp",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=OfAlI1IkcdM",
        "original_url": "https://www.youtube.com/watch?v=OfAlI1IkcdM"
    },
    {
        "index": 25,
        "title": "Friday Lightning Talks",
        "url": "https://www.youtube.com/watch?v=3nHHKghYDVs",
        "video_id": "3nHHKghYDVs",
        "uploader": "PyCon South Africa",
        "uploader_id": "@pyconza",
        "uploader_url": "https://www.youtube.com/@pyconza",
        "upload_date": "20200213",
        "duration": 4777,
        "view_count": 55,
        "like_count": 4,
        "comment_count": null,
        "tags": [
            "python",
            "PyCon",
            "PyConZA"
        ],
        "categories": [
            "Science & Technology"
        ],
        "description": "by \n\nAt: PyConZA 2019\nRoom: Ballroom\nScheduled start: 2019-10-11 15:30:00+02",
        "thumbnail": "https://i.ytimg.com/vi_webp/3nHHKghYDVs/maxresdefault.webp",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=3nHHKghYDVs",
        "original_url": "https://www.youtube.com/watch?v=3nHHKghYDVs"
    },
    {
        "index": 26,
        "title": "There will be Data: Scraping the Web with Python",
        "url": "https://www.youtube.com/watch?v=-HBUPOntr8g",
        "video_id": "-HBUPOntr8g",
        "uploader": "PyCon South Africa",
        "uploader_id": "@pyconza",
        "uploader_url": "https://www.youtube.com/@pyconza",
        "upload_date": "20200213",
        "duration": 2157,
        "view_count": 54,
        "like_count": 1,
        "comment_count": null,
        "tags": [
            "python",
            "PyCon",
            "PyConZA"
        ],
        "categories": [
            "Science & Technology"
        ],
        "description": "by Andrew Collier\n\nAt: PyConZA 2019\n\nWeb scraping is an essential weapon for every Data Scientist to have in their arsenal. Whether you're creating a new dataset from scratch or augmenting an existing dataset, there are reams of data available to be harvested.\n\nIn this practical talk I'll show how to use CSS to isolate the relevant portions of a web page and then demonstrate how to use BeautifulSoup to retrieve the associated data.\n\nRoom: Marathon\nScheduled start: 2019-10-11 09:45:00+02",
        "thumbnail": "https://i.ytimg.com/vi_webp/-HBUPOntr8g/maxresdefault.webp",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=-HBUPOntr8g",
        "original_url": "https://www.youtube.com/watch?v=-HBUPOntr8g"
    },
    {
        "index": 27,
        "title": "Edge computing at the edge of the world",
        "url": "https://www.youtube.com/watch?v=sVgNhfAyWwM",
        "video_id": "sVgNhfAyWwM",
        "uploader": "PyCon South Africa",
        "uploader_id": "@pyconza",
        "uploader_url": "https://www.youtube.com/@pyconza",
        "upload_date": "20200213",
        "duration": 2237,
        "view_count": 54,
        "like_count": 0,
        "comment_count": null,
        "tags": [
            "python",
            "PyCon",
            "PyConZA"
        ],
        "categories": [
            "Science & Technology"
        ],
        "description": "by Schalk Heunis\n\nAt: PyConZA 2019\n\nWell, to be more accurate, running a context-aware machine learning based music recommendation system using Python on an embedded processor integrated into a RC remote control on mountains around South Africa.  The context is generated by sensors on a 1.2 m home-built slope glider, processed on the plane using Python, running on an even smaller embedded board built into the plane (was also thinking about 'Snakes on a plane' as a title) and being transmitted down to the music player while flying.\n\nThe music recommendation uses reinforcement learning to map the current flying-style features (e.g. fast-and-reckless vs slow-and-relaxed) at time of recommendation to songs on an SD card. Songs are processed offline into mel-spectograms, features extracted using a convolutional neural network (VGG16) via Keras and then clustered into folders of similar songs.  The mapping of flying style to folders are discovered through reinforcement from skips or listens.  \n\nThe purpose of the talk is to introduce the audience to CircuitPython (a flavour of Python for microcontrollers), song feature extraction using convnets and reinforcement learning based context aware realtime music recommendation. The audience for this would be Python enthusiasts, data scientist, tinkerers, those interested in edge computing and anyone frustrated with the lack of context aware music players (especially when flying their RC slope gliders).  The entire project with code, circuit board design, Jupyter notebook and videos with the system in action will be made available on Github.\n\nRoom: Ballroom\nScheduled start: 2019-10-10 13:30:00+02",
        "thumbnail": "https://i.ytimg.com/vi_webp/sVgNhfAyWwM/maxresdefault.webp",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=sVgNhfAyWwM",
        "original_url": "https://www.youtube.com/watch?v=sVgNhfAyWwM"
    },
    {
        "index": 28,
        "title": "Migrating to Python 3 using Docker for your CI/CD pipeline (even if you can't use it in production)",
        "url": "https://www.youtube.com/watch?v=VPar831Vhts",
        "video_id": "VPar831Vhts",
        "uploader": "PyCon South Africa",
        "uploader_id": "@pyconza",
        "uploader_url": "https://www.youtube.com/@pyconza",
        "upload_date": "20200213",
        "duration": 1942,
        "view_count": 54,
        "like_count": 0,
        "comment_count": null,
        "tags": [
            "python",
            "PyCon",
            "PyConZA"
        ],
        "categories": [
            "Science & Technology"
        ],
        "description": "by Cobus Bernard\n\nAt: PyConZA 2019\n\nWhen moving from Python 2 to 3, it is hard to make sure that you application will work as planned without having to also worry about your build and deployment pipeline. You may also be in a position where you are unable to run Docker in production. In this talk, I will show you how to use Docker for your CI/CD pipeline and how to approach the move to Python 3 using containers to minimise the risk and complexity of the move. We will look at how Docker simplifies the build and test process by running all the steps inside containers by starting with a Python 2 repo in Github, adding Dockerfiles, using CodePipeline to build/test and then deploy to an instance using Docker to transport the application, but not run it. We will then branch the project and start a mock conversion to Python 3 using the same containers, and ultimately deploy to the instance. In the middle of this, we will look at changing the build process to add virtual environments to the production instance as we need to be able to use different versions of Python. The session will include a demo of how to create all the infrastructure with code to help attendees automate their own workflows.\n\nRoom: Marathon\nScheduled start: 2019-10-10 13:30:00+02",
        "thumbnail": "https://i.ytimg.com/vi_webp/VPar831Vhts/maxresdefault.webp",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=VPar831Vhts",
        "original_url": "https://www.youtube.com/watch?v=VPar831Vhts"
    },
    {
        "index": 29,
        "title": "My Journey into Buzzword Bingo",
        "url": "https://www.youtube.com/watch?v=C8sIbRTeAgg",
        "video_id": "C8sIbRTeAgg",
        "uploader": "PyCon South Africa",
        "uploader_id": "@pyconza",
        "uploader_url": "https://www.youtube.com/@pyconza",
        "upload_date": "20200213",
        "duration": 1542,
        "view_count": 43,
        "like_count": 0,
        "comment_count": null,
        "tags": [
            "python",
            "PyCon",
            "PyConZA"
        ],
        "categories": [
            "Science & Technology"
        ],
        "description": "by Sibulele Hlongwane\n\nAt: PyConZA 2019\n\nThere has been quite a bit of buzz around being a Data Scientist lately, especially in the media. And because Data Science doesn't exist on its own. It is always followed by an influx of more buzzwords such as 4th industrial revolution, AI, Machine Learning, Augmented Reality, Digital Disruption, Big Data. And the list goes on and on (Yes. That is a buzzword counter of six).\n\nI studied Computer Science and decided to follow a Data Science route straight out of university. I unknowingly and voluntarily walked right into this world full of data and buzzwords at every turn.  I have managed to survive this long so far and I would like to share my journey about my path.\n\nThis talk will cover:\n❮ul❯\n    ❮li❯Introduction to the world of Data Science❮/li❯\n❮/ul❯\n❮ul❯\n    ❮li❯My Expectations of the field❮/li❯\n❮/ul❯\n❮ul❯\n    ❮li❯Typical Data Science Life Cycle Process❮/li❯\n❮/ul❯\n❮ul❯\n    ❮li❯My Data Science Toolbox❮/li❯\n❮/ul❯\n❮ul❯\n    ❮li❯Skill sets & Learning Paths❮/li❯\n❮/ul❯\n❮ul❯\n    ❮li❯Ignoring the hype and busting some myths ❮/li❯\n❮/ul❯\n\nThis talk is aimed at people who are interested in getting into Data Science,or are at an entry level and who would like to know about the journey of a fellow Data Scientist.\n\nSide note: Make sure to switch on your buzzword counters at the beginning of the talk.\n\nRoom: Ballroom\nScheduled start: 2019-10-10 11:45:00+02",
        "thumbnail": "https://i.ytimg.com/vi_webp/C8sIbRTeAgg/maxresdefault.webp",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=C8sIbRTeAgg",
        "original_url": "https://www.youtube.com/watch?v=C8sIbRTeAgg"
    },
    {
        "index": 30,
        "title": "Launching a library(API client) in total darkness",
        "url": "https://www.youtube.com/watch?v=vS72A68kH_E",
        "video_id": "vS72A68kH_E",
        "uploader": "PyCon South Africa",
        "uploader_id": "@pyconza",
        "uploader_url": "https://www.youtube.com/@pyconza",
        "upload_date": "20200213",
        "duration": 2055,
        "view_count": 37,
        "like_count": 1,
        "comment_count": null,
        "tags": [
            "python",
            "PyCon",
            "PyConZA"
        ],
        "categories": [
            "Science & Technology"
        ],
        "description": "by Ronald Maravanyika\n\nAt: PyConZA 2019\n\nThis talk will detail how one can create a python API client with limited resources.It's based on my personal experience of having to create an API client to be used by over a thousand users. The talk accommodates all levels of developers, final year students may also find this talk interesting.\n\nWe will cover the basics from what is an API client, why we need it, then we will look at common methods of using APIs then l will quickly show you how to create the API client and then we will look at challenges that l faced in terms of shortage of resources as well as the solutions. We will lastly look at how to document the library while writing code.\n\nThis talk isn't about the specific details of developing a client for a particular API, but a more general talk about the tools and techniques l used in developing an API client with limited resources.\n\nRoom: Boundary Room\nScheduled start: 2019-10-10 11:00:00+02",
        "thumbnail": "https://i.ytimg.com/vi_webp/vS72A68kH_E/maxresdefault.webp",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=vS72A68kH_E",
        "original_url": "https://www.youtube.com/watch?v=vS72A68kH_E"
    },
    {
        "index": 31,
        "title": "Thursday Lightning Talks",
        "url": "https://www.youtube.com/watch?v=e1AzQWAvv3A",
        "video_id": "e1AzQWAvv3A",
        "uploader": "PyCon South Africa",
        "uploader_id": "@pyconza",
        "uploader_url": "https://www.youtube.com/@pyconza",
        "upload_date": "20200213",
        "duration": 1809,
        "view_count": 36,
        "like_count": 2,
        "comment_count": null,
        "tags": [
            "python",
            "PyCon",
            "PyConZA"
        ],
        "categories": [
            "Science & Technology"
        ],
        "description": "by \n\nAt: PyConZA 2019\nRoom: Ballroom\nScheduled start: 2019-10-10 15:30:00+02",
        "thumbnail": "https://i.ytimg.com/vi_webp/e1AzQWAvv3A/maxresdefault.webp",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=e1AzQWAvv3A",
        "original_url": "https://www.youtube.com/watch?v=e1AzQWAvv3A"
    },
    {
        "index": 32,
        "title": "Making sense of Cape Town using NLP",
        "url": "https://www.youtube.com/watch?v=wSlGEPt6gR4",
        "video_id": "wSlGEPt6gR4",
        "uploader": "PyCon South Africa",
        "uploader_id": "@pyconza",
        "uploader_url": "https://www.youtube.com/@pyconza",
        "upload_date": "20200213",
        "duration": 2337,
        "view_count": 34,
        "like_count": 0,
        "comment_count": null,
        "tags": [
            "python",
            "PyCon",
            "PyConZA"
        ],
        "categories": [
            "Science & Technology"
        ],
        "description": "by Gordon Inggs\n\nAt: PyConZA 2019\n\nIn this talk, I will describe how Natural Language Processing helped the City of Cape Town understand itself better. By doing so, I will hopefully illustrate how Machine Learning can be applied in the context of a large organisation, with pre-existing formal structures.\n\nSeveral months ago, I was asked to help identify City employees who perform \"data-intensive\" work. After several fruitless keyword searches across the City's formal job description data, we turned to the excellent spaCy NLP library to help make sense of the data. And spaCy quickly yielded useful results: understanding of human resource gaps, audience segmentation for internal communication purpose, identification of potential beta testers for new tools, and more.\n\nI will first describe how we embedded the semi-structured formal job descriptions into a vector space using spaCy's large English language model; secondly, how we then embedded phrases of interest, such as \"data\", into that same vector space. Once everything was in the same vector space, we used various distance measures to assess the \"relevance\" of the search phrases to the job description. It is these relevance measures that we used to understand the dynamics within the HR dataset.\n\nThis talk will appeal to anyone interested in how data science can find a place in a large public organisation. This talk also has practical value to anyone interested in doing a bit of NLP, but are unsure where to start.\n\nRoom: Ballroom\nScheduled start: 2019-10-11 11:00:00+02",
        "thumbnail": "https://i.ytimg.com/vi_webp/wSlGEPt6gR4/maxresdefault.webp",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=wSlGEPt6gR4",
        "original_url": "https://www.youtube.com/watch?v=wSlGEPt6gR4"
    },
    {
        "index": 33,
        "title": "From data science to scalable NLU and vision cloud service.",
        "url": "https://www.youtube.com/watch?v=g5ax1RYy70w",
        "video_id": "g5ax1RYy70w",
        "uploader": "PyCon South Africa",
        "uploader_id": "@pyconza",
        "uploader_url": "https://www.youtube.com/@pyconza",
        "upload_date": "20200213",
        "duration": 2353,
        "view_count": 24,
        "like_count": 0,
        "comment_count": null,
        "tags": [
            "python",
            "PyCon",
            "PyConZA"
        ],
        "categories": [
            "Science & Technology"
        ],
        "description": "by Bernardt Duvenhage\n\nAt: PyConZA 2019\n\nThe talk will show how (and why) we’ve built our own natural language understanding and machine vision cloud service. The service is used mostly for intelligent dialog agents and the production instances see 5M+ queries a month.\n\nThe core of the service is built with Python, NumPy, PyTorch, TensorFlow, OpenCV, TorchVision, scikit-learn and SQLAlchemy. We're undertaking to also build a framework within which machine comprehension models can be developed in isolation and have their own unit tests. The service and deployment related aspects (like dataset management, multi-tenancy and even the database interaction) are handled in a service layer that is well isolated from model development.\n\nThe cloud service is implemented with OpenAPI/Swagger & Connexion (Flask) to simplify development and maintenance. The connexion flask app is deployed using Gunicorn and we typically use NGINX as a reverse proxy and load balancer. The model DB is a shared PostgreSQL or Google CloudSQL DB. Everything is containerised and deployed on Kubernetes with Rancher.\n\nRoom: Ballroom\nScheduled start: 2019-10-11 13:30:00+02",
        "thumbnail": "https://i.ytimg.com/vi_webp/g5ax1RYy70w/maxresdefault.webp",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=g5ax1RYy70w",
        "original_url": "https://www.youtube.com/watch?v=g5ax1RYy70w"
    },
    {
        "index": 34,
        "title": "Closing Ceremony",
        "url": "https://www.youtube.com/watch?v=LUoR2omk7gg",
        "video_id": "LUoR2omk7gg",
        "uploader": "PyCon South Africa",
        "uploader_id": "@pyconza",
        "uploader_url": "https://www.youtube.com/@pyconza",
        "upload_date": "20200213",
        "duration": 930,
        "view_count": 17,
        "like_count": 0,
        "comment_count": null,
        "tags": [
            "python",
            "PyCon",
            "PyConZA"
        ],
        "categories": [
            "Science & Technology"
        ],
        "description": "by \n\nAt: PyConZA 2019\nRoom: Ballroom\nScheduled start: 2019-10-11 17:00:00+02",
        "thumbnail": "https://i.ytimg.com/vi_webp/LUoR2omk7gg/maxresdefault.webp",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=LUoR2omk7gg",
        "original_url": "https://www.youtube.com/watch?v=LUoR2omk7gg"
    },
    {
        "index": 35,
        "title": "Opening Ceremony",
        "url": "https://www.youtube.com/watch?v=j2FLbABDtuk",
        "video_id": "j2FLbABDtuk",
        "uploader": "PyCon South Africa",
        "uploader_id": "@pyconza",
        "uploader_url": "https://www.youtube.com/@pyconza",
        "upload_date": "20200213",
        "duration": 730,
        "view_count": 13,
        "like_count": 0,
        "comment_count": null,
        "tags": [
            "python",
            "PyCon",
            "PyConZA"
        ],
        "categories": [
            "Science & Technology"
        ],
        "description": "by \n\nAt: PyConZA 2019\nRoom: Ballroom\nScheduled start: 2019-10-10 09:00:00+02",
        "thumbnail": "https://i.ytimg.com/vi_webp/j2FLbABDtuk/maxresdefault.webp",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=j2FLbABDtuk",
        "original_url": "https://www.youtube.com/watch?v=j2FLbABDtuk"
    }
]