[
    {
        "index": 1,
        "title": "EuroPython 2024 — Opening Session",
        "url": "https://www.youtube.com/watch?v=ucWq9Cjg8bg",
        "video_id": "ucWq9Cjg8bg",
        "uploader": "EuroPython Conference",
        "uploader_id": "@EuroPythonConference",
        "uploader_url": "https://www.youtube.com/@EuroPythonConference",
        "upload_date": "20241002",
        "duration": 1472,
        "view_count": 1131,
        "like_count": 6,
        "comment_count": null,
        "tags": [
            "europython",
            "python",
            "conference"
        ],
        "categories": [
            "Science & Technology"
        ],
        "description": "[EuroPython 2024 — Forum Hall on 2024-07-10]\n\nhttps://ep2024.europython.eu/session/opening-session\n\n\rWelcome to EuroPython 2024.\n\n\rLet us welcome you officially and tell you all about what's going to await you in the upcoming days.\n\n00:00 *Welcome to EuroPython 2024*\n03:34: *Welcome from the EuroPython Society*\n05:09: *We are ALL VOLUNTEERS*\n15:00: *Code of Conduct*\n20:18: *Thanks to our sponsors*\n20:59: *Accessibility*\n21:20: *Enjoy our events*\n\nCorrection:\n13:06 George *Zisopoulos* is the name. We are so sorry we had a typo in your beautiful name, George!\n\n\n\r---\n\rThis work is licensed under a Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License: https://creativecommons.org/licenses/by-nc-sa/4.0/",
        "thumbnail": "https://i.ytimg.com/vi/ucWq9Cjg8bg/maxresdefault.jpg",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=ucWq9Cjg8bg",
        "original_url": "https://www.youtube.com/watch?v=ucWq9Cjg8bg"
    },
    {
        "index": 2,
        "title": "Embracing Python, AI, and Heuristics: Optimal Paths for Impactful Software — Carol Willing",
        "url": "https://www.youtube.com/watch?v=1ejP3wjIAeE",
        "video_id": "1ejP3wjIAeE",
        "uploader": "EuroPython Conference",
        "uploader_id": "@EuroPythonConference",
        "uploader_url": "https://www.youtube.com/@EuroPythonConference",
        "upload_date": "20241002",
        "duration": 2918,
        "view_count": 325,
        "like_count": 5,
        "comment_count": null,
        "tags": [
            "europython",
            "python",
            "conference"
        ],
        "categories": [
            "Science & Technology"
        ],
        "description": "[EuroPython 2024 — Forum Hall on 2024-07-10]\n\n\rEmbracing Python, AI, and Heuristics: Optimal Paths for Impactful Software by Carol Willing\n\rhttps://ep2024.europython.eu/session/embracing-python-ai-and-heuristics-optimal-paths-for-impactful-software\n\n\rToday's rapidly evolving software landscape requires agile and informed decision-making. This keynote will highlight the powerful combination of Python, Artificial Intelligence (AI), and heuristics for enabling dynamic decision-making processes.\n\n\rWe will explore the strengths of Python as a versatile language, the potential of AI for intelligent decision support, and the value of heuristics derived from real-world experience. By embracing this synergistic trio, developers can navigate complex challenges, adapt to changing requirements, and make decisions that drive successful software outcomes.\n\n\rThrough practical examples and insights, attendees will gain a deeper understanding of how to leverage Python, AI, and heuristics effectively, striking the right balance between technological innovation and tried-and-true techniques. Whether you're a seasoned developer or just starting your journey, this keynote will equip you with the tools and mindset to embrace agility and make informed decisions that propel your software projects forward.\n\n\n\r---\n\rThis work is licensed under a Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License: https://creativecommons.org/licenses/by-nc-sa/4.0/",
        "thumbnail": "https://i.ytimg.com/vi/1ejP3wjIAeE/maxresdefault.jpg",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=1ejP3wjIAeE",
        "original_url": "https://www.youtube.com/watch?v=1ejP3wjIAeE"
    },
    {
        "index": 3,
        "title": "SPy (Static Python) lang: fast as C, Pythonic as Python — Antonio Cuni",
        "url": "https://www.youtube.com/watch?v=jrQy3xGjpsU",
        "video_id": "jrQy3xGjpsU",
        "uploader": "EuroPython Conference",
        "uploader_id": "@EuroPythonConference",
        "uploader_url": "https://www.youtube.com/@EuroPythonConference",
        "upload_date": "20241002",
        "duration": 2642,
        "view_count": 963,
        "like_count": 33,
        "comment_count": null,
        "tags": [
            "europython",
            "python",
            "conference"
        ],
        "categories": [
            "Science & Technology"
        ],
        "description": "[EuroPython 2024 — Forum Hall on 2024-07-10]\n\n\rSPy (Static Python) lang: fast as C, Pythonic as Python by Antonio Cuni\n\rhttps://ep2024.europython.eu/session/spy-static-python-lang-fast-as-c-pythonic-as-python\n\n\rSPy is a brand new statically typed variant of Python which aim to get performance comparable to system languages such as C and C++, while preserving the \"Pythonic feeling\" of the language.\n\n\rThe main idea behind SPy is that \"modern Python\" is actually a subset of Python:\n\n\r  - many of the most dynamic features of the language are considered bad practice and actively discouraged;\n\n\r  - the alway-increasingly adoption of typing leads to codebases which are largerly statically typed.\n\n\rHowever, these rules are not enforced by the language, and there are cases in which \"breaking the rules\" is actually useful and make the code easier/better/faster.\n\n\rFrom the point of view of language implementors, the VM cannot easily take advantage of the \"mostly static\" nature of programs because it has always to be ready for the generic case.\n\n\rSPy tries to reconcile these two sides:\n\n\r  - it uses a static type system which is designed specifically for safety and performance;\n\n\r  - the vast majority of \"dynamic\" feature of Python (like decorators, metaclasses, `__special_methods__`, ...) can be used at zero cost, since they are resolved at compile time by using meta-programming and partial evaluation techniques.\n\n\rThis talk will present in the details the ideas behind SPy and its current status.\n\n\n\r---\n\rThis work is licensed under a Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License: https://creativecommons.org/licenses/by-nc-sa/4.0/",
        "thumbnail": "https://i.ytimg.com/vi/jrQy3xGjpsU/maxresdefault.jpg",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=jrQy3xGjpsU",
        "original_url": "https://www.youtube.com/watch?v=jrQy3xGjpsU"
    },
    {
        "index": 4,
        "title": "FastAPI Internals — Marcelo Trylesinski",
        "url": "https://www.youtube.com/watch?v=QcRq3F8FpSg",
        "video_id": "QcRq3F8FpSg",
        "uploader": "EuroPython Conference",
        "uploader_id": "@EuroPythonConference",
        "uploader_url": "https://www.youtube.com/@EuroPythonConference",
        "upload_date": "20241002",
        "duration": 1724,
        "view_count": 873,
        "like_count": 18,
        "comment_count": null,
        "tags": [
            "europython",
            "python",
            "conference"
        ],
        "categories": [
            "Science & Technology"
        ],
        "description": "[EuroPython 2024 — Forum Hall on 2024-07-10]\n\n\rFastAPI Internals by Marcelo Trylesinski\n\rhttps://ep2024.europython.eu/session/fastapi-internals\n\n\rFastAPI became one of the most web frameworks in Python. It has an amazing documentation, and easy to use API, which made it very popular. It's easy to start, and as a developer you have a lot of power on what you can do. But... How does it work internally?\n\n\rIn this talk, we will explore the internals of FastAPI. We'll explore the dependency injection system, what are the benefits, and limitations. We'll also see how the routing system works, when the middleware stack runs, how the request and response are handled in detail, how the OpenAPI schema is generated, and the differences between async and non-async endpoints, and how WebSockets fit in the whole picture. Furthermore, we'll also see how the dependencies Pydantic and Starlette help FastAPI on its job.\n\n\rAt the end of this talk, the attendee will understand what's underneath of this very popular package.\n\n\n\r---\n\rThis work is licensed under a Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License: https://creativecommons.org/licenses/by-nc-sa/4.0/",
        "thumbnail": "https://i.ytimg.com/vi/QcRq3F8FpSg/maxresdefault.jpg",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=QcRq3F8FpSg",
        "original_url": "https://www.youtube.com/watch?v=QcRq3F8FpSg"
    },
    {
        "index": 5,
        "title": "Demystify Python Types for PEP 729 — Kir Chou",
        "url": "https://www.youtube.com/watch?v=rQur7QphEIw",
        "video_id": "rQur7QphEIw",
        "uploader": "EuroPython Conference",
        "uploader_id": "@EuroPythonConference",
        "uploader_url": "https://www.youtube.com/@EuroPythonConference",
        "upload_date": "20241002",
        "duration": 2609,
        "view_count": 583,
        "like_count": 9,
        "comment_count": null,
        "tags": [
            "europython",
            "python",
            "conference"
        ],
        "categories": [
            "Science & Technology"
        ],
        "description": "[EuroPython 2024 — Forum Hall on 2024-07-10]\n\n\rDemystify Python Types for PEP 729 by Kir Chou\n\rhttps://ep2024.europython.eu/session/demystify-python-types-for-pep-729\n\n\r[PEP 729 – Typing governance process](https://peps.python.org/pep-0729/) proposes a new way to govern the Python type system. The PEP was endorsed by maintainers of all major type checkers. This talk aims to guide the audience to understand the reason more deeply of this new process after demystifying Python types.\n\n\rIn this talk, the speaker will demystify python types from their theory to practice along with Python type systems. The theory includes the type theory by [Per Martin-Löf](https://en.wikipedia.org/wiki/Per_Martin-L%C3%B6f)'s and [gradual typing by Jeremy Siek](http://scheme2006.cs.uchicago.edu/13-siek.pdf), all theories will be explained with the Python code in the real world. The type system targets all major type checkers and CPython. The comparison will be based on the research: [Python 3 Types in the Wild: A Tale of Two Type Systems](https://www.cs.rpi.edu/~milanova/docs/dls2020.pdf). The practice covers how a new specification is done in type systems. In addition, the speaker will share their thoughts about the challenges behind the implementation, and connect the answer to the reason for the PEP 729.\n\n\n\r---\n\rThis work is licensed under a Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License: https://creativecommons.org/licenses/by-nc-sa/4.0/",
        "thumbnail": "https://i.ytimg.com/vi/rQur7QphEIw/maxresdefault.jpg",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=rQur7QphEIw",
        "original_url": "https://www.youtube.com/watch?v=rQur7QphEIw"
    },
    {
        "index": 6,
        "title": "Writing Python like it's Rust - more robust code with type hints — Jakub Beránek",
        "url": "https://www.youtube.com/watch?v=OFRLKWacOoA",
        "video_id": "OFRLKWacOoA",
        "uploader": "EuroPython Conference",
        "uploader_id": "@EuroPythonConference",
        "uploader_url": "https://www.youtube.com/@EuroPythonConference",
        "upload_date": "20241002",
        "duration": 1685,
        "view_count": 1021,
        "like_count": 53,
        "comment_count": null,
        "tags": [
            "europython",
            "python",
            "conference"
        ],
        "categories": [
            "Science & Technology"
        ],
        "description": "[EuroPython 2024 — Forum Hall on 2024-07-10]\n\n\rWriting Python like it's Rust - more robust code with type hints by Jakub Beránek\n\rhttps://ep2024.europython.eu/session/writing-python-like-it-s-rust-more-robust-code-with-type-hints\n\n\rUsing type hints in Python has many advantages, some of which might not be obvious at first. We will see that it allows us to explicitly encode invariants in our code, which reduces the amount of tests that we need to write, it improves development speed and maintainability, and perhaps most importantly, it can give us more confidence that our code does what we expect it to do.\n\n\rWe will also go through code examples that will show us how to leverage typing in Python to design APIs that cannot be easily misused, to create robust programs that we can trust.\n\n\rAudience members are expected to be able to read and understand Python code.\n\n\n\r---\n\rThis work is licensed under a Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License: https://creativecommons.org/licenses/by-nc-sa/4.0/",
        "thumbnail": "https://i.ytimg.com/vi/OFRLKWacOoA/maxresdefault.jpg",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=OFRLKWacOoA",
        "original_url": "https://www.youtube.com/watch?v=OFRLKWacOoA"
    },
    {
        "index": 7,
        "title": "Demystifying AsyncIO: Building Your Own Event Loop in Python — Arthur Pastel",
        "url": "https://www.youtube.com/watch?v=Ww2HBNpu98g",
        "video_id": "Ww2HBNpu98g",
        "uploader": "EuroPython Conference",
        "uploader_id": "@EuroPythonConference",
        "uploader_url": "https://www.youtube.com/@EuroPythonConference",
        "upload_date": "20241002",
        "duration": 1607,
        "view_count": 3254,
        "like_count": 107,
        "comment_count": null,
        "tags": [
            "europython",
            "python",
            "conference"
        ],
        "categories": [
            "Science & Technology"
        ],
        "description": "[EuroPython 2024 — Forum Hall on 2024-07-10]\n\n\rDemystifying AsyncIO: Building Your Own Event Loop in Python by Arthur Pastel\n\rhttps://ep2024.europython.eu/session/demystifying-asyncio-building-your-own-event-loop-in-python\n\n\r**AsyncIO** has emerged as a vital tool in Python's ecosystem, particularly in web development, IO-bound tasks, and network programming. However, its internal mechanics often remain obscure, even to seasoned Python developers. This talk aims to demystify AsyncIO by guiding you through creating your own event loop in Python, culminating in running a FastAPI application with it.\n\n\rIn this talk, we’ll build an event loop from scratch in Python, capable of running an HTTP server through a FastAPI application.\n\n\r**Plan:**\n\n\r- **Introduction to AsyncIO**\n\r- **Core Concepts:** Deep dive into Event loop, Futures, Tasks, and coroutines\n\r- **Hands-On Building:** Constructing an event loop from scratch\n\r    - Scheduling callbacks\n\r    - Executing tasks and coroutines\n\r    - Handling network calls\n\r- **Practical Application:** Running a FastAPI HTTP server with our loop\n\r- **Performance Insights:** Comparing our event loop with the fastest ones\n\n\rBy the end of this talk, you'll be able to understand the internal workings of AsyncIO and create a basic event loop capable of running a FastAPI application.\n\n\n\r---\n\rThis work is licensed under a Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License: https://creativecommons.org/licenses/by-nc-sa/4.0/",
        "thumbnail": "https://i.ytimg.com/vi/Ww2HBNpu98g/maxresdefault.jpg",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=Ww2HBNpu98g",
        "original_url": "https://www.youtube.com/watch?v=Ww2HBNpu98g"
    },
    {
        "index": 8,
        "title": "Invent with PyScript — Nicholas Tollervey, Joshua Lowe",
        "url": "https://www.youtube.com/watch?v=ukroW9F2cGs",
        "video_id": "ukroW9F2cGs",
        "uploader": "EuroPython Conference",
        "uploader_id": "@EuroPythonConference",
        "uploader_url": "https://www.youtube.com/@EuroPythonConference",
        "upload_date": "20241002",
        "duration": 1746,
        "view_count": 1046,
        "like_count": 36,
        "comment_count": null,
        "tags": [
            "europython",
            "python",
            "conference"
        ],
        "categories": [
            "Science & Technology"
        ],
        "description": "[EuroPython 2024 — Forum Hall on 2024-07-10]\n\n\rInvent with PyScript by Nicholas Tollervey, Joshua Lowe\n\rhttps://ep2024.europython.eu/session/invent-with-pyscript\n\n\r_[PyScript](https://pyscript.net/) is a platform for Python in the browser_, enabled by [web-assembly](https://webassembly.org/). It brings the rich ecosystems of [CPython](https://python.org/) and [MicroPython](https://micropython.org) to the web. _[Invent](https://invent-framework.github.io/) is a PyScript based app creation framework with complementary browser based tooling_ and is designed to be easy to learn and use, no matter if you're a beginner or expert.\n\n\rThis talk introduces Invent, explains how it was built on top of PyScript and describes the design and architecture decisions made to ensure Python and the browser complement each other. Invent apps work anywhere a browser works and by the end of this presentation you'll be armed with all you need to know to build, deploy and extend native Python based applications running atop PyScript on all manner of platforms (mobile, tablet, laptop, desktop, [web-enabled fridge](https://www.standard.co.uk/shopping/esbest/home-garden/kitchen-appliances/best-smart-fridges-b1002542.html), [car](https://www.youtube.com/watch?v=GkhbN9B9bbs), point of sale terminal... you name it, so long as there's a browser!).\n\n\rThis talk will be fast-paced, technical, creative, full of possibilities, may include geese 🪿, _and will be a lot of geeky fun_. \n\n\rBy the end you'll ask yourself, \"I wonder what I can invent?\" and go create cool stuff in minutes.\n\n\n\r---\n\rThis work is licensed under a Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License: https://creativecommons.org/licenses/by-nc-sa/4.0/",
        "thumbnail": "https://i.ytimg.com/vi/ukroW9F2cGs/maxresdefault.jpg",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=ukroW9F2cGs",
        "original_url": "https://www.youtube.com/watch?v=ukroW9F2cGs"
    },
    {
        "index": 9,
        "title": "How to deliver 3x faster with effective API design — Michal Cyprian",
        "url": "https://www.youtube.com/watch?v=yLaz5k89De4",
        "video_id": "yLaz5k89De4",
        "uploader": "EuroPython Conference",
        "uploader_id": "@EuroPythonConference",
        "uploader_url": "https://www.youtube.com/@EuroPythonConference",
        "upload_date": "20241002",
        "duration": 1757,
        "view_count": 1335,
        "like_count": 29,
        "comment_count": null,
        "tags": [
            "europython",
            "python",
            "conference"
        ],
        "categories": [
            "Science & Technology"
        ],
        "description": "[EuroPython 2024 — Forum Hall on 2024-07-10]\n\n\rHow to deliver 3x faster with effective API design by Michal Cyprian\n\rhttps://ep2024.europython.eu/session/how-to-deliver-3x-faster-with-effective-api-design\n\n\rIn today's fast-paced world, the ability to deliver new features quickly is crucial for product-oriented companies. In this talk, we'll dive into architectural patterns that optimize the delivery of multiple client implementations in complex client-server architectures.\n\n\rThe advent of the mobile age has dramatically altered the landscape of typical client-server models. Delivering a new feature on multiple platforms is complicated and time-consuming because it requires several engineering teams to communicate extensively and separately code and test the same feature in different languages for each platform. Let's see how architectural patterns known as Backend for Frontend (BFF) and Server-driven UI can help with solving these challenges and what the limitations are. We'll explore Python optimizations, caching strategies, and SQLAlchemy preloading techniques, which were crucial to the success of the case study I will share.\n\n\rThis talk aims to provide you with an overview of useful architectural patterns, insights on how to implement and optimize them in Python, and strategies to make your product managers happy by shortening your time to production.\n\n\n\r---\n\rThis work is licensed under a Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License: https://creativecommons.org/licenses/by-nc-sa/4.0/",
        "thumbnail": "https://i.ytimg.com/vi/yLaz5k89De4/maxresdefault.jpg",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=yLaz5k89De4",
        "original_url": "https://www.youtube.com/watch?v=yLaz5k89De4"
    },
    {
        "index": 10,
        "title": "Deciphering the mysteries of human genomes — Anna Přistoupilová",
        "url": "https://www.youtube.com/watch?v=WX-ALIWDvKU",
        "video_id": "WX-ALIWDvKU",
        "uploader": "EuroPython Conference",
        "uploader_id": "@EuroPythonConference",
        "uploader_url": "https://www.youtube.com/@EuroPythonConference",
        "upload_date": "20241002",
        "duration": 2473,
        "view_count": 158,
        "like_count": 1,
        "comment_count": null,
        "tags": [
            "europython",
            "python",
            "conference"
        ],
        "categories": [
            "Science & Technology"
        ],
        "description": "[EuroPython 2024 — Forum Hall on 2024-07-10]\n\n\rDeciphering the mysteries of human genomes by Anna Přistoupilová\n\rhttps://ep2024.europython.eu/session/deciphering-the-mysteries-of-human-genomes\n\n\rHave you ever wondered why we are the way we are? Why some individuals develop diseases while others remain healthy? And what does Python have to do with all of this? Join this talk in which we will explore the interface between biology, technology and medicine, in the context of the research of rare genetic diseases. Learn what the Moore’s law has to do with advances in genetics and medicine, or why bigger is not always better.\n\n\n\r---\n\rThis work is licensed under a Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License: https://creativecommons.org/licenses/by-nc-sa/4.0/",
        "thumbnail": "https://i.ytimg.com/vi/WX-ALIWDvKU/maxresdefault.jpg",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=WX-ALIWDvKU",
        "original_url": "https://www.youtube.com/watch?v=WX-ALIWDvKU"
    },
    {
        "index": 11,
        "title": "EuroPython 2024 — Lightning talks Wednesday",
        "url": "https://www.youtube.com/watch?v=CgbpaoikjLs",
        "video_id": "CgbpaoikjLs",
        "uploader": "EuroPython Conference",
        "uploader_id": "@EuroPythonConference",
        "uploader_url": "https://www.youtube.com/@EuroPythonConference",
        "upload_date": "20241002",
        "duration": 2671,
        "view_count": 170,
        "like_count": 3,
        "comment_count": null,
        "tags": [
            "europython",
            "python",
            "conference"
        ],
        "categories": [
            "Science & Technology"
        ],
        "description": "[EuroPython 2024 — Forum Hall on 2024-07-10]\n\n\rLightning talks Wednesday\n\rhttps://ep2024.europython.eu/session/lightning-talks-wednesday\n\n\rEnjoy Wednesday's lightning talks. Short talks about everything by everyone. Hosted by Jodie Burchell and Rodrigo Girao Serrao:\n\n00:00 *Welcome to Wednesday's Lightning Talks*\n00:46 *EuroPython Game Tournament Announcement* — Neil Vaytet\n04:31 *Czech wines* — Jacob Hallén\n09:07 *How to make a Python meeting with friends* — Inácio Medeiros\n15:16 *Make cron expressions readable again* — Fabrizio Damicelli\n20:15  *Searching For Celebrities With Your Face* — Mark Smith\n27:33 *Named constructors* — Austin Bingham\n32:16 *A backend developer’s entry point to the UI* — Luke Purnell\n38:05 *The Art of Puzzle Solving* — Olga Vinogradova\n\n\r---\n\rThis work is licensed under a Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License: https://creativecommons.org/licenses/by-nc-sa/4.0/",
        "thumbnail": "https://i.ytimg.com/vi/CgbpaoikjLs/maxresdefault.jpg",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=CgbpaoikjLs",
        "original_url": "https://www.youtube.com/watch?v=CgbpaoikjLs"
    },
    {
        "index": 12,
        "title": "From Text to Context: How We Introduced a Modern Hybrid Search — Ansgar Gruene, Dharin Shah",
        "url": "https://www.youtube.com/watch?v=PkDqN4ssZw4",
        "video_id": "PkDqN4ssZw4",
        "uploader": "EuroPython Conference",
        "uploader_id": "@EuroPythonConference",
        "uploader_url": "https://www.youtube.com/@EuroPythonConference",
        "upload_date": "20241002",
        "duration": 2773,
        "view_count": 193,
        "like_count": 3,
        "comment_count": null,
        "tags": [
            "europython",
            "python",
            "conference"
        ],
        "categories": [
            "Science & Technology"
        ],
        "description": "[EuroPython 2024 — North Hall on 2024-07-10]\n\n\rFrom Text to Context: How We Introduced a Modern Hybrid Search by Ansgar Gruene, Dharin Shah\n\rhttps://ep2024.europython.eu/session/from-text-to-context-how-we-introduced-a-modern-hybrid-search\n\n\rCustomers only buy the products they are able to find. Improving the search functions on the website is crucial for user-friendliness.\n\n\rIn our talk we present the lessons learnt from improving the search of our global online marketplace, which sells 20 million products per year. We moved from a traditional word-match based approach (BM25) to a modern hybrid solution that combines BM25 with a semantic vector model, an open-source language model that we fine-tuned to our domain.\n\n\rWith numerous references to current literature, we will explain how we designed our new system and solved the multiple challenges we encountered on both the ML and engineering side (data pipeline encoding documents, live service encoding queries, integration with search engine). Our system is based on OpenSearch, the lessons can be applied to other search engines as well.\n\n\rIn particular the presentation will cover:\n\r- Status and Short-Comings of our old Search\n\r- Introduction of Hybrid Search\n\r- Our Machine Learning Solution\n\r- Architecture and Implementation (with special consideration of latency)\n\r- Learnings and Next Steps\n\n\n\r---\n\rThis work is licensed under a Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License: https://creativecommons.org/licenses/by-nc-sa/4.0/",
        "thumbnail": "https://i.ytimg.com/vi/PkDqN4ssZw4/maxresdefault.jpg",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=PkDqN4ssZw4",
        "original_url": "https://www.youtube.com/watch?v=PkDqN4ssZw4"
    },
    {
        "index": 13,
        "title": "Building Scalable Multimodal Search Applications with Python — Zain Hasan",
        "url": "https://www.youtube.com/watch?v=LQHyyOsT61k",
        "video_id": "LQHyyOsT61k",
        "uploader": "EuroPython Conference",
        "uploader_id": "@EuroPythonConference",
        "uploader_url": "https://www.youtube.com/@EuroPythonConference",
        "upload_date": "20241002",
        "duration": 1511,
        "view_count": 173,
        "like_count": 3,
        "comment_count": null,
        "tags": [
            "europython",
            "python",
            "conference"
        ],
        "categories": [
            "Science & Technology"
        ],
        "description": "[EuroPython 2024 — North Hall on 2024-07-10]\n\n\rBuilding Scalable Multimodal Search Applications with Python by Zain Hasan\n\rhttps://ep2024.europython.eu/session/building-scalable-multimodal-search-applications-with-python\n\n\rMany real-world problems are inherently multimodal, from the communicative modalities humans use such as spoken language and gestures to the force, sensory, and visual sensors used in robotics. For machine learning models to address these problems and interact more naturally and wholistically with the world around them and ultimately be more general and powerful reasoning engines, we need them to understand data across all of its corresponding images, video, text, audio, and tactile representations.\n\n\rIn this talk, Zain Hasan will discuss how we can use open-source multimodal embedding models in conjunction with large generative multimodal models that can that can see, hear, read, and feel data(!), to perform cross-modal search(searching audio with images, videos with text etc.) and multimodal retrieval augmented generation (MM-RAG) at the billion-object scale with the help of open source vector databases. I will also demonstrate, with live code demos, how being able to perform this cross-modal retrieval in real-time can enables users to use LLMs that can reason over their enterprise multimodal data. This talk will revolve around how we can scale the usage of multimodal embedding and generative models in production.\n\n\n\r---\n\rThis work is licensed under a Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License: https://creativecommons.org/licenses/by-nc-sa/4.0/",
        "thumbnail": "https://i.ytimg.com/vi/LQHyyOsT61k/maxresdefault.jpg",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=LQHyyOsT61k",
        "original_url": "https://www.youtube.com/watch?v=LQHyyOsT61k"
    },
    {
        "index": 14,
        "title": "Deconstructing the text embedding models — Kacper Łukawski",
        "url": "https://www.youtube.com/watch?v=Lha_QCkXxm0",
        "video_id": "Lha_QCkXxm0",
        "uploader": "EuroPython Conference",
        "uploader_id": "@EuroPythonConference",
        "uploader_url": "https://www.youtube.com/@EuroPythonConference",
        "upload_date": "20241002",
        "duration": 2666,
        "view_count": 165,
        "like_count": 3,
        "comment_count": null,
        "tags": [
            "europython",
            "python",
            "conference"
        ],
        "categories": [
            "Science & Technology"
        ],
        "description": "[EuroPython 2024 — North Hall on 2024-07-10]\n\n\rDeconstructing the text embedding models by Kacper Łukawski\n\rhttps://ep2024.europython.eu/session/deconstructing-the-text-embedding-models\n\n\rSelecting the optimal text embedding model is often guided by benchmarks such as the Massive Text Embedding Benchmark (MTEB). While choosing the best model from the leaderboard is a common practice, it may not always align perfectly with the unique characteristics of your specific dataset. This approach overlooks a crucial yet frequently underestimated element - the tokenizer.\n\n\rWe will delve deep into the tokenizer's fundamental role, shedding light on its operations and introducing straightforward techniques to assess whether a particular model is suited to your data based solely on its tokenizer. We will explore the significance of the tokenizer in the fine-tuning process of embedding models and discuss strategic approaches to optimize its effectiveness.\n\n\n\r---\n\rThis work is licensed under a Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License: https://creativecommons.org/licenses/by-nc-sa/4.0/",
        "thumbnail": "https://i.ytimg.com/vi/Lha_QCkXxm0/maxresdefault.jpg",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=Lha_QCkXxm0",
        "original_url": "https://www.youtube.com/watch?v=Lha_QCkXxm0"
    },
    {
        "index": 15,
        "title": "One analysis a day keeps anomalies away! — Madalina Ciortan",
        "url": "https://www.youtube.com/watch?v=rvGgYMotoH0",
        "video_id": "rvGgYMotoH0",
        "uploader": "EuroPython Conference",
        "uploader_id": "@EuroPythonConference",
        "uploader_url": "https://www.youtube.com/@EuroPythonConference",
        "upload_date": "20241002",
        "duration": 1685,
        "view_count": 184,
        "like_count": 6,
        "comment_count": null,
        "tags": [
            "europython",
            "python",
            "conference"
        ],
        "categories": [
            "Science & Technology"
        ],
        "description": "[EuroPython 2024 — North Hall on 2024-07-10]\n\n\rOne analysis a day keeps anomalies away! by Madalina Ciortan\n\rhttps://ep2024.europython.eu/session/one-analysis-a-day-keeps-anomalies-away\n\n\rEver felt like you’re navigating a data jungle, battling to survive the unexpected production problems that throw you off track? Well, you’re not alone. Staying on top of your data's health is not just smart – it's crucial. In this talk, I will share some Python tricks (methods and libraries) that you can use to defend from those wild data problems. Because let's face it, being able to effectively monitor your data, spot sneaky anomalies, and get to the bottom of them is the key to unlocking a buried treasure.\n\n\rFirst, I'll take you through the ins and outs of observability, highlighting its importance for managing both the inputs and outputs of machine learning models, as well as for overall data quality. We'll explore a range of techniques to detect anomalies, with a focus on multivariate time series data. We'll also cover how we can keep this process as computationally efficient as possible.\n\n\rBut we won't stop at just finding these anomalies: we're on a mission to chase them down to their lair! The second part of the talk will equip you with the detective skills to perform root cause analysis and extract as much insights as possible. These discoveries can be an eye opener and the first step towards new projects and strategies. Next, we will also tackle distinguishing real anomalies from data evolution (or drift) and set up effective monitoring strategies to keep your data clean and insightful.\n\n\rIf your interests lie in machine learning or you're simply keen on data quality, join me as we set off to unravel the mysteries of data observability. Let's learn how to keep data problems in check and when life gives you anomalies, turn them into business opportunities!\n\n\n\r---\n\rThis work is licensed under a Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License: https://creativecommons.org/licenses/by-nc-sa/4.0/",
        "thumbnail": "https://i.ytimg.com/vi/rvGgYMotoH0/maxresdefault.jpg",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=rvGgYMotoH0",
        "original_url": "https://www.youtube.com/watch?v=rvGgYMotoH0"
    },
    {
        "index": 16,
        "title": "From Pandas to production: ELT with dlt — Violetta Mishechkina, Adrian Brudaru",
        "url": "https://www.youtube.com/watch?v=gevxmu5PVu8",
        "video_id": "gevxmu5PVu8",
        "uploader": "EuroPython Conference",
        "uploader_id": "@EuroPythonConference",
        "uploader_url": "https://www.youtube.com/@EuroPythonConference",
        "upload_date": "20241002",
        "duration": 1643,
        "view_count": 290,
        "like_count": 7,
        "comment_count": null,
        "tags": [
            "europython",
            "python",
            "conference"
        ],
        "categories": [
            "Science & Technology"
        ],
        "description": "[EuroPython 2024 — North Hall on 2024-07-10]\n\n\rFrom Pandas to production: ELT with dlt by Violetta Mishechkina, Adrian Brudaru\n\rhttps://ep2024.europython.eu/session/from-pandas-to-production-elt-with-dlt\n\n\rWe created the “data load tool” (dlt), an open-source Python library, to bridge the gap between data engineers and data scientists. In this talk you will learn about how dlt can help you overcome typical roadblocks in your data science workflows, and how it streamlines the transition from data exploration to production. We will also discuss the pains of maintaining data pipelines and how dlt can help you to avoid common engineering headaches. \n\n\rJoin us to learn best practices around data handling and managing failures with real-life examples!\n\n\n\r---\n\rThis work is licensed under a Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License: https://creativecommons.org/licenses/by-nc-sa/4.0/",
        "thumbnail": "https://i.ytimg.com/vi/gevxmu5PVu8/maxresdefault.jpg",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=gevxmu5PVu8",
        "original_url": "https://www.youtube.com/watch?v=gevxmu5PVu8"
    },
    {
        "index": 17,
        "title": "Automate Your Kitchen with Python & Applied AI — Sena Sahin",
        "url": "https://www.youtube.com/watch?v=daplnlXBro0",
        "video_id": "daplnlXBro0",
        "uploader": "EuroPython Conference",
        "uploader_id": "@EuroPythonConference",
        "uploader_url": "https://www.youtube.com/@EuroPythonConference",
        "upload_date": "20241002",
        "duration": 1696,
        "view_count": 199,
        "like_count": 3,
        "comment_count": null,
        "tags": [
            "europython",
            "python",
            "conference"
        ],
        "categories": [
            "Science & Technology"
        ],
        "description": "[EuroPython 2024 — North Hall on 2024-07-10]\n\n\rAutomate Your Kitchen with Python & Applied AI by Sena Sahin\n\rhttps://ep2024.europython.eu/session/automate-your-kitchen-with-python-applied-ai\n\n\rEver wished you had a smart fridge that both lists and alerts you with ingredients you have, to waste less food and make the best use of what you have through ingredient-recipe match?\n\n\rBingo then that I'll share the story behind the creation of a Python-powered solution that maximizes ingredient usage, minimizes food waste by keeping track of your ingredients and streamlines the cooking process.😊💪\n\n\rLet's explore together, how snapping a photo of your fridge to generating recipe suggestions based on available ingredients, this project embodies the creativity, problem-solving, and excitement inherent in project development. \n\n\rJoin me as I recount the challenges, and lessons learned along the way, highlighting the transformative impact of project development on skill enhancement and contribution to boost the ways we think as developers. Whether you're a seasoned developer or a curious novice, this talk offers valuable insights into the joys and rewards of turning ideas into reality through coding.\n\n\n\r---\n\rThis work is licensed under a Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License: https://creativecommons.org/licenses/by-nc-sa/4.0/",
        "thumbnail": "https://i.ytimg.com/vi/daplnlXBro0/maxresdefault.jpg",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=daplnlXBro0",
        "original_url": "https://www.youtube.com/watch?v=daplnlXBro0"
    },
    {
        "index": 18,
        "title": "Impersonation in Data Engineering: No More Credentials in Your Code! — Marian Špilka",
        "url": "https://www.youtube.com/watch?v=PRp_ycnQV_o",
        "video_id": "PRp_ycnQV_o",
        "uploader": "EuroPython Conference",
        "uploader_id": "@EuroPythonConference",
        "uploader_url": "https://www.youtube.com/@EuroPythonConference",
        "upload_date": "20241002",
        "duration": 1461,
        "view_count": 142,
        "like_count": 1,
        "comment_count": null,
        "tags": [
            "europython",
            "python",
            "conference"
        ],
        "categories": [
            "Science & Technology"
        ],
        "description": "[EuroPython 2024 — North Hall on 2024-07-10]\n\n\rImpersonation in Data Engineering: No More Credentials in Your Code! by Marian Špilka\n\rhttps://ep2024.europython.eu/session/impersonation-in-data-engineering-no-more-credentials-in-your-code\n\n\rImagine stepping into your dream job as a python data developer, ready to dive into coding and show your talent, only to run into missing database credentials that leave you idle for days due to slow interdepartmental communications and permission issues. Frustrating, right?\n\n\rIn my talk, I'll showcase how we can make this whole process much easier. I’ll explain how using something called “Identity and Access Management” (IAM) lets everyone in a company, including machines, get to work without these annoying holdups. \n\n\rSurprised to hear that a machine like Airflow can have its own identity? I'll explain how we use something known as Workload Identity as a crucial part in this ecosystem integrating Airflow within our infrastructure.\n\n\rA central pillar of the discussion will be the role of impersonation in our setup - how it ties together various elements to enable a harmonious, secure, and maintainable infrastructure. The resulting architecture not only fosters an improved developer experience, faster project delivery, increased productivity and transparency, but also serves as a foundation for more advanced concepts such as data mesh implementation.\n\n\rJoin me in this talk to discover the synergy of IAM, Workload Identity, and impersonation. Let's equip you with a model that promotes easy team onboarding, transparent access management, and a secure, frustration-free workspace focused on delivery.\n\n\r  And for those interested in having their code perform consistently, whether on a local machine or in the cloud, I will share a small but powerful Docker hack to achieve things consistently no matter where your code is running.\n\n\n\r---\n\rThis work is licensed under a Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License: https://creativecommons.org/licenses/by-nc-sa/4.0/",
        "thumbnail": "https://i.ytimg.com/vi/PRp_ycnQV_o/maxresdefault.jpg",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=PRp_ycnQV_o",
        "original_url": "https://www.youtube.com/watch?v=PRp_ycnQV_o"
    },
    {
        "index": 19,
        "title": "How to sell a big refactor or rewrite to the business? — Ivett Ördög",
        "url": "https://www.youtube.com/watch?v=XLwZVRTSRGY",
        "video_id": "XLwZVRTSRGY",
        "uploader": "EuroPython Conference",
        "uploader_id": "@EuroPythonConference",
        "uploader_url": "https://www.youtube.com/@EuroPythonConference",
        "upload_date": "20241002",
        "duration": 2540,
        "view_count": 262,
        "like_count": 3,
        "comment_count": null,
        "tags": [
            "europython",
            "python",
            "conference"
        ],
        "categories": [
            "Science & Technology"
        ],
        "description": "[EuroPython 2024 — South Hall 2A on 2024-07-10]\n\n\rHow to sell a big refactor or rewrite to the business? by Ivett Ördög\n\rhttps://ep2024.europython.eu/session/how-to-sell-a-big-refactor-or-rewrite-to-the-business\n\n\rIn the world of software development, dealing with legacy code is often a necessary evil, especially for successful, fast-growing companies. The design stamina hypothesis suggests that legacy code is a sign of success, not failure. But how do we tackle this challenge smartly? This talk delves into the often-misunderstood realm of large-scale refactoring and rewrites, presenting a nuanced approach that contrasts with the traditional 'never rewrite' dogma.\n\n\rWe'll delve into real-world case studies where companies have successfully navigated their technical debt, uncovering crucial insights. Specifically, we will identify two key properties of these successful rewrites that can make or break your efforts. Understanding these properties enables us to strategically manage technical debt without losing our competitive edge. This session is not just a theoretical discussion but a practical guide, concluding with a decision-making quadrant to help determine the most effective approach for your team's refactor or rewrite projects. Whether you're leading a team through growth or coaching developers on best practices, this talk will equip you with a deeper understanding and actionable insights into one of the most critical aspects of software development.\n\n\n\r---\n\rThis work is licensed under a Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License: https://creativecommons.org/licenses/by-nc-sa/4.0/",
        "thumbnail": "https://i.ytimg.com/vi/XLwZVRTSRGY/maxresdefault.jpg",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=XLwZVRTSRGY",
        "original_url": "https://www.youtube.com/watch?v=XLwZVRTSRGY"
    },
    {
        "index": 20,
        "title": "Aggregating data in Django using database views — Mikuláš Poul",
        "url": "https://www.youtube.com/watch?v=nXHYIGCczmE",
        "video_id": "nXHYIGCczmE",
        "uploader": "EuroPython Conference",
        "uploader_id": "@EuroPythonConference",
        "uploader_url": "https://www.youtube.com/@EuroPythonConference",
        "upload_date": "20241002",
        "duration": 1786,
        "view_count": 369,
        "like_count": 13,
        "comment_count": null,
        "tags": [
            "europython",
            "python",
            "conference"
        ],
        "categories": [
            "Science & Technology"
        ],
        "description": "[EuroPython 2024 — South Hall 2A on 2024-07-10]\n\n\rAggregating data in Django using database views by Mikuláš Poul\n\rhttps://ep2024.europython.eu/session/aggregating-data-in-django-using-database-views\n\n\rAggregating information is a common Django task, but using the aggregate method can be a bit cumbersome and in the case of large database tables, pretty slow as well. I will introduce the library django-pgviews-redux, which adds first-class support for database views (with Postgres), making that task much simpler.\n\n\rWith that library, database views are wrapped around models, meaning you get many of the features you rely on with models for free, like querysets and filtering on those, admin, and any other feature which works with models. Defining a view is almost as simple as defining a model, by specifying what fields there are for the model and defining the SQL.\n\n\rThis talk will walk through examples of aggregation in Django, and then show how one could simplify those examples using the library. Finally, we will get to materialized views as well, which stores the aggregation almost like a table in the database, providing big speed improvements on aggregation on large tables.\n\n\n\r---\n\rThis work is licensed under a Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License: https://creativecommons.org/licenses/by-nc-sa/4.0/",
        "thumbnail": "https://i.ytimg.com/vi/nXHYIGCczmE/maxresdefault.jpg",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=nXHYIGCczmE",
        "original_url": "https://www.youtube.com/watch?v=nXHYIGCczmE"
    },
    {
        "index": 21,
        "title": "DFD(Documentation-First Development) with FastAPI — Taehyun Lee",
        "url": "https://www.youtube.com/watch?v=HKDbnpWsjv0",
        "video_id": "HKDbnpWsjv0",
        "uploader": "EuroPython Conference",
        "uploader_id": "@EuroPythonConference",
        "uploader_url": "https://www.youtube.com/@EuroPythonConference",
        "upload_date": "20241002",
        "duration": 2242,
        "view_count": 175,
        "like_count": 7,
        "comment_count": null,
        "tags": [
            "europython",
            "python",
            "conference"
        ],
        "categories": [
            "Science & Technology"
        ],
        "description": "[EuroPython 2024 — South Hall 2A on 2024-07-10]\n\n\rDFD(Documentation-First Development) with FastAPI by Taehyun Lee\n\rhttps://ep2024.europython.eu/session/dfd-documentation-first-development-with-fastapi\n\n\rMany software engineers, particularly web developers, recognize the critical importance of documentation for efficient collaboration. Yet, the challenge of maintaining up-to-date documentation remains a pervasive issue, often due to human errors such as failing to update documentation after changes in the codebase.\n\n\rThis presentation introduces the philosophy of Documentation-First Development (DFD), a methodology I advocate for that leverages the code-based OpenAPI documentation generation capabilities of the FastAPI framework. I will discuss methods to embody this philosophy, including the use of a sub-application pattern to segregate API documents and the application of generic types for crafting reusable custom response models. Additionally, I will address the limitations of traditional approaches to API documentation and demonstrate how FastAPI, in conjunction with Pydantic, offers a more effective solution by automatically keeping documentation synchronized with the code.\n\n\rThis presentation aims to enlighten attendees on the benefits of the FastAPI framework and provide practical insights into creating precise and well-maintained API documentation. It is designed for audiences interested in enhancing their documentation practices and those curious about the advantages of employing FastAPI for web development projects.\n\n\n\r---\n\rThis work is licensed under a Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License: https://creativecommons.org/licenses/by-nc-sa/4.0/",
        "thumbnail": "https://i.ytimg.com/vi/HKDbnpWsjv0/maxresdefault.jpg",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=HKDbnpWsjv0",
        "original_url": "https://www.youtube.com/watch?v=HKDbnpWsjv0"
    },
    {
        "index": 22,
        "title": "Zero Trust APIs with Python — Jose Haro Peralta",
        "url": "https://www.youtube.com/watch?v=CRaTRDknUkM",
        "video_id": "CRaTRDknUkM",
        "uploader": "EuroPython Conference",
        "uploader_id": "@EuroPythonConference",
        "uploader_url": "https://www.youtube.com/@EuroPythonConference",
        "upload_date": "20241002",
        "duration": 1664,
        "view_count": 300,
        "like_count": 5,
        "comment_count": null,
        "tags": [
            "europython",
            "python",
            "conference"
        ],
        "categories": [
            "Science & Technology"
        ],
        "description": "[EuroPython 2024 — South Hall 2A on 2024-07-10]\n\n\rZero Trust APIs with Python by Jose Haro Peralta\n\rhttps://ep2024.europython.eu/session/zero-trust-apis-with-python\n\n\rWhat does it take to deliver a properly secured API? When we think about API security, we first think of authentication and authorization. But there’s more to it. API security also includes protecting against SQL Injection attacks, Mass Assignment, Excessive Data Exposure, Server-Side Request Forgery (SSRS), and more.\n\n\rAPIs are now the main attack vector on the Internet, and we gotta do something about it. Thankfully, Python boasts excellent libraries for API development, like FastAPI, the Django REST Framework, APIFlask, and more. When used properly, these libraries help us deliver secure APIs.\n\n\rIn this talk, I’ll present a model of Zero Trust Security for APIs that applies robust data validation and sanitization across all data flows to help us deliver secure APIs. You’ll learn how your API design and implementation choices impact API security and how to discover and tackle vulnerabilities.\n\n\rWe’ll walk through practical examples of SQL injection, mass assignment, big payload attacks, pagination attacks, and more. We’ll see how URL parameters and request payloads can become attack vectors when they’re not properly configured.\n\n\rYou’ll also learn how to use tools like schemathesis and Spectral to automate and scale the process of detecting vulnerabilities in your APIs.\n\n\rBy the end of this talk, you’ll be aware of the most important threats to our APIs and you’ll know how to discover and address them effectively. You’ll also get familiar with the concepts of API Security by Design, Shift-Left API Security, and Zero Trust APIs.\n\n\n\r---\n\rThis work is licensed under a Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License: https://creativecommons.org/licenses/by-nc-sa/4.0/",
        "thumbnail": "https://i.ytimg.com/vi/CRaTRDknUkM/maxresdefault.jpg",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=CRaTRDknUkM",
        "original_url": "https://www.youtube.com/watch?v=CRaTRDknUkM"
    },
    {
        "index": 23,
        "title": "Deadcode - a tool to find and fix unused (dead) Python code — Albertas Gimbutas",
        "url": "https://www.youtube.com/watch?v=g7Fa33-tNDs",
        "video_id": "g7Fa33-tNDs",
        "uploader": "EuroPython Conference",
        "uploader_id": "@EuroPythonConference",
        "uploader_url": "https://www.youtube.com/@EuroPythonConference",
        "upload_date": "20241002",
        "duration": 1569,
        "view_count": 336,
        "like_count": 6,
        "comment_count": null,
        "tags": [
            "europython",
            "python",
            "conference"
        ],
        "categories": [
            "Science & Technology"
        ],
        "description": "[EuroPython 2024 — South Hall 2A on 2024-07-10]\n\n\rDeadcode - a tool to find and fix unused (dead) Python code by Albertas Gimbutas\n\rhttps://ep2024.europython.eu/session/deadcode-a-tool-to-find-and-fix-unused-dead-python-code\n\n\rNo longer needed code creates technical debt if it is not removed from the code base. Unused code has to be maintained, it complicates code base and increases cognitive load. It might even depend on no longer necessary dependencies with vulnerabilities and might increase attack surface. Therefore, removing dead code saves time, money and reduces security risks.\n\n\rRecently, Ruff has became a de facto linter, which provides almost all existing linting rules from other linters. However, it is only capable to detect locally unused Python code, which is only a tiny portion of unused code.\n\n\rVulture is the best known tool for detecting globally unused Python code. However, its configuration is not very flexible and disabling false positives in a larger code base might require a lot of effort.\n\rAlso, unused code detection is sometimes inaccurate, because scopes are not taken into account, when detecting unused code. \n\n\rThis presentation introduces a new Python package called `deadcode`, which tries to move globally unused Python code detection to the next level. First, it provides a large set of options to flexibly disable various types of false positives. Second, deadcode implements more rules for detecting unused code than Vulture. Third, an improved strategy which tracks scopes and namespaces into account is being used to more accurately identify unused code items. Fourth, a --fix option is provided, which allows to automatically remove detected unused code items.\n\n\rIn addition, an idea to prune Python code in order to reduce its size will be consider, which might be relevant when serving Python code in a browser.\n\n\rLets make Python ecosystem even more awesome!\n\n\n\r---\n\rThis work is licensed under a Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License: https://creativecommons.org/licenses/by-nc-sa/4.0/",
        "thumbnail": "https://i.ytimg.com/vi/g7Fa33-tNDs/maxresdefault.jpg",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=g7Fa33-tNDs",
        "original_url": "https://www.youtube.com/watch?v=g7Fa33-tNDs"
    },
    {
        "index": 24,
        "title": "Event Sourcing in production — Borjan Tchakaloff",
        "url": "https://www.youtube.com/watch?v=9sUUpavuQK8",
        "video_id": "9sUUpavuQK8",
        "uploader": "EuroPython Conference",
        "uploader_id": "@EuroPythonConference",
        "uploader_url": "https://www.youtube.com/@EuroPythonConference",
        "upload_date": "20241002",
        "duration": 1809,
        "view_count": 232,
        "like_count": 8,
        "comment_count": null,
        "tags": [
            "europython",
            "python",
            "conference"
        ],
        "categories": [
            "Science & Technology"
        ],
        "description": "[EuroPython 2024 — South Hall 2A on 2024-07-10]\n\n\rEvent Sourcing in production by Borjan Tchakaloff\n\rhttps://ep2024.europython.eu/session/event-sourcing-in-production\n\n\rEvent Sourcing (ES) is a powerful concept that lets you adapt your business logic without losing data and past states.\n\rWhether your domain understanding changes or new requirements land on your lap, there is a path forward.\n\rJoin us as we talk about some real-world tactics we relied on to manage Event Sourcing in production.\n\rWe will accumulate a handful of patterns throughout the talk that will hopefully help you avoid pitfalls and bottlenecks.\n\n\rOur use cases build on the `eventsourcing` library, a mature and well-rounded Python library that deserves more attention.\n\rWe will tackle the three key aspects of a successful event-sourced application: evolution, projection, and runtime.\n\n\rSoftware does not run in a vacuum, models need to change and evolve to reflect the world they live in.\n\rES records the evolution of how we abstract our domain, how we see things.\n\rEventually these abstractions can become clumsy or simply inappropriate.\n\rWe can deal with that without breaking stride (losing data).\n\n\rES also gives us the ability to revisit our perspective and change how we present the application state — by creating new projections and replaying the history.\n\rWe will look at how it offers a cheap way to support optimal read-models, which we can can tweak and rebuild in the blink of an eye.\n\n\rFinally, we will present how such a system actually runs in a typical web application.\n\rWhether in the request loop (synchronous), or through eventual consistency (asynchronous).\n\rAs a single process, or distributed for parallel processing.\n\n\r---\n\n\rThis talk assumes some familiarity with _Event Sourcing_ and its friends _Domain Driven Design_ (DDD) and _Command Query Responsibility Seggregation_ (CQRS).\n\n\n\r---\n\rThis work is licensed under a Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License: https://creativecommons.org/licenses/by-nc-sa/4.0/",
        "thumbnail": "https://i.ytimg.com/vi/9sUUpavuQK8/maxresdefault.jpg",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=9sUUpavuQK8",
        "original_url": "https://www.youtube.com/watch?v=9sUUpavuQK8"
    },
    {
        "index": 25,
        "title": "Enhancing Decorators with Type Annotations: Techniques and Best Practices — Koudai Aono",
        "url": "https://www.youtube.com/watch?v=b3WBkrY9vik",
        "video_id": "b3WBkrY9vik",
        "uploader": "EuroPython Conference",
        "uploader_id": "@EuroPythonConference",
        "uploader_url": "https://www.youtube.com/@EuroPythonConference",
        "upload_date": "20241002",
        "duration": 1464,
        "view_count": 272,
        "like_count": 9,
        "comment_count": null,
        "tags": [
            "europython",
            "python",
            "conference"
        ],
        "categories": [
            "Science & Technology"
        ],
        "description": "[EuroPython 2024 — South Hall 2A on 2024-07-10]\n\n\rEnhancing Decorators with Type Annotations: Techniques and Best Practices by Koudai Aono\n\rhttps://ep2024.europython.eu/session/enhancing-decorators-with-type-annotations-techniques-and-best-practices\n\n\rDecorators are powerful, magical syntax sugar, offering a convenient way to wrap and enhance functions. But sometimes, it's not clear how to use a defined decorator.\n\n\rWhat arguments should we pass to a given decorator? What functions does it target? Does it change the return type of the wrapped function? Have you ever faced these questions?\n\n\rIf proper type hints are defined for decorators, static type checkers like mypy and pyright IDEs will point out the errors in usage. Thus, guiding you on the right path by catching bugs earlier, reducing unnecessary debugging and unexpected runtime behaviour.\n\n\rThis talk will step you through type definitions utilizing `typing.TypeVarTuple`, `typing.Protocol`, `typing.ParamSpec`, `typing.Concatenate`, `Type Parameter Syntax`, and more, all of which are practical to implement and can make your project robust!\n\n\n\r---\n\rThis work is licensed under a Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License: https://creativecommons.org/licenses/by-nc-sa/4.0/",
        "thumbnail": "https://i.ytimg.com/vi/b3WBkrY9vik/maxresdefault.jpg",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=b3WBkrY9vik",
        "original_url": "https://www.youtube.com/watch?v=b3WBkrY9vik"
    },
    {
        "index": 26,
        "title": "Animations from first principles — Rodrigo Girão Serrão",
        "url": "https://www.youtube.com/watch?v=X6fJjFSMLEs",
        "video_id": "X6fJjFSMLEs",
        "uploader": "EuroPython Conference",
        "uploader_id": "@EuroPythonConference",
        "uploader_url": "https://www.youtube.com/@EuroPythonConference",
        "upload_date": "20241002",
        "duration": 2474,
        "view_count": 193,
        "like_count": 12,
        "comment_count": null,
        "tags": [
            "europython",
            "python",
            "conference"
        ],
        "categories": [
            "Science & Technology"
        ],
        "description": "[EuroPython 2024 — South Hall 2B on 2024-07-10]\n\n\rAnimations from first principles by Rodrigo Girão Serrão\n\rhttps://ep2024.europython.eu/session/animations-from-first-principles\n\n\rHow do you create an animation?\n\n\rWhat if you want to morph a circle into a figure eight?\n\n\rAs it turns out, all you need is two or three functions and a loop!\n\n\rIn this live-coded talk, we'll go over the basic concepts and code needed to create an animation _from first principles_.\n\n\rBecause the talk presents the ideas and the code from first principles, you will be able to take the key concepts and build your own animations after!\n\n\rWe'll start simple and build from there:\n\n\r - How can you draw a circle if all you can do is colour single pixels?\n\r - How can you animate the process of drawing a circle?\n\r - How can you animate the process of drawing something other than a circle?\n\r - How can you animate the process of morphing two figures?\n\r - How do you add colour to your animations?\n\n\rThis visually appealing talk will show you all of the code without skipping a single line and by the time we're done you'll be jumping in your seat to create your own animations!\n\n\n\r---\n\rThis work is licensed under a Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License: https://creativecommons.org/licenses/by-nc-sa/4.0/",
        "thumbnail": "https://i.ytimg.com/vi/X6fJjFSMLEs/maxresdefault.jpg",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=X6fJjFSMLEs",
        "original_url": "https://www.youtube.com/watch?v=X6fJjFSMLEs"
    },
    {
        "index": 27,
        "title": "Intellectual Property Law 101 — Anwesha Das",
        "url": "https://www.youtube.com/watch?v=qB1F9z6qlHk",
        "video_id": "qB1F9z6qlHk",
        "uploader": "EuroPython Conference",
        "uploader_id": "@EuroPythonConference",
        "uploader_url": "https://www.youtube.com/@EuroPythonConference",
        "upload_date": "20241002",
        "duration": 1840,
        "view_count": 208,
        "like_count": 1,
        "comment_count": null,
        "tags": [
            "europython",
            "python",
            "conference"
        ],
        "categories": [
            "Science & Technology"
        ],
        "description": "[EuroPython 2024 — South Hall 2B on 2024-07-10]\n\n\rIntellectual Property Law 101 by Anwesha Das\n\rhttps://ep2024.europython.eu/session/intellectual-property-law-101\n\n\r\"Oh, legal is boring,\" most developer community thinks in this line. Yes, it is boring, but it is essential at the same time. We will demystify certain basic legal concepts the developers need to know to secure them, their code, and, most importantly, the consequences of their steps. I will go through three fundamental pillars of Intellectual property laws: Trademark, Copyright, and Patent. The talk will include real-life examples of applying all of the above. This talk targets developers and not legal experts.\n\n\n\r---\n\rThis work is licensed under a Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License: https://creativecommons.org/licenses/by-nc-sa/4.0/",
        "thumbnail": "https://i.ytimg.com/vi/qB1F9z6qlHk/maxresdefault.jpg",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=qB1F9z6qlHk",
        "original_url": "https://www.youtube.com/watch?v=qB1F9z6qlHk"
    },
    {
        "index": 28,
        "title": "EuroPython 2024 — CPython Core Development Panel",
        "url": "https://www.youtube.com/watch?v=t_lEA9GQb30",
        "video_id": "t_lEA9GQb30",
        "uploader": "EuroPython Conference",
        "uploader_id": "@EuroPythonConference",
        "uploader_url": "https://www.youtube.com/@EuroPythonConference",
        "upload_date": "20241002",
        "duration": 3562,
        "view_count": 201,
        "like_count": 11,
        "comment_count": null,
        "tags": [
            "europython",
            "python",
            "conference"
        ],
        "categories": [
            "Science & Technology"
        ],
        "description": "[EuroPython 2024 — South Hall 2B on 2024-07-10]\n\n\rCPython Core Development Panel by Pablo Galindo Salgado, Łukasz Langa, Carol Willing, Hugo van Kemenade, Victor Stinner and Petr Viktorin. \n\rhttps://ep2024.europython.eu/session/cpython-core-development-panel\n\n\rPython has been evolving very rapidly in the last few years, and this is because new ideas have been taking over the Core Development. New ideas require new people, a new background and lots of energy.\n\n\rThis panel aims for the people to be aware of the changes that are coming in 3.13, and future versions, as well as ways people can contribute by testing features, fixing issues, or even sharing their own ideas.\n\n\rHost: Konstantin Ignatov\n\rPanelists: Pablo Galindo Salgado, Łukasz Langa,  Carol Willing, Hugo van Kemenade, Victor Stinner and Petr Viktorin\n\n\n\r---\n\rThis work is licensed under a Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License: https://creativecommons.org/licenses/by-nc-sa/4.0/",
        "thumbnail": "https://i.ytimg.com/vi/t_lEA9GQb30/maxresdefault.jpg",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=t_lEA9GQb30",
        "original_url": "https://www.youtube.com/watch?v=t_lEA9GQb30"
    },
    {
        "index": 29,
        "title": "... and justice for AIl — Martina Guttau-Zielke",
        "url": "https://www.youtube.com/watch?v=4dUoprrMMk4",
        "video_id": "4dUoprrMMk4",
        "uploader": "EuroPython Conference",
        "uploader_id": "@EuroPythonConference",
        "uploader_url": "https://www.youtube.com/@EuroPythonConference",
        "upload_date": "20241002",
        "duration": 2889,
        "view_count": 95,
        "like_count": 4,
        "comment_count": null,
        "tags": [
            "europython",
            "python",
            "conference"
        ],
        "categories": [
            "Science & Technology"
        ],
        "description": "[EuroPython 2024 — South Hall 2B on 2024-07-10]\n\n\r... and justice for AIl by Martina Guttau-Zielke\n\rhttps://ep2024.europython.eu/session/and-justice-for-ail\n\n\r„Everything’s science fiction until someone makes it science fact.“ - Marie Lu, Warcross\n\n\rWe live in times that have quite a lot of those science facts- even if hoverboards sadly are not part of them- and now have to deal with this new world and all it’s changes for better or for worse. \n\rThere are unsettling deepfakes, stunning Cap-Set-Problem-solving language models and the question of artificial conscience. Developers might be able to navigate the turbulences of AI evolution, but are you brave enough to take on the quest of untangling the nebulous scriptures of law that are known to the chaotic neutral wordwizards of the council of Europa as the „AI Act“?\n\n\rAccompany me on a journey through the valleys of risk-based AI categories, over the sea of subsectional articles and to the top of mount ethic, as we strive to understand the possibilities the AI Act gives our bold heroes to defy the boundaries of innovation, protect the villagers of the EU and construct (legally) safe software.\n\n\rThe Proposal for the European Artificial Intelligence Act takes 224 Pages of legalese to work through. \n\rThis talk will give a short overview of what the European AI Act is and about the purpose and necessity of a globally harmonised legal system. \n\rHopefully it will give an understanding about the main goals of the act, which are, spoiler alert, ensuring AI safety, the protection of fundamental rights, and legal clarity for businesses and developers (which is probably you).\n\rLet us discuss, how developers can shield fundamental rights by writing ethical AI Systems whilst navigating the regulatory landscape and staying tuned with legal development as well.\n\n\n\r---\n\rThis work is licensed under a Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License: https://creativecommons.org/licenses/by-nc-sa/4.0/",
        "thumbnail": "https://i.ytimg.com/vi/4dUoprrMMk4/maxresdefault.jpg",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=4dUoprrMMk4",
        "original_url": "https://www.youtube.com/watch?v=4dUoprrMMk4"
    },
    {
        "index": 30,
        "title": "Keeping your projects nice and clean — Jan Musílek",
        "url": "https://www.youtube.com/watch?v=uh6hywDL-C0",
        "video_id": "uh6hywDL-C0",
        "uploader": "EuroPython Conference",
        "uploader_id": "@EuroPythonConference",
        "uploader_url": "https://www.youtube.com/@EuroPythonConference",
        "upload_date": "20241002",
        "duration": 1739,
        "view_count": 710,
        "like_count": 17,
        "comment_count": null,
        "tags": [
            "europython",
            "python",
            "conference"
        ],
        "categories": [
            "Science & Technology"
        ],
        "description": "[EuroPython 2024 — South Hall 2B on 2024-07-10]\n\n\rKeeping your projects nice and clean by Jan Musílek\n\rhttps://ep2024.europython.eu/session/keeping-your-projects-nice-and-clean\n\n\rKeeping your projects nice and clean helps other to understand your code better and it's crucial when you're working in teams of more than a few people. How do you achieve that?\n\n\rI'll talk about selected quality control tools, autoformatters, CI, but also about conventions, review process and other details of how we tackle this problem in my workplace. I'll discuss how to introduce changes gradually and keep your repository style and quality checks in sync, even when you have dozens of them. And also about what happens when you overdo it and the tools that should make your life easier actually turn into the torturing machine.\n\n\n\r---\n\rThis work is licensed under a Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License: https://creativecommons.org/licenses/by-nc-sa/4.0/",
        "thumbnail": "https://i.ytimg.com/vi/uh6hywDL-C0/maxresdefault.jpg",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=uh6hywDL-C0",
        "original_url": "https://www.youtube.com/watch?v=uh6hywDL-C0"
    },
    {
        "index": 31,
        "title": "How we sped up NumPy’s string operations for NumPy 2.0 — Lysandros Nikolaou",
        "url": "https://www.youtube.com/watch?v=ZhOtCkQCNl0",
        "video_id": "ZhOtCkQCNl0",
        "uploader": "EuroPython Conference",
        "uploader_id": "@EuroPythonConference",
        "uploader_url": "https://www.youtube.com/@EuroPythonConference",
        "upload_date": "20241002",
        "duration": 1546,
        "view_count": 181,
        "like_count": 5,
        "comment_count": null,
        "tags": [
            "europython",
            "python",
            "conference"
        ],
        "categories": [
            "Science & Technology"
        ],
        "description": "[EuroPython 2024 — South Hall 2B on 2024-07-10]\n\n\rHow we sped up NumPy’s string operations for NumPy 2.0 by Lysandros Nikolaou\n\rhttps://ep2024.europython.eu/session/how-we-sped-up-numpys-string-operations-for-numpy-2-0\n\n\rAfter a huge amount of work from many people, NumPy 2.0.0 has been released, the first major NumPy release since 2006! Among the many new features, several changes to both the Python API and the C API, and a great deal of documentation improvements, there was also a lot of work on improving the performance of string operations.\n\n\rIn this talk, we'll go through the timeline of the changes and the resulting performance improvements, while also diving deep into NumPy ufunc internals and explaining topics like NumPy (parametric) dtypes, type promotion and more.\n\n\n\r---\n\rThis work is licensed under a Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License: https://creativecommons.org/licenses/by-nc-sa/4.0/",
        "thumbnail": "https://i.ytimg.com/vi/ZhOtCkQCNl0/maxresdefault.jpg",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=ZhOtCkQCNl0",
        "original_url": "https://www.youtube.com/watch?v=ZhOtCkQCNl0"
    },
    {
        "index": 32,
        "title": "Is RAG all you need? A look at the limits of retrieval augmented generation — Sara Zanzottera",
        "url": "https://www.youtube.com/watch?v=9wk7mGB_Gp4",
        "video_id": "9wk7mGB_Gp4",
        "uploader": "EuroPython Conference",
        "uploader_id": "@EuroPythonConference",
        "uploader_url": "https://www.youtube.com/@EuroPythonConference",
        "upload_date": "20241002",
        "duration": 2615,
        "view_count": 207,
        "like_count": 6,
        "comment_count": null,
        "tags": [
            "europython",
            "python",
            "conference"
        ],
        "categories": [
            "Science & Technology"
        ],
        "description": "[EuroPython 2024 — Terrace 2A on 2024-07-10]\n\n\rIs RAG all you need? A look at the limits of retrieval augmented generation by Sara Zanzottera\n\rhttps://ep2024.europython.eu/session/is-rag-all-you-need-a-look-at-the-limits-of-retrieval-augmented-generation\n\n\rRetrieval-Augmented Generation (RAG) is a widely adopted technique to expand the knowledge of LLMs within a specific domain while mitigating hallucinations. However, it is not a silver bullet that is often claimed to be. A chatbot for developer documentation and one for medical advice may be based on the same architecture, but they have vastly different quality, transparency and consistency requirements. Getting RAG to work well on both can be far from trivial.\n\n\rIn this talk we will first understand what RAG is, where it shines and why it works so well in these applications. Then we are going to see the most common failure modes and walk through a few of them to evaluate whether RAG is a suitable solution at all, how to improve the quality of the output, and when it's better to go for a different approach entirely.\n\n\n\r---\n\rThis work is licensed under a Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License: https://creativecommons.org/licenses/by-nc-sa/4.0/",
        "thumbnail": "https://i.ytimg.com/vi/9wk7mGB_Gp4/maxresdefault.jpg",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=9wk7mGB_Gp4",
        "original_url": "https://www.youtube.com/watch?v=9wk7mGB_Gp4"
    },
    {
        "index": 33,
        "title": "Data pipelines with Celery: modular, signal-driven and manageable — Marin Aglić Čuvić",
        "url": "https://www.youtube.com/watch?v=g-3KClG-2xc",
        "video_id": "g-3KClG-2xc",
        "uploader": "EuroPython Conference",
        "uploader_id": "@EuroPythonConference",
        "uploader_url": "https://www.youtube.com/@EuroPythonConference",
        "upload_date": "20241002",
        "duration": 1471,
        "view_count": 443,
        "like_count": 10,
        "comment_count": null,
        "tags": [
            "europython",
            "python",
            "conference"
        ],
        "categories": [
            "Science & Technology"
        ],
        "description": "[EuroPython 2024 — Terrace 2A on 2024-07-10]\n\n\rData pipelines with Celery: modular, signal-driven and manageable by Marin Aglić Čuvić\n\rhttps://ep2024.europython.eu/session/data-pipelines-with-celery-modular-signal-driven-and-manageable\n\n\rWriting pipelines for processing large datasets has its challenges – processing data within an acceptable time frame, dealing with unreliable and rate-limited APIs, and unexpected failures that can cause data incompleteness. In this talk we’ll discuss how to design & implement modular, efficient, and manageable workflows with Celery, Redis, and signal-based triggering.\n\n\rWe’ll begin by exploring the motivation behind segmenting pipelines into smaller, more manageable ones. The segmentation simplifies development, enhances fault tolerance, and improves modularity, making it easier to test and debug each component. By leveraging Redis as a data store and Celery’s signals, we introduce self-triggering (or looped) pipelines that efficiently manage data batches within API rate limits and system resource constraints. We will look at an example of how we did things in the past using periodic tasks and how this new approach, instead, simplifies and increases our data throughput and completeness. Additionally, this facilitates triggering pipelines with secondary benefits, such as persisting and reporting results, which allows analysis and insight into the processed data. This can help us tackle inaccuracies and optimise data handling in budget-sensitive environments.\n\n\rThe talk offers the attendees a perspective on designing data pipelines in Celery that they may have not seen before. We will share the techniques for implementing more effective and maintainable data pipelines in their own projects.\n\n\n\r---\n\rThis work is licensed under a Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License: https://creativecommons.org/licenses/by-nc-sa/4.0/",
        "thumbnail": "https://i.ytimg.com/vi/g-3KClG-2xc/maxresdefault.jpg",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=g-3KClG-2xc",
        "original_url": "https://www.youtube.com/watch?v=g-3KClG-2xc"
    },
    {
        "index": 34,
        "title": "From built-in concurrency primitives to large scale distributed computing — Jakub Urban",
        "url": "https://www.youtube.com/watch?v=_2kQcmrYSA0",
        "video_id": "_2kQcmrYSA0",
        "uploader": "EuroPython Conference",
        "uploader_id": "@EuroPythonConference",
        "uploader_url": "https://www.youtube.com/@EuroPythonConference",
        "upload_date": "20241002",
        "duration": 2413,
        "view_count": 256,
        "like_count": 5,
        "comment_count": null,
        "tags": [
            "europython",
            "python",
            "conference"
        ],
        "categories": [
            "Science & Technology"
        ],
        "description": "[EuroPython 2024 — Terrace 2A on 2024-07-10]\n\n\rFrom built-in concurrency primitives to large scale distributed computing by Jakub Urban\n\rhttps://ep2024.europython.eu/session/from-built-in-concurrency-primitives-to-large-scale-distributed-computing\n\n\rThis talk is specifically designed for Python developers and data practitioners who wish to deepen their skills in asynchronous code execution, from single CPU applications to complex distributed systems with thousands of cores. We'll provide a detailed exploration and explanation of Python's asynchronous execution models and concurrency primitives, focusing on `Future` and `Executor` interfaces within the `concurrent.futures` module, and the event-driven architecture of `asyncio`. Special attention will be given to the processing of large datasets, a common challenge in data science and engineering.\n\n\rWe will start with the fundamental concepts and then explore how they apply to large scale, distributed execution frameworks like Dask or Ray. On step-by-step examples, we aim to demonstrate simple function executions and map-reduce operations. We will illustrate efficient collaboration between different concurrency models. The session will cover the transition to large-scale, distributed execution frameworks, offering practical guidelines for scaling your computations effectively and addressing common hurdles like data serialization in distributed environments.\n\n\rAttendees will leave with a solid understanding of asynchronous code execution underpinnings. This talk will empower you to make informed practical decisions about applying concurrency in your data processing workflows. You will be able to seamlessly integrate new libraries or frameworks into your projects, ensuring optimal development lifecycle, performance and scalability.\n\n\n\r---\n\rThis work is licensed under a Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License: https://creativecommons.org/licenses/by-nc-sa/4.0/",
        "thumbnail": "https://i.ytimg.com/vi/_2kQcmrYSA0/maxresdefault.jpg",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=_2kQcmrYSA0",
        "original_url": "https://www.youtube.com/watch?v=_2kQcmrYSA0"
    },
    {
        "index": 35,
        "title": "GeoPandas 1.0 and beyond — Martin Fleischmann",
        "url": "https://www.youtube.com/watch?v=SgQA_ac2AZk",
        "video_id": "SgQA_ac2AZk",
        "uploader": "EuroPython Conference",
        "uploader_id": "@EuroPythonConference",
        "uploader_url": "https://www.youtube.com/@EuroPythonConference",
        "upload_date": "20241002",
        "duration": 1549,
        "view_count": 159,
        "like_count": 4,
        "comment_count": null,
        "tags": [
            "europython",
            "python",
            "conference"
        ],
        "categories": [
            "Science & Technology"
        ],
        "description": "[EuroPython 2024 — Terrace 2A on 2024-07-10]\n\n\rGeoPandas 1.0 and beyond by Martin Fleischmann\n\rhttps://ep2024.europython.eu/session/geopandas-1-0-and-beyond\n\n\rGeoPandas is one of the core packages in the Python ecosystem to work with geospatial vector data. By combining the power of several open source geo tools (GEOS/Shapely, GDAL/pyogrio, PROJ/pyproj) and extending the pandas data analysis library to work with geographic objects, it is designed to make working with geospatial data in Python easier. Recently, the development that started more than ten years ago resulted in version 1.0.\n\n\rThis talk will give an overview of what is new in GeoPandas 1.0 and of recent developments in the broader ecosystem of packages on which GeoPandas depends, or that extend GeoPandas. We will highlight some changes and new features in GeoPandas 1.0, such as the new default IO based on pyogrio, closer integration of Shapely 2.0 leading to a range of new methods, and the removal of other geometry engines and consequences of that. We will look at the journey of the GeoPandas from its start at SciPy 2013 to the current 1.0 and discuss the plans moving forward, covering support of spherical geometries, native support for GeoArrow, and more. You will get a sense of what is coming in future, where to help the development and how to prepare your code for upcoming changes.\n\n\n\r---\n\rThis work is licensed under a Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License: https://creativecommons.org/licenses/by-nc-sa/4.0/",
        "thumbnail": "https://i.ytimg.com/vi/SgQA_ac2AZk/maxresdefault.jpg",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=SgQA_ac2AZk",
        "original_url": "https://www.youtube.com/watch?v=SgQA_ac2AZk"
    },
    {
        "index": 36,
        "title": "The PyArrow revolution in Pandas — Reuven M. Lerner",
        "url": "https://www.youtube.com/watch?v=RxiDVXh_KFE",
        "video_id": "RxiDVXh_KFE",
        "uploader": "EuroPython Conference",
        "uploader_id": "@EuroPythonConference",
        "uploader_url": "https://www.youtube.com/@EuroPythonConference",
        "upload_date": "20241002",
        "duration": 2105,
        "view_count": 1250,
        "like_count": 45,
        "comment_count": null,
        "tags": [
            "europython",
            "python",
            "conference"
        ],
        "categories": [
            "Science & Technology"
        ],
        "description": "[EuroPython 2024 — Terrace 2A on 2024-07-10 ]\n\n\rThe PyArrow revolution in Pandas by Reuven M. Lerner\n\rhttps://ep2024.europython.eu/session/the-pyarrow-revolution-in-pandas\n\n\rPandas has long used NumPy for its back-end storage. But things are changing, and the future of Pandas will likely be tied closely with PyArrow. What are Arrow and PyArrow? How do they affect Pandas users today, and how will they affect us in the future? In this talk, I introduce PyArrow, tell you what it does, how we can already use it in our Pandas work, and whether that's a good idea.\n\n\n\r---\n\rThis work is licensed under a Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License: https://creativecommons.org/licenses/by-nc-sa/4.0/",
        "thumbnail": "https://i.ytimg.com/vi/RxiDVXh_KFE/maxresdefault.jpg",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=RxiDVXh_KFE",
        "original_url": "https://www.youtube.com/watch?v=RxiDVXh_KFE"
    },
    {
        "index": 37,
        "title": "Designing Config Files: The Conflicting Needs of Programmers and Users — Steven Pool",
        "url": "https://www.youtube.com/watch?v=rC22kQXNbwo",
        "video_id": "rC22kQXNbwo",
        "uploader": "EuroPython Conference",
        "uploader_id": "@EuroPythonConference",
        "uploader_url": "https://www.youtube.com/@EuroPythonConference",
        "upload_date": "20241002",
        "duration": 1726,
        "view_count": 606,
        "like_count": 11,
        "comment_count": null,
        "tags": [
            "europython",
            "python",
            "conference"
        ],
        "categories": [
            "Science & Technology"
        ],
        "description": "[EuroPython 2024 — Terrace 2A on 2024-07-10]\n\n\rDesigning Config Files: The Conflicting Needs of Programmers and Users by Steven Pool\n\rhttps://ep2024.europython.eu/session/designing-config-files-the-conflicting-needs-of-programmers-and-users\n\n\rWhen your programs are configuration driven and used by PM/PO/Scientists etc you have to think slightly differently about how configuration files are used in your projects. For example, users may want to change/create configs on the fly and they may want to see all settings in one file without having to go through layers of indirection and library “configs” to see what their experiment/program will do.\n\n\rRather than discussing config file formats (I’ll assume toml but it’s applicable for other formats), this talk will focus more on my ideas/tips on: how to structure config files, how to allow non technical people to contribute to config files, how to minimise potentially explosive number of config files, how to expose more control in config files, tools for testing these configs and checking if values are actually used, hints for good practices to make debugging problems easier.\n\n\n\r---\n\rThis work is licensed under a Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License: https://creativecommons.org/licenses/by-nc-sa/4.0/",
        "thumbnail": "https://i.ytimg.com/vi/rC22kQXNbwo/maxresdefault.jpg",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=rC22kQXNbwo",
        "original_url": "https://www.youtube.com/watch?v=rC22kQXNbwo"
    },
    {
        "index": 38,
        "title": "The role of C++ in the Python ecosystem: the case of the Qt framework — Cristián Maureira-Fredes",
        "url": "https://www.youtube.com/watch?v=1xMnoLn5cWA",
        "video_id": "1xMnoLn5cWA",
        "uploader": "EuroPython Conference",
        "uploader_id": "@EuroPythonConference",
        "uploader_url": "https://www.youtube.com/@EuroPythonConference",
        "upload_date": "20241002",
        "duration": 1903,
        "view_count": 147,
        "like_count": 4,
        "comment_count": null,
        "tags": [
            "europython",
            "python",
            "conference"
        ],
        "categories": [
            "Science & Technology"
        ],
        "description": "[EuroPython 2024 — Terrace 2A on 2024-07-10]\n\n\rThe role of C++ in the Python ecosystem: the case of the Qt framework by Cristián Maureira-Fredes\n\rhttps://ep2024.europython.eu/session/the-role-of-c-in-the-python-ecosystem-the-case-of-the-qt-framework\n\n\rWith the recent popularity of new programming languages that are improving the Python ecosystem, one cannot dismiss the role of \"old\" languages like C++, and how the new versions might stay relevant.                                                                          \n\r                                                                                                         \n\rWith these ideas in mind, how do you bring a huge project, as old as Python,  written in C++ to Python?\n\rIf you are thinking: «...just create some bindings and call it a day» you will be surprised.                                                                                 \n\r                                                                                                         \n\rOn this talk, we will dive directly into the internals on how the Qt for Python project brought one of the most popular C++ frameworks into Python - but not only with 1-to1 bindings. \n\n\rWe will discuss about build systems, packaging, limited API, interpreters support, Platform and API compatibility, Python and C++ types, ecosystem awareness, CPython code generation, communities, documentation, and many more challenging aspects of maintaining and developing a C++ library in Python.\n\n\rAfter this talk, you will not only understand why exposing an existing library from one language to another is much more than just binding them together, but also you will be able to start developing Python applications with Qt.\n\n\n\r---\n\rThis work is licensed under a Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License: https://creativecommons.org/licenses/by-nc-sa/4.0/",
        "thumbnail": "https://i.ytimg.com/vi/1xMnoLn5cWA/maxresdefault.jpg",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=1xMnoLn5cWA",
        "original_url": "https://www.youtube.com/watch?v=1xMnoLn5cWA"
    },
    {
        "index": 39,
        "title": "Learning to code in the age of AI — Sheena O'Connell",
        "url": "https://www.youtube.com/watch?v=CcTC3I5SF7k",
        "video_id": "CcTC3I5SF7k",
        "uploader": "EuroPython Conference",
        "uploader_id": "@EuroPythonConference",
        "uploader_url": "https://www.youtube.com/@EuroPythonConference",
        "upload_date": "20241002",
        "duration": 2675,
        "view_count": 254,
        "like_count": 6,
        "comment_count": null,
        "tags": [
            "europython",
            "python",
            "conference"
        ],
        "categories": [
            "Science & Technology"
        ],
        "description": "[EuroPython 2024 — Terrace 2B on 2024-07-10]\n\n\rLearning to code in the age of AI by Sheena O'Connell\n\rhttps://ep2024.europython.eu/session/learning-to-code-in-the-age-of-ai\n\n\rAcross the industry, programmers of all levels are embracing AI and LLMs. But: it's still worthwhile to learn the foundations of coding. And there's a risk: some learners are using AIs as footguns and limiting their own growth\n\n\n---\n\rThis work is licensed under a Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License: https://creativecommons.org/licenses/by-nc-sa/4.0/",
        "thumbnail": "https://i.ytimg.com/vi/CcTC3I5SF7k/maxresdefault.jpg",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=CcTC3I5SF7k",
        "original_url": "https://www.youtube.com/watch?v=CcTC3I5SF7k"
    },
    {
        "index": 40,
        "title": "Accelerating Python with Rust: The PyO3 Revolution — Roshan R Chandar",
        "url": "https://www.youtube.com/watch?v=_33zs20Sy0k",
        "video_id": "_33zs20Sy0k",
        "uploader": "EuroPython Conference",
        "uploader_id": "@EuroPythonConference",
        "uploader_url": "https://www.youtube.com/@EuroPythonConference",
        "upload_date": "20241002",
        "duration": 1651,
        "view_count": 384,
        "like_count": 7,
        "comment_count": null,
        "tags": [
            "europython",
            "python",
            "conference"
        ],
        "categories": [
            "Science & Technology"
        ],
        "description": "[EuroPython 2024 — Terrace 2B on 2024-07-10]\n\n\rAccelerating Python with Rust: The PyO3 Revolution by Roshan R Chandar\n\rhttps://ep2024.europython.eu/session/accelerating-python-with-rust-the-pyo3-revolution\n\n\rAre you curious about integrating the high-performance and memory efficiency of Rust into your Python applications? Rust can significantly enhance the speed and efficiency of Python programs, and this integration is made seamless with PyO3.\n\n\rThis presentation will delve into the capabilities of PyO3, a tool that allows the creation of native Python modules using Rust. With PyO3, importing Rust code as a Python module is straightforward. It offers seamless type conversion between Python and Rust and includes macros that simplify the process of exposing Rust functions to Python.\n\n\rMoreover, with the growing trend towards asynchronous programming, PyO3-asyncio emerges as a vital tool for those working with async functions in Python or looking to generate Python bindings for an async Rust library. It streamlines the task of translating async functions between Python and Rust. Furthermore, PyO3 facilitates easy implementation of parallelism within Rust code, enhancing performance and efficiency.\n\n\n\r---\n\rThis work is licensed under a Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License: https://creativecommons.org/licenses/by-nc-sa/4.0/",
        "thumbnail": "https://i.ytimg.com/vi/_33zs20Sy0k/maxresdefault.jpg",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=_33zs20Sy0k",
        "original_url": "https://www.youtube.com/watch?v=_33zs20Sy0k"
    },
    {
        "index": 41,
        "title": "State-of-the-art image generation for the masses with Diffusers — Sayak Paul",
        "url": "https://www.youtube.com/watch?v=Z1FPAweAbNI",
        "video_id": "Z1FPAweAbNI",
        "uploader": "EuroPython Conference",
        "uploader_id": "@EuroPythonConference",
        "uploader_url": "https://www.youtube.com/@EuroPythonConference",
        "upload_date": "20241002",
        "duration": 2071,
        "view_count": 176,
        "like_count": 4,
        "comment_count": null,
        "tags": [
            "europython",
            "python",
            "conference"
        ],
        "categories": [
            "Science & Technology"
        ],
        "description": "[EuroPython 2024 — Terrace 2B on 2024-07-10]\n\n\rState-of-the-art image generation for the masses with Diffusers by Sayak Paul\n\rhttps://ep2024.europython.eu/session/state-of-the-art-image-generation-for-the-masses-with-diffusers\n\n\rThe talk \"State-of-the-art image generation for the masses with Diffusers\" will explore the diverse applications of the open-source Python library Diffusers in the image and video generation space. The talk will showcase how Diffusers, based on diffusion models, enables fast and high-quality image and video generation, making it accessible to a wide range of users. The presentation will cover various use cases, including image inpainting, image editing, and scene composition, demonstrating the capabilities of Diffusers in enabling users to create and edit photo-realistic images with minimum effort. The audience will gain insights into the potential of Diffusers in revolutionizing the way images and videos are generated and edited, making it a must-attend session for anyone interested in the latest advancements in this field.\n\n\n\r---\n\rThis work is licensed under a Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License: https://creativecommons.org/licenses/by-nc-sa/4.0/",
        "thumbnail": "https://i.ytimg.com/vi/Z1FPAweAbNI/maxresdefault.jpg",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=Z1FPAweAbNI",
        "original_url": "https://www.youtube.com/watch?v=Z1FPAweAbNI"
    },
    {
        "index": 42,
        "title": "The Art of the Pull Request — Ben Lomax",
        "url": "https://www.youtube.com/watch?v=2upWetU_vUc",
        "video_id": "2upWetU_vUc",
        "uploader": "EuroPython Conference",
        "uploader_id": "@EuroPythonConference",
        "uploader_url": "https://www.youtube.com/@EuroPythonConference",
        "upload_date": "20241002",
        "duration": 1839,
        "view_count": 301,
        "like_count": 7,
        "comment_count": null,
        "tags": [
            "europython",
            "python",
            "conference"
        ],
        "categories": [
            "Science & Technology"
        ],
        "description": "[EuroPython 2024 — Terrace 2B on 2024-07-10]\n\n\rThe Art of the Pull Request by Ben Lomax\n\rhttps://ep2024.europython.eu/session/the-art-of-the-pull-request\n\n\r*Want to be a better teammate? Want to get your work merged faster?*\n\n\rFor a lot of devs (especially newer ones) the important part of a PR is the code, not the structure of the PR. However, the way commits in a PR are put together to guide a reviewer can be massively impactful. This talk looks at how to effectively craft that review experience.\n\n\n\r---\n\rThis work is licensed under a Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License: https://creativecommons.org/licenses/by-nc-sa/4.0/",
        "thumbnail": "https://i.ytimg.com/vi/2upWetU_vUc/maxresdefault.jpg",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=2upWetU_vUc",
        "original_url": "https://www.youtube.com/watch?v=2upWetU_vUc"
    },
    {
        "index": 43,
        "title": "Unlocking Mixture of Experts : From 1 Know-it-all to group of Jedi Masters — Pranjal Biyani",
        "url": "https://www.youtube.com/watch?v=-J7itWRKNes",
        "video_id": "-J7itWRKNes",
        "uploader": "EuroPython Conference",
        "uploader_id": "@EuroPythonConference",
        "uploader_url": "https://www.youtube.com/@EuroPythonConference",
        "upload_date": "20241002",
        "duration": 1847,
        "view_count": 199,
        "like_count": 0,
        "comment_count": null,
        "tags": [
            "europython",
            "python",
            "conference"
        ],
        "categories": [
            "Science & Technology"
        ],
        "description": "[EuroPython 2024 — Terrace 2B on 2024-07-10]\n\n\rUnlocking Mixture of Experts : From 1 Know-it-all to group of Jedi Masters by Pranjal Biyani\n\rhttps://ep2024.europython.eu/session/unlocking-mixture-of-experts-from-1-know-it-all-to-group-of-jedi-masters\n\n\rAnswer this : In critical domains like Healthcare would you prefer a Jack-of-all-trades OR one Yoda, the master? \n\n\rJoin me on an exhilarating journey as we delve deep into the Mixture of Experts (MoE) technique which is a practical and intuitive next-step to elevate predictive powers of generalised know-it-all models.\n\n\rA powerful approach to solve a variety of ML tasks, MoE operates on the principle of Divide and Conquer with some less obvious limitations, pros, and cons. You’ll go through a captivating exploration of insights, intuitive reasoning, solid mathematical underpinnings, and a treasure trove of interesting examples!\n\n\rWe'll kick off by surveying the landscape, from ensemble models to stacked estimators, gradually ascending towards the pinnacle of MoE. Along the way, we'll explore challenges, alternative routes, and the crucial art of knowing when to wield the MoE magic—AND when to hold back. Brace yourselves for a business-oriented finale, where we discuss metrics around cost, latency, and throughput for MoE models. And fear not! We'll wrap up with an array of resources equipping you to dive headfirst into pre-trained MoE models, fine-tune them, or even forge your own from scratch. May the force of Experts be with you !\"\n\n\n\r---\n\rThis work is licensed under a Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License: https://creativecommons.org/licenses/by-nc-sa/4.0/",
        "thumbnail": "https://i.ytimg.com/vi/-J7itWRKNes/maxresdefault.jpg",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=-J7itWRKNes",
        "original_url": "https://www.youtube.com/watch?v=-J7itWRKNes"
    },
    {
        "index": 44,
        "title": "Enterprise Python: Software That Lives Long And Prosper — Alvaro Duran",
        "url": "https://www.youtube.com/watch?v=YFVJxMjp5iA",
        "video_id": "YFVJxMjp5iA",
        "uploader": "EuroPython Conference",
        "uploader_id": "@EuroPythonConference",
        "uploader_url": "https://www.youtube.com/@EuroPythonConference",
        "upload_date": "20241002",
        "duration": 1473,
        "view_count": 166,
        "like_count": 3,
        "comment_count": null,
        "tags": [
            "europython",
            "python",
            "conference"
        ],
        "categories": [
            "Science & Technology"
        ],
        "description": "[EuroPython 2024 — Terrace 2B on 2024-07-10]\n\n\rEnterprise Python: Software That Lives Long And Prosper by Alvaro Duran\n\rhttps://ep2024.europython.eu/session/enterprise-python-software-that-lives-long-and-prosper\n\n\rEvery day, as software continues to “eat the world”, applications increasingly grow in complexity. \n\rNowhere else is this phenomenon more prevalent than in big organizations, which over time have hired more people to develop and maintain more features. There, it is no longer possible to have a complete mental model of what is going on.\n\rEnterprise software, when unchecked, bloats and becomes brittle.\n\rParadoxically, engineers build software to  keep complexity at bay, not to create it. When writing code, the goal is to make processes less labor intensive and more reliable. Yet, enterprise software has become a black hole for man-hours.\n\rPython disrupted Java to become the de facto programming language for enterprises precisely because it tackled this problem in a way that Java, or any other programming language, could not.\n\rHow is that so? This talk will dive deep into this exact question. What does Python offer that radically changed how software gets built in organizations, both big and small?. And why is it that newer languages that have come along, such as Go and Rust, haven’t been able to put a dent on its dominions, and have been forced to recede into niche use cases.\n\rThis talk is for engineers who want to understand and leverage Python to its maximum maintainability potential. They intuitively understand that Python is a great tool for that, but are unsure as to how to do it.\n\n\n\r---\n\rThis work is licensed under a Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License: https://creativecommons.org/licenses/by-nc-sa/4.0/",
        "thumbnail": "https://i.ytimg.com/vi/YFVJxMjp5iA/maxresdefault.jpg",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=YFVJxMjp5iA",
        "original_url": "https://www.youtube.com/watch?v=YFVJxMjp5iA"
    },
    {
        "index": 45,
        "title": "I reverse engineered a work of art, and this is what I learned — Yair Galler",
        "url": "https://www.youtube.com/watch?v=oCjAw6z5TFg",
        "video_id": "oCjAw6z5TFg",
        "uploader": "EuroPython Conference",
        "uploader_id": "@EuroPythonConference",
        "uploader_url": "https://www.youtube.com/@EuroPythonConference",
        "upload_date": "20241002",
        "duration": 1717,
        "view_count": 358,
        "like_count": 9,
        "comment_count": null,
        "tags": [
            "europython",
            "python",
            "conference"
        ],
        "categories": [
            "Science & Technology"
        ],
        "description": "[EuroPython 2024 — Terrace 2B on 2024-07-10]\n\n\rI reverse engineered a work of art, and this is what I learned by Yair Galler\n\rhttps://ep2024.europython.eu/session/i-reverse-engineered-a-work-of-art-and-this-is-what-i-learned\n\n\rThis is the story of a weekend project which turned into a months long challenge. After coming across a photorealistic painting made entirely out of strings, I wanted to create one on my own. But how? I decided to reverse engineer the algorithm that computes which strings to stretch and in which order.\n\n\rIn this talk, I will show how I created a Python algorithm that produces a beautiful work of art. I will cover topics such as greedy algorithms, image processing, color spaces, performance optimization and many other challenges that I encountered while cracking the algorithm. And of course, I'll show the resulting work of art!\n\n\n\r---\n\rThis work is licensed under a Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License: https://creativecommons.org/licenses/by-nc-sa/4.0/",
        "thumbnail": "https://i.ytimg.com/vi/oCjAw6z5TFg/maxresdefault.jpg",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=oCjAw6z5TFg",
        "original_url": "https://www.youtube.com/watch?v=oCjAw6z5TFg"
    },
    {
        "index": 46,
        "title": "Why should we all be hyped about inclusive leadership? — Tereza Iofciu",
        "url": "https://www.youtube.com/watch?v=wHU-Mi_phJc",
        "video_id": "wHU-Mi_phJc",
        "uploader": "EuroPython Conference",
        "uploader_id": "@EuroPythonConference",
        "uploader_url": "https://www.youtube.com/@EuroPythonConference",
        "upload_date": "20241002",
        "duration": 2810,
        "view_count": 325,
        "like_count": 6,
        "comment_count": null,
        "tags": [
            "europython",
            "python",
            "conference"
        ],
        "categories": [
            "Science & Technology"
        ],
        "description": "[EuroPython 2024 — Forum Hall on 2024-07-11]\n\n\rWhy should we all be hyped about inclusive leadership? by Tereza Iofciu\n\rhttps://ep2024.europython.eu/session/why-should-we-all-be-hyped-about-inclusive-leadership\n\n\rWe often associate the need for leadership skills with being in a management position. But...we start needing them a lot earlier in our career to succeed and have a positive impact. The diverse workspaces and communities are here to stay, though almost none of us have learned in school how to thrive in diversity. Nor how to be inclusive. We are all somewhere on a journey of inclusive leadership! In this talk we can find out how to asses where we are. And why we should approach inclusive leadership with a beginners mindset, try to do better, make mistakes, learn, repeat. And why we should all be hyped about it.\n\n\n\r---\n\rThis work is licensed under a Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License: https://creativecommons.org/licenses/by-nc-sa/4.0/",
        "thumbnail": "https://i.ytimg.com/vi/wHU-Mi_phJc/maxresdefault.jpg",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=wHU-Mi_phJc",
        "original_url": "https://www.youtube.com/watch?v=wHU-Mi_phJc"
    },
    {
        "index": 47,
        "title": "Rapid Prototyping & Proof of Concepts: Django is all we need — Radoslav Georgiev",
        "url": "https://www.youtube.com/watch?v=NJ95aCz4nHo",
        "video_id": "NJ95aCz4nHo",
        "uploader": "EuroPython Conference",
        "uploader_id": "@EuroPythonConference",
        "uploader_url": "https://www.youtube.com/@EuroPythonConference",
        "upload_date": "20241002",
        "duration": 2593,
        "view_count": 262,
        "like_count": 11,
        "comment_count": null,
        "tags": [
            "europython",
            "python",
            "conference"
        ],
        "categories": [
            "Science & Technology"
        ],
        "description": "[EuroPython 2024 — Forum Hall on 2024-07-11]\n\n\rRapid Prototyping & Proof of Concepts: Django is all we need by Radoslav Georgiev\n\rhttps://ep2024.europython.eu/session/rapid-prototyping-proof-of-concepts-django-is-all-we-need\n\n\rIn this modern day and age, 2 things are for certain:\n\n\r1. Time-to-market for our products & features matters.\n\r2. We can easily drown in complexity and be carried away by over-engineering.\n\n\rHaving the ability to rapidly develop prototypes and proof of concepts is very powerful, because we can iterate towards the right thing, with code.\n\n\rWe know that we can use Django for building mature & long-lasting applications.\n\n\rBut what about building rapid prototypes and proof of concepts?\n\n\rIn this talk, we’ll show that Django can do that job, reliably, as well.\n\n\rWe’ll look at what Django & the rich 3rd party ecosystem has to offer us, when it comes to building rapid prototypes.\n\n\rWe’ll focus on topics like:\n\n\r1. How to approach rapid prototyping with the correct mindset.\n\r2. Being quick with Django models.\n\r3. Realizing that types can be our friends.\n\r4. Realizing that Django admin may be all the UI we need (at least, in the beginning).\n\r5. Using HTMX where it makes sense.\n\r6. Components in Django templates are a good idea.\n\n\rThe talk will be practical & pragmatic, with the aim to provide good examples, derived from experience, that’ll highlight the main topics and ideas.\n\n\rThe talk is great for both beginners, as well as seasoned Django developers.\n\n\rThe final goal is to give clear evidence, supported by examples, that we can use Django, reliably, to rapidly build prototypes & proof of concepts.\n\n\rIt turns out that Django is all we need.\n\n\n\r---\n\rThis work is licensed under a Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License: https://creativecommons.org/licenses/by-nc-sa/4.0/",
        "thumbnail": "https://i.ytimg.com/vi/NJ95aCz4nHo/maxresdefault.jpg",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=NJ95aCz4nHo",
        "original_url": "https://www.youtube.com/watch?v=NJ95aCz4nHo"
    },
    {
        "index": 48,
        "title": "FastUI - panacea or pipe dream? — Samuel Colvin",
        "url": "https://www.youtube.com/watch?v=CNYXGVAEPxY",
        "video_id": "CNYXGVAEPxY",
        "uploader": "EuroPython Conference",
        "uploader_id": "@EuroPythonConference",
        "uploader_url": "https://www.youtube.com/@EuroPythonConference",
        "upload_date": "20241002",
        "duration": 1761,
        "view_count": 815,
        "like_count": 19,
        "comment_count": null,
        "tags": [
            "europython",
            "python",
            "conference"
        ],
        "categories": [
            "Science & Technology"
        ],
        "description": "[EuroPython 2024 — Forum Hall on 2024-07-11]\n\n\rFastUI - panacea or pipe dream? by Samuel Colvin\n\rhttps://ep2024.europython.eu/session/fastui-panacea-or-pipe-dream\n\n\rAre web interfaces defined in Python a genius idea, a complete folly, or (like most technologies) a good fit for some use cases but not all?\n\n\rI'll give a brief tour of packages that let you build web interfaces by writing only Python, including Streamlit, Gradio, NiceGUI, reflex, Solara, dominate, ReactPy and FastUI (recently released by the Pydantic team).\n\n\rThe main three questions I'll be asking are:\n\n\r1. Is building a web UI in Python really a good idea at all?\n\r2. What fundamental trade-offs are required to make such a tool successful?\n\r3. If someone can answer point 1 and 2, when's the right time to use these tools? \n\n\rOver the last couple of years, lots of different libraries have emerged to let you develop web interfaces without getting your hands dirty with HTML, CSS, the JS ecosystem; but so far none have got as popular as \"traditional\" template rendering (Jinja, Django) or modern SPA frameworks like React.\n\n\rSo are we at the dawn of a new way era — and one of these frameworks will become ubiquitous. Or is the whole idea that you can build such an interface without engaging with the fundamental technologies that power them mistaken?\n\n\rOne important question is \"what kind of interface are we aiming at?\" If we are trying to give complete control over the browser, allowing Python developers to do everything raw JavaScript can do; our solution will look very different to something that is \"just\" trying to allow Python developers to plug common components together to build 80% of UIs with 20% of the effort.\n\n\rLooking at the question through this lens will help explain the design choices of the above libraries, and might even allow us to guess at which approaches will be most\n\n\n\r---\n\rThis work is licensed under a Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License: https://creativecommons.org/licenses/by-nc-sa/4.0/",
        "thumbnail": "https://i.ytimg.com/vi/CNYXGVAEPxY/maxresdefault.jpg",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=CNYXGVAEPxY",
        "original_url": "https://www.youtube.com/watch?v=CNYXGVAEPxY"
    },
    {
        "index": 49,
        "title": "Lies, damned lies and large language models — Jodie Burchell",
        "url": "https://www.youtube.com/watch?v=kTvp9qaJabo",
        "video_id": "kTvp9qaJabo",
        "uploader": "EuroPython Conference",
        "uploader_id": "@EuroPythonConference",
        "uploader_url": "https://www.youtube.com/@EuroPythonConference",
        "upload_date": "20241002",
        "duration": 1718,
        "view_count": 432,
        "like_count": 11,
        "comment_count": null,
        "tags": [
            "europython",
            "python",
            "conference"
        ],
        "categories": [
            "Science & Technology"
        ],
        "description": "[EuroPython 2024 — Forum Hall on 2024-07-11]\n\n\rLies, damned lies and large language models by Jodie Burchell\n\rhttps://ep2024.europython.eu/session/lies-damned-lies-and-large-language-models\n\n\rWould you like to use large language models (LLMs) in your own project, but are troubled by their tendency to frequently “hallucinate”, or produce incorrect information? Have you ever wondered if there was a way to easily measure an LLM’s hallucination rate, and compare this against other models? And would you like to learn how to help LLMs produce more accurate information?\n\n\rIn this talk, we’ll have a look at some of the main reasons that hallucinations occur in LLMs, and then focus on how we can measure one specific type of hallucination: the tendency of models to regurgitate misinformation that they have learned from their training data. We’ll explore how we can easily measure this type of hallucination in LLMs using a dataset called TruthfulQA in conjunction with Python tooling including Hugging Face’s `datasets` and `transformers` packages, and the `langchain` package.\n\n\rWe’ll end by looking at recent initiatives to reduce hallucinations in LLMs, using a technique called retrieval augmented generation (RAG). We’ll look at how and why RAG makes LLMs less likely to hallucinate, and how this can help make these models more reliable and usable in a range of contexts.\n\n\n\r---\n\rThis work is licensed under a Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License: https://creativecommons.org/licenses/by-nc-sa/4.0/",
        "thumbnail": "https://i.ytimg.com/vi/kTvp9qaJabo/maxresdefault.jpg",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=kTvp9qaJabo",
        "original_url": "https://www.youtube.com/watch?v=kTvp9qaJabo"
    },
    {
        "index": 50,
        "title": "Fine-tuning large models on local hardware — Benjamin Bossan",
        "url": "https://www.youtube.com/watch?v=hdHKCjhF68U",
        "video_id": "hdHKCjhF68U",
        "uploader": "EuroPython Conference",
        "uploader_id": "@EuroPythonConference",
        "uploader_url": "https://www.youtube.com/@EuroPythonConference",
        "upload_date": "20241002",
        "duration": 1678,
        "view_count": 171,
        "like_count": 2,
        "comment_count": null,
        "tags": [
            "europython",
            "python",
            "conference"
        ],
        "categories": [
            "Science & Technology"
        ],
        "description": "[EuroPython 2024 — Forum Hall on 2024-07-11]\n\n\rFine-tuning large models on local hardware by Benjamin Bossan\n\rhttps://ep2024.europython.eu/session/fine-tuning-large-models-on-local-hardware\n\n\rFine-tuning big neural nets like Large Language Models (LLMs) has traditionally been prohibitive due to high hardware requirements. However, Parameter-Efficient Fine-Tuning (PEFT) and quantization enable the training of large models on modest hardware. Thanks to the PEFT library and the Hugging Face ecosystem, these techniques are now accessible to a broad audience.\n\n\rExpect to learn:\n\n\r- what the challenges are of fine-tuning large models\n\r- what solutions have been proposed and how they work\n\r- practical examples of applying the PEFT library\n\n\n\r---\n\rThis work is licensed under a Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License: https://creativecommons.org/licenses/by-nc-sa/4.0/",
        "thumbnail": "https://i.ytimg.com/vi/hdHKCjhF68U/maxresdefault.jpg",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=hdHKCjhF68U",
        "original_url": "https://www.youtube.com/watch?v=hdHKCjhF68U"
    },
    {
        "index": 51,
        "title": "Is it me or Python memory management? — Yuliia Barabash, Laysa Uchoa",
        "url": "https://www.youtube.com/watch?v=TVJZATcTS_U",
        "video_id": "TVJZATcTS_U",
        "uploader": "EuroPython Conference",
        "uploader_id": "@EuroPythonConference",
        "uploader_url": "https://www.youtube.com/@EuroPythonConference",
        "upload_date": "20241002",
        "duration": 1712,
        "view_count": 213,
        "like_count": 5,
        "comment_count": null,
        "tags": [
            "europython",
            "python",
            "conference"
        ],
        "categories": [
            "Science & Technology"
        ],
        "description": "[EuroPython 2024 — Forum Hall on 2024-07-11\n\n\rIs it me or Python memory management? by Yuliia Barabash, Laysa Uchoa\n\rhttps://ep2024.europython.eu/session/is-it-me-or-python-memory-management\n\n\rHave you ever wondered if Python memory management is playing tricks on you? Starting small, everything runs smoothly. But as your application scales, complexity grows, and memory issues rear their head. You ask yourself, \"Is it me or Python memory management?\"In this talk, we'll show you how Python memory works, provide tools to analyze memory usage and share practical optimization tips. Whether you're a seasoned Python developer or just starting on your Python journey, this talk is designed to provide you with techniques to overcome Python memory management challenges and write more efficient, memory-conscious code.\n\n\n\r---\n\rThis work is licensed under a Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License: https://creativecommons.org/licenses/by-nc-sa/4.0/",
        "thumbnail": "https://i.ytimg.com/vi/TVJZATcTS_U/maxresdefault.jpg",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=TVJZATcTS_U",
        "original_url": "https://www.youtube.com/watch?v=TVJZATcTS_U"
    },
    {
        "index": 52,
        "title": "How to Build a Python-to-C++ Compiler out of Spare Parts - and Why — Xavier Thompson",
        "url": "https://www.youtube.com/watch?v=ouJRHDxHaPA",
        "video_id": "ouJRHDxHaPA",
        "uploader": "EuroPython Conference",
        "uploader_id": "@EuroPythonConference",
        "uploader_url": "https://www.youtube.com/@EuroPythonConference",
        "upload_date": "20241002",
        "duration": 1738,
        "view_count": 219,
        "like_count": 2,
        "comment_count": null,
        "tags": [
            "europython",
            "python",
            "conference"
        ],
        "categories": [
            "Science & Technology"
        ],
        "description": "[EuroPython 2024 — Forum Hall on 2024-07-11\n\n\rHow to Build a Python-to-C++ Compiler out of Spare Parts - and Why by Xavier Thompson\n\rhttps://ep2024.europython.eu/session/how-to-build-a-python-to-c-compiler-out-of-spare-parts-and-why\n\n\rA frequent topic about Python is performance: its interpreted nature inhibits optimisations, and the famous GIL limits parallelism (for now!).\n\n\rExisting Python Compilers - Cython, Numba, Codon - focus mainly on compiling small, critical bits of code to achieve linear execution speedups. As for parallelism: parallel for-loops powered by OpenMP.\n\n\rTo parallelize highly concurrent programs with concurrent I/O and concurrent tasks, we need more. A key difference is it requires compiling everything: as soon as the Python interpreter comes into play, the GIL will make parallelism collapse.\n\n\rWe introduce Typon, a Python-to-C++ compiler with powerful concurrency primitives powered by a crazy homemade task scheduler. It can take untyped, idiomatic Python code and output C++ code fully independent of the Python interpreter. It also provides seamless to-and-from Python interoperability, for those cases where you really just need to import numpy.\n\n\rIn this talk we'll recount our journey so far: why we think it's important, how we're making something new out of existing bits, what we've achieved. Along the way we might delve into fun details like type inference, concurrency primitives, and C++ pretending-to-be-Python.\n\n\rYou'll come out of this talk with some cool insights into compiler design, concurrency, and the design of Python.\n\n\rKnowledge of C++ not required. Knowledge of Python language inner workings helpful.\n\n\n\r---\n\rThis work is licensed under a Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License: https://creativecommons.org/licenses/by-nc-sa/4.0/",
        "thumbnail": "https://i.ytimg.com/vi/ouJRHDxHaPA/maxresdefault.jpg",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=ouJRHDxHaPA",
        "original_url": "https://www.youtube.com/watch?v=ouJRHDxHaPA"
    },
    {
        "index": 53,
        "title": "Shipping ready-to-run Python apps without the need to install Python — Marc-André Lemburg",
        "url": "https://www.youtube.com/watch?v=cje1EmmeNLQ",
        "video_id": "cje1EmmeNLQ",
        "uploader": "EuroPython Conference",
        "uploader_id": "@EuroPythonConference",
        "uploader_url": "https://www.youtube.com/@EuroPythonConference",
        "upload_date": "20241002",
        "duration": 1635,
        "view_count": 309,
        "like_count": 9,
        "comment_count": null,
        "tags": [
            "europython",
            "python",
            "conference"
        ],
        "categories": [
            "Science & Technology"
        ],
        "description": "[EuroPython 2024 — Forum Hall on 2024-07-11]\n\n\rShipping ready-to-run Python apps without the need to install Python by Marc-André Lemburg\n\rhttps://ep2024.europython.eu/session/shipping-ready-to-run-python-apps-without-the-need-to-install-python\n\n\rHave you ever wanted to ship a script or application to a friend or client, without requiring a specific Python installation or providing complex installation instructions ? Or you want to squeeze out that last bit of juice from your Docker Python image to speed up deployment. Then eGenix PyRun is for you.\n\n\rPyRun is an open source, Apache-licensed, compressed, single file Python compatible run-time, which fits into merely 5 MB on disk.\n\n\rIt can be used to ship pure Python products as a single file on Unix platforms, create Python Docker images with very small footprint to speed up deployment, or as a neat venv replacement, truly isolating applications from any OS or other Python installations, giving you a predictable target for Python applications across Unix platforms.\n\n\rWe have been using PyRun internally at eGenix for many years and open sourced it back in 2012. This year, we are moving the project to Github and relaunching it, in order to present it to the wider open source and Python community.\n\n\rThe talk will go into details on how PyRun is built from the Python source tree, how to create your own single file Python apps, where it can be put to good use, the roadmap we have for PyRun and what its limitations are.\n\n\n\r---\n\rThis work is licensed under a Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License: https://creativecommons.org/licenses/by-nc-sa/4.0/",
        "thumbnail": "https://i.ytimg.com/vi/cje1EmmeNLQ/maxresdefault.jpg",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=cje1EmmeNLQ",
        "original_url": "https://www.youtube.com/watch?v=cje1EmmeNLQ"
    },
    {
        "index": 54,
        "title": "How we used vectorization for 1000x Python speedups (no C or Spark needed!)",
        "url": "https://www.youtube.com/watch?v=rlpiJT_-apA",
        "video_id": "rlpiJT_-apA",
        "uploader": "EuroPython Conference",
        "uploader_id": "@EuroPythonConference",
        "uploader_url": "https://www.youtube.com/@EuroPythonConference",
        "upload_date": "20241002",
        "duration": 2440,
        "view_count": 366,
        "like_count": 9,
        "comment_count": null,
        "tags": [
            "europython",
            "python",
            "conference"
        ],
        "categories": [
            "Science & Technology"
        ],
        "description": "[EuroPython 2024 — Forum Hall on 2024-07-11]\n\n\rHow we used vectorization for 1000x Python speedups (no C or Spark needed!) by Jonathan Hollenbeck, Justine Wezenaar\n\rhttps://ep2024.europython.eu/session/how-we-used-vectorization-for-1000x-python-speedups-no-c-or-spark-needed\n\n\rWant to make all your code faster? With matrices, library knowledge, and a sprinkle of creativity, you can consistently speed up multivariate Python functions by 1000x!\n\n\rModal optimization requires simple axioms - arithmetic, checking a case, calling the right sklearn function, and so on. When that’s not sufficient, three core tricks - converting conditional logic to set theory, stacking vectors into a matrix, and shaping data to match library expectations - cover the vast majority of real world cases (90% of the ~400 functions we vectorized). \n\n\rAt Bloomberg, ESG (Environmental, Social, and Governance) Scores require complex computations on large data sets. Time-series computations are fundamental for Governance - one UDF infers board support for a policy from prior cyclical votes and other time offset inputs. By rewriting the pandas backfill as a series of reductions on a 4-tensor, we reduced the runtime from 45 minutes to 10 milliseconds! Analogously, due to real world complexity, finance UDFs can end up with 100+ if/else branches in one function. With a mix of De Morgan’s laws and sparse matrix representations, we simplified the cases and achieved 1000x+ speedups.\n\n\rWe’ll conclude with a quick overview of cutting-edge tools, and hope you’ll leave with a concrete strategy for vectorizing financial models!\n\n\n\r---\n\rThis work is licensed under a Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License: https://creativecommons.org/licenses/by-nc-sa/4.0/",
        "thumbnail": "https://i.ytimg.com/vi/rlpiJT_-apA/maxresdefault.jpg",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=rlpiJT_-apA",
        "original_url": "https://www.youtube.com/watch?v=rlpiJT_-apA"
    },
    {
        "index": 55,
        "title": "The Catch in Rye: Seeding Change and Lessons Learned — Armin Ronacher",
        "url": "https://www.youtube.com/watch?v=skTKaHVIL1c",
        "video_id": "skTKaHVIL1c",
        "uploader": "EuroPython Conference",
        "uploader_id": "@EuroPythonConference",
        "uploader_url": "https://www.youtube.com/@EuroPythonConference",
        "upload_date": "20241002",
        "duration": 2524,
        "view_count": 503,
        "like_count": 22,
        "comment_count": null,
        "tags": [
            "europython",
            "python",
            "conference"
        ],
        "categories": [
            "Science & Technology"
        ],
        "description": "[EuroPython 2024 — Forum Hall on 2024-07-11]\n\n\rThe Catch in Rye: Seeding Change and Lessons Learned by Armin Ronacher\n\rhttps://ep2024.europython.eu/session/the-catch-in-rye-seeding-change-and-lessons-learned\n\n\rPython has a lot of packaging tools and what better way to solve the problem than to add another one. Rye is in many ways just another way to try to fix Python packaging, but it's also happy to not exist if something takes its place. This talk goes over all the lessons learned from writing it, what has lead to it's creation, how it's built internally and what we can do to just solve the problem once and for all.\n\n\n\r---\n\rThis work is licensed under a Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License: https://creativecommons.org/licenses/by-nc-sa/4.0/",
        "thumbnail": "https://i.ytimg.com/vi/skTKaHVIL1c/maxresdefault.jpg",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=skTKaHVIL1c",
        "original_url": "https://www.youtube.com/watch?v=skTKaHVIL1c"
    },
    {
        "index": 56,
        "title": "EuroPython 2024 — Lightning talks Thursday",
        "url": "https://www.youtube.com/watch?v=3U9CRmMosOE",
        "video_id": "3U9CRmMosOE",
        "uploader": "EuroPython Conference",
        "uploader_id": "@EuroPythonConference",
        "uploader_url": "https://www.youtube.com/@EuroPythonConference",
        "upload_date": "20241002",
        "duration": 2885,
        "view_count": 121,
        "like_count": 2,
        "comment_count": null,
        "tags": [
            "europython",
            "python",
            "conference"
        ],
        "categories": [
            "Science & Technology"
        ],
        "description": "[EuroPython 2024 — Forum Hall on 2024-07-11]\n\n\rLightning talks Thursday\n\rhttps://ep2024.europython.eu/session/lightning-talks-thursday\n\nEnjoy Thursdays's lightning talks. Short talks about everything by everyone. Hosted by Velda Kiara and Angel Ramboi:\n\n00:00 *Welcome to Thursday's Lightning Talks*\n00:31 *Community Conference / Events Announcements & Celebration!*  \n17:55 *What to expect at the social event* — Moisés Guimarães\n24:50 *AutoQuizzer: Can you beat an LLM in a pub quiz?* — Bilge Yucel\n29:38 *Launching Crawlee for Python: Special beta version for EuroPython* — Saurav Jain\n32:33 *Should Python adopt CalVer? 🗓* — Hugo van Kemenade\n37:30 *F**k it* — Sébastien Crocquevieille\n40:28 *Work on sqrt(3) and Pitagora's Theorem* — Riccardo Polli\n44:24 *Present-ception: A presentation about presentations* — Siddharth Gupta\n\n\r---\n\rThis work is licensed under a Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License: https://creativecommons.org/licenses/by-nc-sa/4.0/",
        "thumbnail": "https://i.ytimg.com/vi/3U9CRmMosOE/maxresdefault.jpg",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=3U9CRmMosOE",
        "original_url": "https://www.youtube.com/watch?v=3U9CRmMosOE"
    },
    {
        "index": 57,
        "title": "A Tour of Synchronization Primitives in Python — Zach Muncaster",
        "url": "https://www.youtube.com/watch?v=0_eM8vsQg9Q",
        "video_id": "0_eM8vsQg9Q",
        "uploader": "EuroPython Conference",
        "uploader_id": "@EuroPythonConference",
        "uploader_url": "https://www.youtube.com/@EuroPythonConference",
        "upload_date": "20241002",
        "duration": 2642,
        "view_count": 223,
        "like_count": 7,
        "comment_count": null,
        "tags": [
            "europython",
            "python",
            "conference"
        ],
        "categories": [
            "Science & Technology"
        ],
        "description": "[EuroPython 2024 — North Hall on 2024-07-11]\n\n\rA Tour of Synchronization Primitives in Python by Zach Muncaster\n\rhttps://ep2024.europython.eu/session/a-tour-of-synchronization-primitives-in-python\n\n\rWhether using threads or task-based event loops, running code concurrently is not without its challenges. This talk takes a look at the features provided by the Python programming language to solve problems of synchronization when dealing with concurrently executing code.\n\n\rTogether we will take a look at the synchronization classes and functions provided by the Python threading and asyncio modules, what problems they aim to solve, and how we might use them effectively in our own code.\n\n\n\r---\n\rThis work is licensed under a Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License: https://creativecommons.org/licenses/by-nc-sa/4.0/",
        "thumbnail": "https://i.ytimg.com/vi/0_eM8vsQg9Q/maxresdefault.jpg",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=0_eM8vsQg9Q",
        "original_url": "https://www.youtube.com/watch?v=0_eM8vsQg9Q"
    },
    {
        "index": 58,
        "title": "DBT & Python - How to write reusable and testable pipelines — Florian Stefan",
        "url": "https://www.youtube.com/watch?v=DUX-bEW1_bU",
        "video_id": "DUX-bEW1_bU",
        "uploader": "EuroPython Conference",
        "uploader_id": "@EuroPythonConference",
        "uploader_url": "https://www.youtube.com/@EuroPythonConference",
        "upload_date": "20241002",
        "duration": 1837,
        "view_count": 260,
        "like_count": 4,
        "comment_count": null,
        "tags": [
            "europython",
            "python",
            "conference"
        ],
        "categories": [
            "Science & Technology"
        ],
        "description": "[EuroPython 2024 — North Hall on 2024-07-11]\n\n\rDBT & Python - How to write reusable and testable pipelines by Florian Stefan\n\rhttps://ep2024.europython.eu/session/dbt-python-how-to-write-reusable-and-testable-pipelines\n\n\rThe \"data build tool\" (DBT) was designed to unlock software engineering best practices for SQL-based data pipelines: pipelines as version controlled directed acyclic graphs (DAGs) consisting of testable and reusable nodes. With the increasing number of cloud data warehouses and data lakehouses that allow the native execution of Python code, DBT also added support for Python models.\n\rIn this talk, I will explain how Flatiron Health uses DBT to improve and extend lives by learning from the experience of every person with cancer. We will discuss an example project setup that uses SQL as well as Python models. I will share our experiences with unit and data testing as well as with writing a reusable variable library.\n\rThe talk is well-suited for anyone with prior data warehouse or data lakehouse experience who is curious how they can leverage DBT to write test-driven and reusable data piplines. The example project will use SQL, Python and Snowflake.\n\n\n\r---\n\rThis work is licensed under a Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License: https://creativecommons.org/licenses/by-nc-sa/4.0/",
        "thumbnail": "https://i.ytimg.com/vi/DUX-bEW1_bU/maxresdefault.jpg",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=DUX-bEW1_bU",
        "original_url": "https://www.youtube.com/watch?v=DUX-bEW1_bU"
    },
    {
        "index": 59,
        "title": "Don't fix bad data, do this instead — Martina Ivanicova",
        "url": "https://www.youtube.com/watch?v=Vk1GHgBxdBY",
        "video_id": "Vk1GHgBxdBY",
        "uploader": "EuroPython Conference",
        "uploader_id": "@EuroPythonConference",
        "uploader_url": "https://www.youtube.com/@EuroPythonConference",
        "upload_date": "20241002",
        "duration": 1501,
        "view_count": 195,
        "like_count": 4,
        "comment_count": null,
        "tags": [
            "europython",
            "python",
            "conference"
        ],
        "categories": [
            "Science & Technology"
        ],
        "description": "[EuroPython 2024 — North Hall on 2024-07-11]\n\n\rDon't fix bad data, do this instead by Martina Ivanicova\n\rhttps://ep2024.europython.eu/session/don-t-fix-bad-data-do-this-instead\n\n\rIn a time where GenAI is quickly growing in popularity, along with prescriptive analytics and online ML models, the question is raised whether we still need to care about data quality? We strongly believe that the answer is yes, and even more so than before! \n\n\rOur expectations of data are high, and this often leads to frustrations when reality does not meet these expectations. \n\n\rIn the pursuit of data quality, expectations must be grounded in reality. It is often the case that a gap exists between anticipated outcomes and the actual data reality, which leads to frustration and mistrust. \n\n\rThis talk delves into pragmatic strategies that can be employed to bridge this gap.  The talk  will discuss both the technical  (hard) and cultural  (soft) measures implemented to uphold these standards.\n\n\rKey Takeaways:\n\r1. Integration tests serve as a proactive barrier, preempting the violation of data contracts, unlike reactive data quality checks.\n\r2. Prioritisation is crucial; a product-centric mindset is key when evaluating the balance between resource investment and potential gain.\n\r3. Data quality management is requiring both hard and soft measures\n\n\n\rAre you a data scientist, software engineer, product manager, or data engineer? Join us in this discussion; data quality concerns us all.\n\n\n\r---\n\rThis work is licensed under a Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License: https://creativecommons.org/licenses/by-nc-sa/4.0/",
        "thumbnail": "https://i.ytimg.com/vi/Vk1GHgBxdBY/maxresdefault.jpg",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=Vk1GHgBxdBY",
        "original_url": "https://www.youtube.com/watch?v=Vk1GHgBxdBY"
    },
    {
        "index": 60,
        "title": "Scikit-LLM: Beginner Friendly NLP Using LLMs — Iryna Kondrashchenko, Oleh Kostromin",
        "url": "https://www.youtube.com/watch?v=CqCS_8iw8dY",
        "video_id": "CqCS_8iw8dY",
        "uploader": "EuroPython Conference",
        "uploader_id": "@EuroPythonConference",
        "uploader_url": "https://www.youtube.com/@EuroPythonConference",
        "upload_date": "20241002",
        "duration": 1621,
        "view_count": 221,
        "like_count": 5,
        "comment_count": null,
        "tags": [
            "europython",
            "python",
            "conference"
        ],
        "categories": [
            "Science & Technology"
        ],
        "description": "[EuroPython 2024 — North Hall on 2024-07-11]\n\n\rScikit-LLM: Beginner Friendly NLP Using LLMs by Iryna Kondrashchenko, Oleh Kostromin\n\rhttps://ep2024.europython.eu/session/scikit-llm-beginner-friendly-nlp-using-llms\n\n\rThe instruction following and in-context learning capabilities of LLMs make them suitable for tackling many NLP tasks. In this talk, we will introduce Scikit-LLM: https://github.com/iryna-kondr/scikit-llm, a rapidly growing, beginner-friendly library that abstracts the complexity of working with LLMs by providing a scikit-learn compatible API. We will showcase how Scikit-LLM can be utilized for solving text classification and text-to-text tasks, and will delve deeper into various methods to improve the model performance, such as prompting strategies and fine-tuning.\n\n\n\r---\n\rThis work is licensed under a Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License: https://creativecommons.org/licenses/by-nc-sa/4.0/",
        "thumbnail": "https://i.ytimg.com/vi/CqCS_8iw8dY/maxresdefault.jpg",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=CqCS_8iw8dY",
        "original_url": "https://www.youtube.com/watch?v=CqCS_8iw8dY"
    },
    {
        "index": 61,
        "title": "PySyft: Data Science on data you are not allowed to see — Valerio Maggio",
        "url": "https://www.youtube.com/watch?v=9fJ8b51YzCQ",
        "video_id": "9fJ8b51YzCQ",
        "uploader": "EuroPython Conference",
        "uploader_id": "@EuroPythonConference",
        "uploader_url": "https://www.youtube.com/@EuroPythonConference",
        "upload_date": "20241002",
        "duration": 1826,
        "view_count": 262,
        "like_count": 3,
        "comment_count": null,
        "tags": [
            "europython",
            "python",
            "conference"
        ],
        "categories": [
            "Science & Technology"
        ],
        "description": "[EuroPython 2024 — North Hall on 2024-07-11]\n\n\rPySyft: Data Science on data you are not allowed to see by Valerio Maggio\n\rhttps://ep2024.europython.eu/session/pysyft-data-science-on-data-you-are-not-allowed-to-see\n\n\rIn today's data-driven world, privacy stands as an essential requirements for the ethical and effective practice of data science. Moreover, the implementation of robust privacy guarantees in data analysis not only protects sensitive information, but also unlocks the potential for unprecedented democratisation of models and datasets. \n\n\rPySyft: https://github.com/OpenMined/PySyft, is a stack of open source tools that is designed to help organisations to securely collaborate with external (untrusted) individuals. By using PySyft, organisations can enable external auditors (e.g. data scientists) to use their assets, such as datasets or models, in order to conduct studies with a specific, known purpose. Data scientists can run their analysis using those assets through PySyft, and without seeing nor obtaining a copy of the assets themselves. We call this process _Remote Data Science._ PySyft is a framework for Remote Data Science.\n\n\rIn the first part of my talk I will introduce the problem of privacy in Data Science, PETs (Privacy Enhancing Technologies), and OpenMined mission to democratise access to data and information. Afterwards, I will demonstrate how *_PySyft_* works, and how it can be used to run a machine learning experiments, with privacy guarantees.\n\n\n\r---\n\rThis work is licensed under a Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License: https://creativecommons.org/licenses/by-nc-sa/4.0/",
        "thumbnail": "https://i.ytimg.com/vi/9fJ8b51YzCQ/maxresdefault.jpg",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=9fJ8b51YzCQ",
        "original_url": "https://www.youtube.com/watch?v=9fJ8b51YzCQ"
    },
    {
        "index": 62,
        "title": "Python’s Journey: From Upstream to Enterprise — Lumír Balhar",
        "url": "https://www.youtube.com/watch?v=2OWW5IMFkBM",
        "video_id": "2OWW5IMFkBM",
        "uploader": "EuroPython Conference",
        "uploader_id": "@EuroPythonConference",
        "uploader_url": "https://www.youtube.com/@EuroPythonConference",
        "upload_date": "20241002",
        "duration": 1720,
        "view_count": 147,
        "like_count": 9,
        "comment_count": null,
        "tags": [
            "europython",
            "python",
            "conference"
        ],
        "categories": [
            "Science & Technology"
        ],
        "description": "[EuroPython 2024 — North Hall on 2024-07-11]\n\n\rPython’s Journey: From Upstream to Enterprise by Lumír Balhar\n\rhttps://ep2024.europython.eu/session/pythons-journey-from-upstream-to-enterprise\n\n\rHave you ever wondered how Python gets from the first alpha version upstream to years of stability in your enterprise Linux systems? And what products and useful components are created for you along the way?\n\n\rIn this talk, Lumír will take you through the incredible journey of Python delivery from the first alpha version shipped to Fedora Linux a couple of days after the official upstream release, through containers developers can use for testing with many old and new Python releases in their CI, to Red Hat Enterprise Linux and its main and alternative Python application streams and containers with various Python versions ready to be deployed to production environments with years of required stability.\n\n\rIn this talk, Lumír will talk about:\n\r* Python maintainers’ focus on speed of delivery in Fedora and stability and reliability in RHEL.\n\r* How to use containers based on Fedora for early adoption of new Pythons in CI/CD pipelines.\n\r* What challenges do we face during ten years of maintenance of old Python interpreters.\n\n\rCome and learn how you can benefit from our efforts, use a modern development environment, and deploy your apps with guaranteed stability.\n\n\n\r---\n\rThis work is licensed under a Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License: https://creativecommons.org/licenses/by-nc-sa/4.0/",
        "thumbnail": "https://i.ytimg.com/vi/2OWW5IMFkBM/maxresdefault.jpg",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=2OWW5IMFkBM",
        "original_url": "https://www.youtube.com/watch?v=2OWW5IMFkBM"
    },
    {
        "index": 63,
        "title": "Mastering Generative AI: Tools and Techniques with VS Code, GitHub, Azure — Leo Yao",
        "url": "https://www.youtube.com/watch?v=Go1aQslQvrs",
        "video_id": "Go1aQslQvrs",
        "uploader": "EuroPython Conference",
        "uploader_id": "@EuroPythonConference",
        "uploader_url": "https://www.youtube.com/@EuroPythonConference",
        "upload_date": "20241002",
        "duration": 1186,
        "view_count": 139,
        "like_count": 0,
        "comment_count": null,
        "tags": [
            "europython",
            "python",
            "conference"
        ],
        "categories": [
            "Science & Technology"
        ],
        "description": "[EuroPython 2024 — North Hall on 2024-07-11]\n\n\rMastering Generative AI: Tools and Techniques with VS Code, GitHub, Azure by Leo Yao\n\rhttps://ep2024.europython.eu/session/mastering-generative-ai-tools-and-techniques-with-vs-code-github-azure\n\n\rWith the rise of Generative AI, developers are now able to create a wide range of applications that can generate content from simple prompts and context. In this presentation, we will explore how you can leverage the power of Visual Studio Code, GitHub, and Azure to develop, test, and deploy generative AI applications. We will discuss the latest tools and techniques for building and training generative models, and demonstrate how to build a sample application using GPT-4o, VS Code and its extensions. Additionally, we will showcase how to use GitHub for version control and collaboration, and how to deploy and manage your applications using Azure. For both beginners and veterans, join us to learn how you can master the power of generative AI to create innovative applications.\n\n\n\r---\n\rThis work is licensed under a Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License: https://creativecommons.org/licenses/by-nc-sa/4.0/",
        "thumbnail": "https://i.ytimg.com/vi/Go1aQslQvrs/maxresdefault.jpg",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=Go1aQslQvrs",
        "original_url": "https://www.youtube.com/watch?v=Go1aQslQvrs"
    },
    {
        "index": 64,
        "title": "Earth Observation through Large Vision Models — Mayank Khanduja",
        "url": "https://www.youtube.com/watch?v=M-T7CnuQdVk",
        "video_id": "M-T7CnuQdVk",
        "uploader": "EuroPython Conference",
        "uploader_id": "@EuroPythonConference",
        "uploader_url": "https://www.youtube.com/@EuroPythonConference",
        "upload_date": "20241002",
        "duration": 2171,
        "view_count": 137,
        "like_count": 3,
        "comment_count": null,
        "tags": [
            "europython",
            "python",
            "conference"
        ],
        "categories": [
            "Science & Technology"
        ],
        "description": "[EuroPython 2024 — North Hall on 2024-07-11]\n\n\rEarth Observation through Large Vision Models by Mayank Khanduja\n\rhttps://ep2024.europython.eu/session/earth-observation-through-large-vision-models\n\n\rEver wondered how location planning is done to build city infrastructure? Or when there is a disaster, how do we determine the possible affected areas and send reinforcements there? We require overhead imagery for that, which we mainly obtain from satellites.\n\rEuropean Space Agency has sent various satellites however, the dataset from these satellites is huge and may even contain multiple bands from the electromagnetic spectrum. Large AI models have a huge potential in this domain, if they are developed to work well with this dataset.\n\rThere are a lot of pre-trained Generative & Large Vision models on platforms like HuggingFace, Kaggle, etc., but these models do not integrate well with a specific domain like satellite datasets, hence the need to train or fine-tune them. In this talk, we are going to see from where we can access open satellite datasets, fine-tune various Vision Models and Multimodals on it, and examine the following applications:\n\n\r- Perform Zero-Shot classification and object detection on satellite images with human language input using Multimodal models.\n\r- Image-to-image translation on satellite imagery using generative vision models.\n\n\n\r---\n\rThis work is licensed under a Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License: https://creativecommons.org/licenses/by-nc-sa/4.0/",
        "thumbnail": "https://i.ytimg.com/vi/M-T7CnuQdVk/maxresdefault.jpg",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=M-T7CnuQdVk",
        "original_url": "https://www.youtube.com/watch?v=M-T7CnuQdVk"
    },
    {
        "index": 65,
        "title": "Unlock the Power of Dev Containers: Consistent Environments in Seconds! — Thomas Fraunholz",
        "url": "https://www.youtube.com/watch?v=zuyvcxNR_RE",
        "video_id": "zuyvcxNR_RE",
        "uploader": "EuroPython Conference",
        "uploader_id": "@EuroPythonConference",
        "uploader_url": "https://www.youtube.com/@EuroPythonConference",
        "upload_date": "20241002",
        "duration": 2690,
        "view_count": 203,
        "like_count": 2,
        "comment_count": null,
        "tags": [
            "europython",
            "python",
            "conference"
        ],
        "categories": [
            "Science & Technology"
        ],
        "description": "[EuroPython 2024 — South Hall 2A on 2024-07-11]\n\n\rUnlock the Power of Dev Containers: Consistent Environments in Seconds! by Thomas Fraunholz\n\rhttps://ep2024.europython.eu/session/unlock-the-power-of-dev-containers-consistent-environments-in-seconds\n\n\rIn this talk, we will explore the basic concepts of Dev Containers and demonstrate how they can support your everyday development as a Python programmer, data scientist, or machine learning engineer. With Dev Containers, you can build a consistent development environment in seconds, no matter where you are or what tools you use. And you know what? The Development Container Specification is even open source. Say goodbye to the hassle of setting up your development environment from scratch every time you start a new project!\n\n\rWe will start with a basic example and discuss how to set up a consistent Python development environment, including best practices for package management and GPU support. After this talk, you will be able to leverage the advantages of Dev Containers, allowing you to work from anywhere and be ready in seconds.\n\n\rIf you're tired of wasting time setting up your development environment and want to unlock the power of Dev Containers, then this talk is a must-attend for you!\n\n\n\r---\n\rThis work is licensed under a Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License: https://creativecommons.org/licenses/by-nc-sa/4.0/",
        "thumbnail": "https://i.ytimg.com/vi/zuyvcxNR_RE/maxresdefault.jpg",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=zuyvcxNR_RE",
        "original_url": "https://www.youtube.com/watch?v=zuyvcxNR_RE"
    },
    {
        "index": 66,
        "title": "Containerize your Python apps like it's 2024 — Jan Smitka",
        "url": "https://www.youtube.com/watch?v=pgqAKd_nOHw",
        "video_id": "pgqAKd_nOHw",
        "uploader": "EuroPython Conference",
        "uploader_id": "@EuroPythonConference",
        "uploader_url": "https://www.youtube.com/@EuroPythonConference",
        "upload_date": "20241002",
        "duration": 1785,
        "view_count": 416,
        "like_count": 27,
        "comment_count": null,
        "tags": [
            "europython",
            "python",
            "conference"
        ],
        "categories": [
            "Science & Technology"
        ],
        "description": "[EuroPython 2024 — South Hall 2A on 2024-07-11]\n\n\rContainerize your Python apps like it's 2024 by Jan Smitka\n\rhttps://ep2024.europython.eu/session/containerize-your-python-apps-like-it-s-2024\n\n\rThere are a lot of resources on containerizing Python applications with Docker, but most are basic and outdated. Following them results in slow builds and potentially insecure applications. Let's see how we can build better containers using recent Docker features!\n\n\rThis talk will show how to speed up your builds and make your images smaller and more secure. We'll use features such as multi-stage builds or cache mounts to build containers with Python apps. We will also discuss how to improve the security of your container.\n\n\rTips from the talk are valid for applications of all sizes and kinds: from hobby projects to enterprises, from CLI tools to web applications and APIs. You will be able to apply them immediately after the talk.\n\n\rBasic knowledge of Docker and its key concepts (images, layers, Dockerfile commands) is required. You'll learn something new even if you have used Docker for some time.\n\n\n\r---\n\rThis work is licensed under a Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License: https://creativecommons.org/licenses/by-nc-sa/4.0/",
        "thumbnail": "https://i.ytimg.com/vi/pgqAKd_nOHw/maxresdefault.jpg",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=pgqAKd_nOHw",
        "original_url": "https://www.youtube.com/watch?v=pgqAKd_nOHw"
    },
    {
        "index": 67,
        "title": "The rise of the YAML engineer — Matthieu Caneill",
        "url": "https://www.youtube.com/watch?v=MeCNUUX9Tls",
        "video_id": "MeCNUUX9Tls",
        "uploader": "EuroPython Conference",
        "uploader_id": "@EuroPythonConference",
        "uploader_url": "https://www.youtube.com/@EuroPythonConference",
        "upload_date": "20241002",
        "duration": 1511,
        "view_count": 176,
        "like_count": 4,
        "comment_count": null,
        "tags": [
            "europython",
            "python",
            "conference"
        ],
        "categories": [
            "Science & Technology"
        ],
        "description": "[EuroPython 2024 — South Hall 2A on 2024-07-11]\n\n\rThe rise of the YAML engineer by Matthieu Caneill\n\rhttps://ep2024.europython.eu/session/the-rise-of-the-yaml-engineer\n\n\rIn the analytics world, many of the trending data frameworks, written in Python or other languages, are adopting the declarative paradigm: users describe the desired end state, and let the system figure out the best steps to reach that state. This can be seen at many layers: data extraction, data transformation, data visualization, but also infrastructure, data quality, governance... Lots of those frameworks use YAML as the interface between the users (data engineers, data analysts and other data practitioners) and the desired system state.\n\rIn this presentation, I propose to dive into the origins of the declarative paradigm for data systems, what it means for us as data practitioners, and why we're actually not becoming glorified YAML developers. I will also talk about state management and GitOps, and probably complain about YAML multiline strings.\n\n\n\r---\n\rThis work is licensed under a Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License: https://creativecommons.org/licenses/by-nc-sa/4.0/",
        "thumbnail": "https://i.ytimg.com/vi/MeCNUUX9Tls/maxresdefault.jpg",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=MeCNUUX9Tls",
        "original_url": "https://www.youtube.com/watch?v=MeCNUUX9Tls"
    },
    {
        "index": 68,
        "title": "PEP 639 - Towards licensing standardization in Python packaging — Karolina Surma",
        "url": "https://www.youtube.com/watch?v=8PuhFlojJ2s",
        "video_id": "8PuhFlojJ2s",
        "uploader": "EuroPython Conference",
        "uploader_id": "@EuroPythonConference",
        "uploader_url": "https://www.youtube.com/@EuroPythonConference",
        "upload_date": "20241002",
        "duration": 1858,
        "view_count": 87,
        "like_count": 4,
        "comment_count": null,
        "tags": [
            "europython",
            "python",
            "conference"
        ],
        "categories": [
            "Science & Technology"
        ],
        "description": "[EuroPython 2024 — South Hall 2A on 2024-07-11]\n\n\rPEP 639 - Towards licensing standardization in Python packaging by Karolina Surma\n\rhttps://ep2024.europython.eu/session/pep-639-towards-licensing-standardization-in-python-packaging\n\n\rDeclaring license metadata in Python packaging has got many pitfalls. The current standard doesn’t meet the needs of the wider public, including downstream packagers (e.g. Linux distributions). Trove classifiers are all but precise. Every build backend comes up with its own idea how to fill in the data in pyproject.toml or their custom formats. It comes hardly as a surprise that there’s an existing attempt to fix the landscape with standardization: PEP 639. In my talk I’ll outline what the proposal is about and how it’s been developing over the years. I’ll summarize the current state and the next steps. This includes the introduction of SPDX expresssion syntax, changes to the project metadata declaration, changes to the core metadata, improved glossary and some more.\n\n\n\r---\n\rThis work is licensed under a Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License: https://creativecommons.org/licenses/by-nc-sa/4.0/",
        "thumbnail": "https://i.ytimg.com/vi/8PuhFlojJ2s/maxresdefault.jpg",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=8PuhFlojJ2s",
        "original_url": "https://www.youtube.com/watch?v=8PuhFlojJ2s"
    },
    {
        "index": 69,
        "title": "EuroPython 2024 — Sponsor Highlight & Recruitment Fair",
        "url": "https://www.youtube.com/watch?v=HAxyE-UlIVQ",
        "video_id": "HAxyE-UlIVQ",
        "uploader": "EuroPython Conference",
        "uploader_id": "@EuroPythonConference",
        "uploader_url": "https://www.youtube.com/@EuroPythonConference",
        "upload_date": "20241002",
        "duration": 1135,
        "view_count": 36,
        "like_count": 0,
        "comment_count": null,
        "tags": [
            "europython",
            "python",
            "conference"
        ],
        "categories": [
            "Science & Technology"
        ],
        "description": "[EuroPython 2024 — South Hall 2A on 2024-07-11]\n\n\rSponsor Highlight & Recruitment Fair by None\n\rhttps://ep2024.europython.eu/session/sponsor-highlight-recruitment-fair\n\n\rMany of our sponsors are looking to hire talented people and EuroPython is the perfect place to reach out to them!\n\n\n\r---\n\rThis work is licensed under a Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License: https://creativecommons.org/licenses/by-nc-sa/4.0/",
        "thumbnail": "https://i.ytimg.com/vi/HAxyE-UlIVQ/maxresdefault.jpg",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=HAxyE-UlIVQ",
        "original_url": "https://www.youtube.com/watch?v=HAxyE-UlIVQ"
    },
    {
        "index": 70,
        "title": "RPA, TDD, and Embedded: A world glued together with Python! — Javier Alonso",
        "url": "https://www.youtube.com/watch?v=pSIOq6CdNRg",
        "video_id": "pSIOq6CdNRg",
        "uploader": "EuroPython Conference",
        "uploader_id": "@EuroPythonConference",
        "uploader_url": "https://www.youtube.com/@EuroPythonConference",
        "upload_date": "20241002",
        "duration": 1834,
        "view_count": 105,
        "like_count": 2,
        "comment_count": null,
        "tags": [
            "europython",
            "python",
            "conference"
        ],
        "categories": [
            "Science & Technology"
        ],
        "description": "[EuroPython 2024 — South Hall 2A on 2024-07-11]\n\n\rRPA, TDD, and Embedded: A world glued together with Python! by Javier Alonso\n\rhttps://ep2024.europython.eu/session/rpa-tdd-and-embedded-a-world-glued-together-with-python\n\n\rDo you know what _RPA_ means? Or _TDD?_ Or \"embedded\"? At least, for sure, you know what *Python* is 😉.\n\n\r\"RPA\" stands for \"Robotic Process Automation\", whereas \"TDD\" stands for \"Test Driven Development\". Those words usually refer to either the testing process or the automation of it. In the embedded world - the microcontroller one - it is usually easy to test features unitarily, but *hard to test them working within a bigger system.*\n\n\rTherefore... What is this everything about? In this talk [Robot Framework](https://robotframework.org/) is introduced as the tool to integrate almost everything! Firstly, [Robot Framework](https://robotframework.org/) is introduced: Explain its purpose, semantics, basic writing, etc. Then, we will dig a little into it and how to maximize its potential by tweaking the internal libraries and writing our own ones. Next, we will simulate a real embedded device which we require some integration testing: Exchange some messages, evaluate an external request, etc. And finally, we will glue all this together with [Robot Framework](https://robotframework.org/)!\n\n\rSounds interesting, right? Jump into this initialization talk for you to get introduced - or acquire more knowledge - into the embedded and testing world.\n\n\n\r---\n\rThis work is licensed under a Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License: https://creativecommons.org/licenses/by-nc-sa/4.0/",
        "thumbnail": "https://i.ytimg.com/vi/pSIOq6CdNRg/maxresdefault.jpg",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=pSIOq6CdNRg",
        "original_url": "https://www.youtube.com/watch?v=pSIOq6CdNRg"
    },
    {
        "index": 71,
        "title": "Mutation Testing in Python with Cosmic Ray — Austin Bingham",
        "url": "https://www.youtube.com/watch?v=5VQKTJikiqw",
        "video_id": "5VQKTJikiqw",
        "uploader": "EuroPython Conference",
        "uploader_id": "@EuroPythonConference",
        "uploader_url": "https://www.youtube.com/@EuroPythonConference",
        "upload_date": "20241002",
        "duration": 2445,
        "view_count": 154,
        "like_count": 2,
        "comment_count": null,
        "tags": [
            "europython",
            "python",
            "conference"
        ],
        "categories": [
            "Science & Technology"
        ],
        "description": "[EuroPython 2024 — South Hall 2A on 2024-07-11]\n\n\rMutation Testing in Python with Cosmic Ray by Austin Bingham\n\rhttps://ep2024.europython.eu/session/mutation-testing-in-python-with-cosmic-ray\n\n\rMutation testing is a technique for systematically mutating source code in order to validate test suites. It operates by making small changes to a program’s source code and then running a test suite; if the test suite ever succeeds on mutated code then a flag is raised. The goal is to check that a system’s test suite is sufficiently powerful to detect a large class of functionality-affecting changes, thereby helping ensure that the system functions as expected. While not in widespread use, mutation testing is a fascinating topic with great potential that has valuable lessons for the broader software development community.\n\n\rIn this talk we’ll look at Cosmic Ray, an open-source mutation testing tool for Python. Mutation testing presents some difficult and fascinating challenges - both conceptually and from an implementation point of view - so we’ll look at how Cosmic Ray addresses (or plans to address) these complexities. While some of these details will necessarily be Python-specific, there are lessons in Cosmic Ray for the development of mutation in any language.\n\n\rMutation testing is still a rather exotic testing technique, but it can produce genuinely useful and surprising results. To show this, we’ll look at a number of cases where Cosmic Ray has helped developers improve their test suites and tighten up their implementations.\n\n\n\r---\n\rThis work is licensed under a Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License: https://creativecommons.org/licenses/by-nc-sa/4.0/",
        "thumbnail": "https://i.ytimg.com/vi/5VQKTJikiqw/maxresdefault.jpg",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=5VQKTJikiqw",
        "original_url": "https://www.youtube.com/watch?v=5VQKTJikiqw"
    },
    {
        "index": 72,
        "title": "CompiledPoem.py: Teaching about diversity and Python through poem — Soraya Roberta",
        "url": "https://www.youtube.com/watch?v=pDyub-6d_9k",
        "video_id": "pDyub-6d_9k",
        "uploader": "EuroPython Conference",
        "uploader_id": "@EuroPythonConference",
        "uploader_url": "https://www.youtube.com/@EuroPythonConference",
        "upload_date": "20241002",
        "duration": 1593,
        "view_count": 41,
        "like_count": 1,
        "comment_count": null,
        "tags": [
            "europython",
            "python",
            "conference"
        ],
        "categories": [
            "Science & Technology"
        ],
        "description": "[EuroPython 2024 — South Hall 2B on 2024-07-11]\n\n\rCompiledPoem.py: Teaching about diversity and Python through poem by Soraya Roberta\n\rhttps://ep2024.europython.eu/session/compiledpoem-py-teaching-about-diversity-and-python-through-poem\n\n\rTeaching how to program in Python has various approaches, but it becomes motivating when we work with concepts about diversity through poems. This talk will show how a project that aims to teach Python using poems and that grew hand in hand with the Python community has been changing the lives of children and, currently, teachers in a country in the global south. In order to demonstrate it, I will teach you how to create function blocks, conditional and looping structures in an easy and empowering way, while discussing topics such as racism, xenophobia, homophobia, and sexism, for example, through Python code integrated with poetry.\n\n\n\r---\n\rThis work is licensed under a Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License: https://creativecommons.org/licenses/by-nc-sa/4.0/",
        "thumbnail": "https://i.ytimg.com/vi/pDyub-6d_9k/maxresdefault.jpg",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=pDyub-6d_9k",
        "original_url": "https://www.youtube.com/watch?v=pDyub-6d_9k"
    },
    {
        "index": 73,
        "title": "GraalPy - Fast Python Implementation — Štěpán Šindelář, Tim Felgentreff",
        "url": "https://www.youtube.com/watch?v=J9UVzSQD8Lc",
        "video_id": "J9UVzSQD8Lc",
        "uploader": "EuroPython Conference",
        "uploader_id": "@EuroPythonConference",
        "uploader_url": "https://www.youtube.com/@EuroPythonConference",
        "upload_date": "20241002",
        "duration": 1367,
        "view_count": 283,
        "like_count": 7,
        "comment_count": null,
        "tags": [
            "europython",
            "python",
            "conference"
        ],
        "categories": [
            "Science & Technology"
        ],
        "description": "[EuroPython 2024 — South Hall 2B on 2024-07-11]\n\n\rGraalPy - Fast Python Implementation by Štěpán Šindelář, Tim Felgentreff\n\rhttps://ep2024.europython.eu/session/graalpy-fast-python-implementation\n\n\rGraalPy is the fast Python implementation built on GraalVM. We run PyTorch and TensorFlow and ML models from Huggingface.co. We execute the test suites of the top 600 PyPI packages every day and are the most compatible alternative implementation of Python to date. We can JIT pure Python code to the same speed as code rewritten in Cython:  https://twitter.com/timfelgentreff/status/1760597779250839820. We are the most seamless and performant choice for integration with Java in both directions, including Jython compatibility mode.\n\n\rIn this talk, we want to show what's possible today with GraalPy and why you might choose it for your projects: for its performance, integration with Java and other languages, or sandboxing and distribution features.\n\n\n\r---\n\rThis work is licensed under a Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License: https://creativecommons.org/licenses/by-nc-sa/4.0/",
        "thumbnail": "https://i.ytimg.com/vi/J9UVzSQD8Lc/maxresdefault.jpg",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=J9UVzSQD8Lc",
        "original_url": "https://www.youtube.com/watch?v=J9UVzSQD8Lc"
    },
    {
        "index": 74,
        "title": "Why communication is the best skill you can develop as a programmer — Miriam Forner",
        "url": "https://www.youtube.com/watch?v=-Gjb4vpD_oM",
        "video_id": "-Gjb4vpD_oM",
        "uploader": "EuroPython Conference",
        "uploader_id": "@EuroPythonConference",
        "uploader_url": "https://www.youtube.com/@EuroPythonConference",
        "upload_date": "20241002",
        "duration": 1819,
        "view_count": 147,
        "like_count": 9,
        "comment_count": null,
        "tags": [
            "europython",
            "python",
            "conference"
        ],
        "categories": [
            "Science & Technology"
        ],
        "description": "[EuroPython 2024 — South Hall 2B on 2024-07-11]\n\n\rWhy communication is the best skill you can develop as a programmer by Miriam Forner\n\rhttps://ep2024.europython.eu/session/why-communication-is-the-best-skill-you-can-develop-as-a-programmer\n\n\rAs engineers, aspiring or experienced, we can become so focused on growing our technical skills that we forget about the basics. The ability to communicate well can be seen as a skill needed by leaders, managers or client-facing colleagues, but in reality it forms the basis of the quality of our work. From understanding client requirements, to code reviews and even naming variables, communication is a fundamental part of our profession and something we could all benefit from being more conscious of.\n\n\rIn this open-to-all-levels talk we’ll discuss in what situations we should pay closer attention to our style of communication, explore the role of empathy in writing and reviewing code and cover tips and tricks for both making yourself understood and better understanding others.\n\n\n\r---\n\rThis work is licensed under a Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License: https://creativecommons.org/licenses/by-nc-sa/4.0/",
        "thumbnail": "https://i.ytimg.com/vi/-Gjb4vpD_oM/maxresdefault.jpg",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=-Gjb4vpD_oM",
        "original_url": "https://www.youtube.com/watch?v=-Gjb4vpD_oM"
    },
    {
        "index": 75,
        "title": "An alternative view on the OpenAPI documentation. — Maxim Danilov",
        "url": "https://www.youtube.com/watch?v=EJ0rJ8TMmqU",
        "video_id": "EJ0rJ8TMmqU",
        "uploader": "EuroPython Conference",
        "uploader_id": "@EuroPythonConference",
        "uploader_url": "https://www.youtube.com/@EuroPythonConference",
        "upload_date": "20241002",
        "duration": 1872,
        "view_count": 101,
        "like_count": 4,
        "comment_count": null,
        "tags": [
            "europython",
            "python",
            "conference"
        ],
        "categories": [
            "Science & Technology"
        ],
        "description": "[EuroPython 2024 — South Hall 2B on 2024-07-11]\n\n\rAn alternative view on the OpenAPI documentation. by Maxim Danilov\n\rhttps://ep2024.europython.eu/session/an-alternative-view-on-the-openapi-documentation\n\n\rDocumenting Python project endpoints is a real challenge in API development. Poor readability, versioning, and lack of authentication information - this all reduce the usability of existing OpenAPI documentation. The different libraries offers us a good start for autogenerated OpenAPI documentation for our endpoints, but in this talk we will discuss an alternative way to auto generated documentation for our APIs.\n\n\n\r---\n\rThis work is licensed under a Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License: https://creativecommons.org/licenses/by-nc-sa/4.0/",
        "thumbnail": "https://i.ytimg.com/vi/EJ0rJ8TMmqU/maxresdefault.jpg",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=EJ0rJ8TMmqU",
        "original_url": "https://www.youtube.com/watch?v=EJ0rJ8TMmqU"
    },
    {
        "index": 76,
        "title": "EuroPython 2024 — Open Source Sustainability Panel",
        "url": "https://www.youtube.com/watch?v=9BatwohOxiQ",
        "video_id": "9BatwohOxiQ",
        "uploader": "EuroPython Conference",
        "uploader_id": "@EuroPythonConference",
        "uploader_url": "https://www.youtube.com/@EuroPythonConference",
        "upload_date": "20241002",
        "duration": 3596,
        "view_count": 66,
        "like_count": 2,
        "comment_count": null,
        "tags": [
            "europython",
            "python",
            "conference"
        ],
        "categories": [
            "Science & Technology"
        ],
        "description": "[EuroPython 2024 — South Hall 2B on 2024-07-11]\n\n\rOpen Source Sustainability Panel by Armin Ronacher, Çağıl Uluşahin Sönmez, Artur Czepiel, Deb Nicholson, Anwesha Das, Samuel Colvin\n\rhttps://ep2024.europython.eu/session/open-source-sustainability-panel\n\n\rThe motivation behind this panel is to provide insights to the audience with regards to funding open source projects, manage the community interaction, and options people might find attractive in order to be paid while doing Open source.\n\n\rWe can also observe the sustainability of a project by the amount of contributors, even if it’s code or activities around it like conferences, communities, and NGOs that support the ecosystem.\n\n\n\r---\n\rThis work is licensed under a Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License: https://creativecommons.org/licenses/by-nc-sa/4.0/",
        "thumbnail": "https://i.ytimg.com/vi/9BatwohOxiQ/maxresdefault.jpg",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=9BatwohOxiQ",
        "original_url": "https://www.youtube.com/watch?v=9BatwohOxiQ"
    },
    {
        "index": 77,
        "title": "Many ways to be a Python contributor — Paolo Melchiorre",
        "url": "https://www.youtube.com/watch?v=gOEGAVGJB08",
        "video_id": "gOEGAVGJB08",
        "uploader": "EuroPython Conference",
        "uploader_id": "@EuroPythonConference",
        "uploader_url": "https://www.youtube.com/@EuroPythonConference",
        "upload_date": "20241002",
        "duration": 1733,
        "view_count": 111,
        "like_count": 3,
        "comment_count": null,
        "tags": [
            "europython",
            "python",
            "conference"
        ],
        "categories": [
            "Science & Technology"
        ],
        "description": "[EuroPython 2024 — South Hall 2B on 2024-07-11]\n\n\rMany ways to be a Python contributor by Paolo Melchiorre\n\rhttps://ep2024.europython.eu/session/many-ways-to-be-a-python-contributor\n\n\r**Python** is an increasingly used language and the number of potential contributors is growing increasingly.\n\n\r**Newcomers** to the community have a lot of documentation to guide them to transform from mere users to contributors.\n\n\rThere are many ways to **contribute** to Python or one of its packages or frameworks, and we will try to see some of them together.\n\n\rIn this talk, new Python developers will discover new ways to get involved in the community, and **community members** will get ideas for getting new people involved.\n\n\rMore info on my website 👇\n\rhttps://www.paulox.net/2024/07/11/europython-2024/\n\n\n\r---\n\rThis work is licensed under a Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License: https://creativecommons.org/licenses/by-nc-sa/4.0/",
        "thumbnail": "https://i.ytimg.com/vi/gOEGAVGJB08/maxresdefault.jpg",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=gOEGAVGJB08",
        "original_url": "https://www.youtube.com/watch?v=gOEGAVGJB08"
    },
    {
        "index": 78,
        "title": "Python Unplugged: Mining for Hidden 'Batteries — Torsten Zielke",
        "url": "https://www.youtube.com/watch?v=W5ZOFvGmmbo",
        "video_id": "W5ZOFvGmmbo",
        "uploader": "EuroPython Conference",
        "uploader_id": "@EuroPythonConference",
        "uploader_url": "https://www.youtube.com/@EuroPythonConference",
        "upload_date": "20241002",
        "duration": 2775,
        "view_count": 101,
        "like_count": 7,
        "comment_count": null,
        "tags": [
            "europython",
            "python",
            "conference"
        ],
        "categories": [
            "Science & Technology"
        ],
        "description": "[EuroPython 2024 — South Hall 2B on 2024-07-11]\n\n\rPython Unplugged: Mining for Hidden 'Batteries by Torsten Zielke\n\rhttps://ep2024.europython.eu/session/python-unplugged-mining-for-hidden-batteries\n\n\rPython prides itself on its 'batteries included' philosophy, but beyond the well-trodden modules lie hidden gems awaiting discovery. This talk ventures into the depths of the Python standard library to unearth lesser-known features from itertools, collections, functools, typing and more.\n\n\rAll of these tools are already built into every standard python installation and no \"(uv) pip install\" is necessary.\n\n\rMany if not all of those are likely already known to old fashioned pythonistas, but for beginners (1-2years) there will be something new to learn, while for intermediate python developers there might be at least a few more gems to discover.\n\n\rBy delving into these underutilized modules, attendees will gain a richer understanding of Python's built-in capabilities and learn how to write more pythonic code.\n\n00:00 Introduction\n05:30 Chapter 1: Fetching data\n05:42 urllib\n06:48 TypedDict\n09:02 Batching\n09:44 islice\n11:10 batched\n11:50 DictWriter\n15:32 Chapter 2: Cleaning data\n17:22 pairwise\n19:16 chain\n22:20 ChainMap¹\n23:36 Multiple Context Managers\n25:54 Doctest\n27:44 yield from\n29:44 misusing return value in generators\n33:03 NamedTuple²\n33:06 Chapter 3: Processing data\n34:51 defaultdict\n36:28 Counter\n39:55 groupby\n43:10 reduce / tee\n\nCorrections\n22:21 ¹itertools.ChainMap is wrong: collections.ChainMap is right\n33:06 ²We also need to yield one more time at the end for the case, where the last books are lost books. Maybe even yield namedtuple(book: Book, lost: bool)\n\n\r---\n\rThis work is licensed under a Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License: https://creativecommons.org/licenses/by-nc-sa/4.0/",
        "thumbnail": "https://i.ytimg.com/vi/W5ZOFvGmmbo/maxresdefault.jpg",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=W5ZOFvGmmbo",
        "original_url": "https://www.youtube.com/watch?v=W5ZOFvGmmbo"
    },
    {
        "index": 79,
        "title": "Profile, Optimize, Repeat: One Core Is All You Need™ — Valentin Nieper, Jonathan Striebel",
        "url": "https://www.youtube.com/watch?v=gQAxGKPJsGc",
        "video_id": "gQAxGKPJsGc",
        "uploader": "EuroPython Conference",
        "uploader_id": "@EuroPythonConference",
        "uploader_url": "https://www.youtube.com/@EuroPythonConference",
        "upload_date": "20241002",
        "duration": 2494,
        "view_count": 144,
        "like_count": 1,
        "comment_count": null,
        "tags": [
            "europython",
            "python",
            "conference"
        ],
        "categories": [
            "Science & Technology"
        ],
        "description": "[EuroPython 2024 — Terrace 2A on 2024-07-11]\n\n\rProfile, Optimize, Repeat: One Core Is All You Need™ by Valentin Nieper, Jonathan Striebel\n\rhttps://ep2024.europython.eu/session/profile-optimize-repeat-one-core-is-all-you-needtm\n\n\rYour data analysis pipeline works. Nice!\n\rCould it be faster? Probably.\n\rDo you need to parallelize? Not yet.\n\n\rDiscover optimization steps that boost the performance of your data analysis pipeline on a single core, reducing time & costs.\n\n\rThis walkthrough shows tools to identify bottlenecks via profiling, and strategies to mitigate those, demonstrating them in an example. To improve our memory and runtime performance we will use numpy, numba jit-ing and pybind11 extensions.\n\n\n\r---\n\rThis work is licensed under a Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License: https://creativecommons.org/licenses/by-nc-sa/4.0/",
        "thumbnail": "https://i.ytimg.com/vi/gQAxGKPJsGc/maxresdefault.jpg",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=gQAxGKPJsGc",
        "original_url": "https://www.youtube.com/watch?v=gQAxGKPJsGc"
    },
    {
        "index": 80,
        "title": "Forecasting the future with EarthPT — Mike Smith",
        "url": "https://www.youtube.com/watch?v=Y8wb8D7TdwA",
        "video_id": "Y8wb8D7TdwA",
        "uploader": "EuroPython Conference",
        "uploader_id": "@EuroPythonConference",
        "uploader_url": "https://www.youtube.com/@EuroPythonConference",
        "upload_date": "20241002",
        "duration": 1799,
        "view_count": 83,
        "like_count": 4,
        "comment_count": null,
        "tags": [
            "europython",
            "python",
            "conference"
        ],
        "categories": [
            "Science & Technology"
        ],
        "description": "[EuroPython 2024 — Terrace 2A on 2024-07-11]\n\n\rForecasting the future with EarthPT by Mike Smith\n\rhttps://ep2024.europython.eu/session/forecasting-the-future-with-earthpt\n\n\rWe introduce EarthPT -- an open source Earth Observation (EO) pretrained transformer written in Python and PyTorch. EarthPT is a 700 million parameter decoding transformer foundation model trained in an autoregressive self-supervised manner and developed specifically with EO use-cases in mind. \n\n\rEarthPT is trained on time series derived from satellite imagery, and can accurately predict future pixel-level surface reflectances across the 400-2300 nm range well into the future. For example, forecasts of the evolution of the Normalised Difference Vegetation Index (NDVI) have a typical error of approximately 0.05 (over a natural range of -1 - 1) at the pixel level over a five month test set horizon, out-performing simple phase-folded models based on historical averaging. We also demonstrate that embeddings learnt by EarthPT hold semantically meaningful information and could be exploited for downstream tasks such as highly granular, dynamic land use classification, crop yield, and drought prediction. \n\n\rExcitingly, we note that the abundance of EO data provides us with -- in theory -- quadrillions of training tokens. Therefore, if we assume that EarthPT follows neural scaling laws akin to those derived for Large Language Models (LLMs), there is currently no data-imposed limit to scaling EarthPT and other similar ‘Large Observation Models.’\n\n\rEarthPT is released under the MIT licence here: https://github.com/aspiaspace/EarthPT.\n\n\n\r---\n\rThis work is licensed under a Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License: https://creativecommons.org/licenses/by-nc-sa/4.0/",
        "thumbnail": "https://i.ytimg.com/vi/Y8wb8D7TdwA/maxresdefault.jpg",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=Y8wb8D7TdwA",
        "original_url": "https://www.youtube.com/watch?v=Y8wb8D7TdwA"
    },
    {
        "index": 81,
        "title": "NLP Application in Cases of Violence Against Women — Deborah Foroni",
        "url": "https://www.youtube.com/watch?v=UkIMadZF3BY",
        "video_id": "UkIMadZF3BY",
        "uploader": "EuroPython Conference",
        "uploader_id": "@EuroPythonConference",
        "uploader_url": "https://www.youtube.com/@EuroPythonConference",
        "upload_date": "20241002",
        "duration": 1682,
        "view_count": 62,
        "like_count": 1,
        "comment_count": null,
        "tags": [
            "europython",
            "python",
            "conference"
        ],
        "categories": [
            "Science & Technology"
        ],
        "description": "[EuroPython 2024 — Terrace 2A on 2024-07-11]\n\n\rNLP Application in Cases of Violence Against Women by Deborah Foroni\n\rhttps://ep2024.europython.eu/session/nlp-application-in-cases-of-violence-against-women\n\n\rDomestic violence is a widespread problem, one which demands attention and policy fixes. But available data is largely unstructured, making analysis difficult for both researchers and policy makers. In this talk, I'll show you how Python helped me to retrieve, structure, and classify violence victims' testimony. I'll show which APIs and libraries allowed me to retrieve the woman's testimony from YouTube, turn their speech into text, and then analyze the text itself. You'll come away knowing not just some new Python techniques, but also how those techniques can be used to improve our society.\n\n\r---\n\rThis work is licensed under a Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License: https://creativecommons.org/licenses/by-nc-sa/4.0/",
        "thumbnail": "https://i.ytimg.com/vi/UkIMadZF3BY/maxresdefault.jpg",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=UkIMadZF3BY",
        "original_url": "https://www.youtube.com/watch?v=UkIMadZF3BY"
    },
    {
        "index": 82,
        "title": "How to destroy the world using Python and a synthetic virus — Helena Gómez Pozo, Marina Moro López",
        "url": "https://www.youtube.com/watch?v=t8l771y299c",
        "video_id": "t8l771y299c",
        "uploader": "EuroPython Conference",
        "uploader_id": "@EuroPythonConference",
        "uploader_url": "https://www.youtube.com/@EuroPythonConference",
        "upload_date": "20241002",
        "duration": 1765,
        "view_count": 122,
        "like_count": 2,
        "comment_count": null,
        "tags": [
            "europython",
            "python",
            "conference"
        ],
        "categories": [
            "Science & Technology"
        ],
        "description": "[EuroPython 2024 — Terrace 2A on 2024-07-11]\n\n\rHow to destroy the world using Python and a synthetic virus by Helena Gómez Pozo, Marina Moro López\n\rhttps://ep2024.europython.eu/session/how-to-destroy-the-world-using-python-and-a-synthetic-virus\n\n\rWould you believe us if we told you that we could create a potentially dangerous virus using Python? This is theoretically possible thanks to synthetic biology, the field of biotechnology that studies how to create and modify organisms. This discipline is used, for example, to genetically modify bacteria to produce the insulin that diabetics will later use. Obviously, such a powerful tool has its possible evil side, which is what we will explore in this talk. After a little biology and genetics class, we will explain a practical example of how to use synthetic biology through a Python script to modify an existing virus and turn it into a deadly one. Thus, you as an attendee will be able to see the potential of this field and how Python can make it easier, not only in the example of the evil virus, but also in other healthcare applications.\n\n\n\r---\n\rThis work is licensed under a Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License: https://creativecommons.org/licenses/by-nc-sa/4.0/",
        "thumbnail": "https://i.ytimg.com/vi/t8l771y299c/maxresdefault.jpg",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=t8l771y299c",
        "original_url": "https://www.youtube.com/watch?v=t8l771y299c"
    },
    {
        "index": 83,
        "title": "Python on the Rocks: Crafting a Smooth Blend with RocksDB — Ria Bhatia",
        "url": "https://www.youtube.com/watch?v=kb4uUuRfzSI",
        "video_id": "kb4uUuRfzSI",
        "uploader": "EuroPython Conference",
        "uploader_id": "@EuroPythonConference",
        "uploader_url": "https://www.youtube.com/@EuroPythonConference",
        "upload_date": "20241002",
        "duration": 1707,
        "view_count": 7896,
        "like_count": 1277,
        "comment_count": null,
        "tags": [
            "europython",
            "python",
            "conference"
        ],
        "categories": [
            "Science & Technology"
        ],
        "description": "[EuroPython 2024 — Terrace 2A on 2024-07-11]\n\n\rPython on the Rocks: Crafting a Smooth Blend with RocksDB by Ria Bhatia\n\rhttps://ep2024.europython.eu/session/python-on-the-rocks-crafting-a-smooth-blend-with-rocksdb\n\n\rWhen it comes to selecting a high-performance database for your application, RocksDB emerges as a top contender, offering a lightweight and efficient solution. RocksDB brings a robust set of features to the table, but what lies beneath its surface? Let's dive into the world of RocksDB with Python, uncovering the mysteries of its internal workings and exploring the principles that make data storage and retrieval seamlessly efficient. Get ready to equip yourself with the knowledge to harness the full potential of RocksDB and elevate your applications to new heights.\n\n\n\r---\n\rThis work is licensed under a Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License: https://creativecommons.org/licenses/by-nc-sa/4.0/",
        "thumbnail": "https://i.ytimg.com/vi/kb4uUuRfzSI/maxresdefault.jpg",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=kb4uUuRfzSI",
        "original_url": "https://www.youtube.com/watch?v=kb4uUuRfzSI"
    },
    {
        "index": 84,
        "title": "Mastering Design Patterns: Crafting Elegant Solutions with a Confidence — Petr Balogh",
        "url": "https://www.youtube.com/watch?v=t5HlKbKo-Lo",
        "video_id": "t5HlKbKo-Lo",
        "uploader": "EuroPython Conference",
        "uploader_id": "@EuroPythonConference",
        "uploader_url": "https://www.youtube.com/@EuroPythonConference",
        "upload_date": "20241002",
        "duration": 1676,
        "view_count": 291,
        "like_count": 8,
        "comment_count": null,
        "tags": [
            "europython",
            "python",
            "conference"
        ],
        "categories": [
            "Science & Technology"
        ],
        "description": "[EuroPython 2024 — Terrace 2A on 2024-07-11]\n\n\rMastering Design Patterns: Crafting Elegant Solutions with a Confidence by Petr Balogh\n\rhttps://ep2024.europython.eu/session/mastering-design-patterns-crafting-elegant-solutions-with-a-confidence\n\n\rJoin us for an illuminating 30-minute journey into the world of design patterns at EuroPython 2024. Design patterns aren't just abstract concepts; they are the architectural blueprints that empower developers to create elegant and maintainable software solutions. In this session, we bridge the gap between theory and practice, offering practical insights for developers of all levels.\n\n\rWe'll delve into a curated selection of design patterns, from foundational creational patterns to advanced behavioral patterns, showcasing their real-world applications and transformative impact on Python development. Through a blend of theory and practice, attendees will gain a comprehensive understanding of how to identify common design problems and apply appropriate patterns to solve them efficiently.\n\n\rUsing engaging examples and hands-on exercises, we'll equip attendees with the knowledge and skills needed to architect cleaner, more maintainable codebases. Whether you're a seasoned veteran or a curious novice, this presentation offers a comprehensive roadmap for mastering Python design patterns and architecting software solutions with grace.\n\n\n\r---\n\rThis work is licensed under a Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License: https://creativecommons.org/licenses/by-nc-sa/4.0/",
        "thumbnail": "https://i.ytimg.com/vi/t5HlKbKo-Lo/maxresdefault.jpg",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=t5HlKbKo-Lo",
        "original_url": "https://www.youtube.com/watch?v=t5HlKbKo-Lo"
    },
    {
        "index": 85,
        "title": "Caching for Jupyter Notebooks — Lauris Jullien",
        "url": "https://www.youtube.com/watch?v=I7qaymTPzbU",
        "video_id": "I7qaymTPzbU",
        "uploader": "EuroPython Conference",
        "uploader_id": "@EuroPythonConference",
        "uploader_url": "https://www.youtube.com/@EuroPythonConference",
        "upload_date": "20241002",
        "duration": 1730,
        "view_count": 106,
        "like_count": 4,
        "comment_count": null,
        "tags": [
            "europython",
            "python",
            "conference"
        ],
        "categories": [
            "Science & Technology"
        ],
        "description": "[EuroPython 2024 — Terrace 2A on 2024-07-11]\n\n\rCaching for Jupyter Notebooks by Lauris Jullien\n\rhttps://ep2024.europython.eu/session/caching-for-jupyter-notebooks\n\n\rCaching data and calculation results in jupyter notebooks is a great way to speed up development by making expensive cells easier to re-run.\n\n\rData scientists and developers using notebooks on a daily basis, can improve their notebook workflow with low-effort changes in the notebook code, cut the time spent waiting and reduce context switches.\n\n\rThis talk targets developers and data scientist of all experience levels and will cover:\n\n\rWhy caching in notebooks?\n\rSetting up the context in which developers and data scientists use notebooks for exploratory work and how caching is relevant in it.\n\n\rWhat is caching\n\rQuick definition of caching, introducing the different types of persistence (in-memory, on disk, database, object storage …), cache invalidation strategies (parameters, code changes, ttl, …), with some cautionary comments about data security when caching protected data.\n\n\rCaching Techniques \n\rGoing through readily available options from the python standard library, and how to use them in notebooks. Introducing a few off-the-shelves options like ipython % magics, and cachetools.\n\rShowcasing how one would build their own mini-caching framework, that fits for their specific use case, using pandas and spark for the example\n\rExplaining when to stop trying to cache, and keeping the caching framework mini, what are the signs that caching went overboard.\n\n\n\r---\n\rThis work is licensed under a Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License: https://creativecommons.org/licenses/by-nc-sa/4.0/",
        "thumbnail": "https://i.ytimg.com/vi/I7qaymTPzbU/maxresdefault.jpg",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=I7qaymTPzbU",
        "original_url": "https://www.youtube.com/watch?v=I7qaymTPzbU"
    },
    {
        "index": 86,
        "title": "Creating Your Own Extensions for JupyterLab — Daniel Goldfarb",
        "url": "https://www.youtube.com/watch?v=WPg9S8o9kBI",
        "video_id": "WPg9S8o9kBI",
        "uploader": "EuroPython Conference",
        "uploader_id": "@EuroPythonConference",
        "uploader_url": "https://www.youtube.com/@EuroPythonConference",
        "upload_date": "20241002",
        "duration": 2492,
        "view_count": 443,
        "like_count": 12,
        "comment_count": null,
        "tags": [
            "europython",
            "python",
            "conference"
        ],
        "categories": [
            "Science & Technology"
        ],
        "description": "[EuroPython 2024 — Terrace 2A on 2024-07-11]\n\n\rCreating Your Own Extensions for JupyterLab by Daniel Goldfarb\n\rhttps://ep2024.europython.eu/session/creating-your-own-extensions-for-jupyterlab\n\n\rHave you ever wished for a feature in Jupyter Notebooks or JupyterLab that wasn't already there?  Or perhaps you've found yourself doing complex or repetitive tasks and realized that you, and others, could benefit from integrating those tasks into JupyterLab?  This is your chance to learn how to add that feature, or integrate that task, yourself.\n\n\rJupyterLab enables you to work with Jupyter notebooks, text editors, terminals, and custom components in a flexible, integrated, and extensible manner.\n\n\rThis talk presents a practical tutorial about how to extend JupyterLab.  We focus on understanding the underlying extension support infrastructure, as we walk through a step-by-step example of creating an app in JupyterLab.  We will learn, among other things, how to launch that app from different places within JupyterLab, how to style our app, and how to pass parameters to our app to modify its behavior.\n\n\rPrerequisites:\n\r- Attendees should have some familiarity with Jupyter Notebooks and/or JupyterLab.\n\r- Attendees must have solid experience with _any_ typical object-oriented programming language (i.e. a good understanding of classes, objects, and inheritance).\n\n\n\r---\n\rThis work is licensed under a Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License: https://creativecommons.org/licenses/by-nc-sa/4.0/",
        "thumbnail": "https://i.ytimg.com/vi/WPg9S8o9kBI/maxresdefault.jpg",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=WPg9S8o9kBI",
        "original_url": "https://www.youtube.com/watch?v=WPg9S8o9kBI"
    },
    {
        "index": 87,
        "title": "When and how to start coding with kids — Anna-Lena Popkes",
        "url": "https://www.youtube.com/watch?v=mJ8FLAK3ctY",
        "video_id": "mJ8FLAK3ctY",
        "uploader": "EuroPython Conference",
        "uploader_id": "@EuroPythonConference",
        "uploader_url": "https://www.youtube.com/@EuroPythonConference",
        "upload_date": "20241002",
        "duration": 2661,
        "view_count": 161,
        "like_count": 4,
        "comment_count": null,
        "tags": [
            "europython",
            "python",
            "conference"
        ],
        "categories": [
            "Science & Technology"
        ],
        "description": "[EuroPython 2024 — Terrace 2B on 2024-07-11]\n\n\rWhen and how to start coding with kids by Anna-Lena Popkes\n\rhttps://ep2024.europython.eu/session/when-and-how-to-start-coding-with-kids\n\n\rOur world is driven by technology and there are many reasons to teach our kids how to code. For example, coding allows them to develop logical reasoning skills and teaches attention to detail. Allowing children to discover how much fun coding can be supports them in their development and opens many doors for their future.\n\n\rBut when and how should we start coding with kids? This talk will approach the question from a scientific perspective, looking into how children's brains develop, how children learn and how to best teach them coding abilities. It will answer important questions like \"At what age can a child start coding?\" or \"What are the benefits of learning to code?\". It will also present possible starting points, like learning platforms or tutorials.\n\n\n\r---\n\rThis work is licensed under a Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License: https://creativecommons.org/licenses/by-nc-sa/4.0/",
        "thumbnail": "https://i.ytimg.com/vi/mJ8FLAK3ctY/maxresdefault.jpg",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=mJ8FLAK3ctY",
        "original_url": "https://www.youtube.com/watch?v=mJ8FLAK3ctY"
    },
    {
        "index": 88,
        "title": "Best practices for securely consuming open source in Python — Ciara Carey",
        "url": "https://www.youtube.com/watch?v=TUH_nI9XrxM",
        "video_id": "TUH_nI9XrxM",
        "uploader": "EuroPython Conference",
        "uploader_id": "@EuroPythonConference",
        "uploader_url": "https://www.youtube.com/@EuroPythonConference",
        "upload_date": "20241002",
        "duration": 1972,
        "view_count": 148,
        "like_count": 0,
        "comment_count": null,
        "tags": [
            "europython",
            "python",
            "conference"
        ],
        "categories": [
            "Science & Technology"
        ],
        "description": "[EuroPython 2024 — Terrace 2B on 2024-07-11]\n\n\rBest practices for securely consuming open source in Python by Ciara Carey\n\rhttps://ep2024.europython.eu/session/best-practices-for-securely-consuming-open-source-in-python\n\n\rThe Python development landscape thrives on the extensive use of open-source libraries and frameworks. However, the growing prevalence of attacks targeting OSS underscores the need for robust security measures to consume open source. \n\n\rIn this talk, we'll examine how the Secure Supply Chain Consumption Framework (S2C2F) can guide organizations in securely consuming Python OSS, utilizing tools such as pip, artifact managment, sboms and Dependabot. \n\n\rThe S2C2F Framework was developed by Microsoft and later donated to the Open Source Security Foundation (OpenSSF). It provides a structured approach to enhancing the security of OSS consumption. \n\n\rWe'll provide an overview of its core principles and maturity levels and discuss practical strategies for implementing S2C2F principles within Python projects, including dependency management with pip, artifact management, sboms, signatures, deny rules, forking policies and automated security updates with Dependabot.\n\n\rThe S2C2F is a pragmatic approach to securing how you consume OSS.\n\r It emphasizes the fundamental principles of knowing your OSS, preventing the introduction of vulnerable packages, and maintaining robust patch management.\n\n\rYou will come away from this talk with practical tips and best practices on how to securely consume open source in python.\n\n\n\r---\n\rThis work is licensed under a Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License: https://creativecommons.org/licenses/by-nc-sa/4.0/",
        "thumbnail": "https://i.ytimg.com/vi/TUH_nI9XrxM/maxresdefault.jpg",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=TUH_nI9XrxM",
        "original_url": "https://www.youtube.com/watch?v=TUH_nI9XrxM"
    },
    {
        "index": 89,
        "title": "Counting down for CRA - updates and expectations — Cheuk Ting Ho, Deb Nicholson",
        "url": "https://www.youtube.com/watch?v=ZyC7c5fxr3A",
        "video_id": "ZyC7c5fxr3A",
        "uploader": "EuroPython Conference",
        "uploader_id": "@EuroPythonConference",
        "uploader_url": "https://www.youtube.com/@EuroPythonConference",
        "upload_date": "20241002",
        "duration": 1823,
        "view_count": 123,
        "like_count": 3,
        "comment_count": null,
        "tags": [
            "europython",
            "python",
            "conference"
        ],
        "categories": [
            "Science & Technology"
        ],
        "description": "[EuroPython 2024 — Terrace 2B on 2024-07-11]\n\n\rCounting down for CRA - updates and expectations by Cheuk Ting Ho, Deb Nicholson\n\rhttps://ep2024.europython.eu/session/counting-down-for-cra-updates-and-expectations\n\n\rThe EU Commission is likely to vote on the Cyber Resilience Act (CRA) later this year. The CRA is an ambitious step towards protecting consumers from software security issues by creating a new list of responsibilities for software developers and providers. The Act also creates a new category of actor known as an “Open Source Steward” which we think makes important allowances for public open source repositories like CPython and Python Package Index (PyPI.) Once the dust settles, everyone who makes software will need to consider the CRA’s mandates in their security roadmaps. \n\n\rIn this talk we will look at the timeline for the new legislation, any critical discussions happening around implementation and most importantly, the new responsibilities outlined by the CRA. We’ll also discuss what the PSF is doing for CPython and for PyPI and what each of us in the Python ecosystem might want to do to get ready for a new era of increased certainty – and liability – around security. \n\n\r## Target audience\n\n\rDevelopers and maintainers whose project or product may be affected by the CRA. European legislation won’t just affect the European market, it will affect the software industry and the open source community globally as it is very hard to segregate one project or product from the EU market. So, this is for everyone in the Python community who shares their code with the world. \n\n\r## Goal\n\n\rTo educate the general public about CRA - how it can affect us and how to get ready for it. We also want to provide more information for the Python community about what has been done by the PSF regarding the CRA to reassure them that the Python community is aware and getting prepared for the CRA.\n\n\n\r---\n\rThis work is licensed under a Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License: https://creativecommons.org/licenses/by-nc-sa/4.0/",
        "thumbnail": "https://i.ytimg.com/vi/ZyC7c5fxr3A/maxresdefault.jpg",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=ZyC7c5fxr3A",
        "original_url": "https://www.youtube.com/watch?v=ZyC7c5fxr3A"
    },
    {
        "index": 90,
        "title": "logger.info(f\"Don't Give all your {secrets} away\") — Tamar Galer",
        "url": "https://www.youtube.com/watch?v=4uci2RiTsyw",
        "video_id": "4uci2RiTsyw",
        "uploader": "EuroPython Conference",
        "uploader_id": "@EuroPythonConference",
        "uploader_url": "https://www.youtube.com/@EuroPythonConference",
        "upload_date": "20241002",
        "duration": 1462,
        "view_count": 114,
        "like_count": 3,
        "comment_count": null,
        "tags": [
            "europython",
            "python",
            "conference"
        ],
        "categories": [
            "Science & Technology"
        ],
        "description": "[EuroPython 2024 — Terrace 2B on 2024-07-11]\n\n\rlogger.info(f\"Don't Give all your {secrets} away\") by Tamar Galer\n\rhttps://ep2024.europython.eu/session/logger-info-f-don-t-give-all-your-secrets-away\n\n\rIn my seven years as a software developer, I've primarily worked in teams composed solely of developers. However, my recent transition to a team of security researchers has opened my eyes to a crucial aspect that often goes unnoticed: log safety in applications.\n\n\rMy exposure to the application security ecosystem and real-life security breach analysis has opened my eyes to recognize code security issues, including the prevalence of sensitive information, tokens,  passwords, and payment details, in plaintext logs. This may lead to severe data breaches, financial losses, and all kinds of catastrophes.\n\n\rThis talk will dive into the fatal mistakes developers often make that can result in the disclosure of sensitive information in logs. We'll explore the types of sensitive data in logs.\n\n\rI'll share my personal experiences as a developer on a security research team and shed light on the often-overlooked consequences of insecure logging practices. We'll discuss practical patterns to safeguard sensitive information in Python applications, including identifying and redacting sensitive data before it reaches log files, and implementing secure logging practices.\n\n\rBy the end of this talk, developers will be equipped with the knowledge and tools to protect sensitive data from accidental disclosure and safeguard their applications from the perils of sensitive data exposure. Embrace the journey towards log safety and ensure your code remains secure and confidential.\n\n\n\r---\n\rThis work is licensed under a Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License: https://creativecommons.org/licenses/by-nc-sa/4.0/",
        "thumbnail": "https://i.ytimg.com/vi/4uci2RiTsyw/maxresdefault.jpg",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=4uci2RiTsyw",
        "original_url": "https://www.youtube.com/watch?v=4uci2RiTsyw"
    },
    {
        "index": 91,
        "title": "Multimedia processing with FFMpeg and Python — Michał Rokita",
        "url": "https://www.youtube.com/watch?v=J9PhTL9NnxM",
        "video_id": "J9PhTL9NnxM",
        "uploader": "EuroPython Conference",
        "uploader_id": "@EuroPythonConference",
        "uploader_url": "https://www.youtube.com/@EuroPythonConference",
        "upload_date": "20241002",
        "duration": 2044,
        "view_count": 200,
        "like_count": 9,
        "comment_count": null,
        "tags": [
            "europython",
            "python",
            "conference"
        ],
        "categories": [
            "Science & Technology"
        ],
        "description": "[EuroPython 2024 — Terrace 2B on 2024-07-11]\n\n\rMultimedia processing with FFMpeg and Python by Michał Rokita\n\rhttps://ep2024.europython.eu/session/multimedia-processing-with-ffmpeg-and-python\n\n\rMultimedia processing can be very complex, especially if you want to handle most of the available codecs and formats. Fortunately, we have FFMpeg - a \"complete, cross-platform solution to record, convert and stream audio and video\". It is a great tool, but its CLI is quite complex and challenging to master unless you use it on a daily basis. During this talk, I will tell you what FFmpeg is and how to use it in Python without hurting yourself.\n\n\n\r---\n\rThis work is licensed under a Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License: https://creativecommons.org/licenses/by-nc-sa/4.0/",
        "thumbnail": "https://i.ytimg.com/vi/J9PhTL9NnxM/maxresdefault.jpg",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=J9PhTL9NnxM",
        "original_url": "https://www.youtube.com/watch?v=J9PhTL9NnxM"
    },
    {
        "index": 92,
        "title": "Behind the Scenes of an Ads Prediction System — Bunmi Akinremi",
        "url": "https://www.youtube.com/watch?v=HQSd1QTpDUY",
        "video_id": "HQSd1QTpDUY",
        "uploader": "EuroPython Conference",
        "uploader_id": "@EuroPythonConference",
        "uploader_url": "https://www.youtube.com/@EuroPythonConference",
        "upload_date": "20241002",
        "duration": 1650,
        "view_count": 83,
        "like_count": 2,
        "comment_count": null,
        "tags": [
            "europython",
            "python",
            "conference"
        ],
        "categories": [
            "Science & Technology"
        ],
        "description": "[EuroPython 2024 — Terrace 2B on 2024-07-11]\n\n\rBehind the Scenes of an Ads Prediction System by Bunmi Akinremi\n\rhttps://ep2024.europython.eu/session/behind-the-scenes-of-an-ads-prediction-system\n\n\rIn this era of rapid technological advancement and AI, Ad prediction systems stand at the forefront of shaping online advertising, significantly impacting how content reaches its intended audience. In this session, I'll introduce the Ads prediction system from a user and algorithm view. We'll then walk through key concepts like targeting, bidding, ad ranking, click-through rate (CTR), and conversion rate. We'll deeply dive into connecting the dots, designing an ad prediction system, some ethical considerations, models, offline and online metrics, scaling and deployment decisions that enable handling high volumes of data and requests efficiently, and some case studies. \n\rAt the end of this session, attendees will comprehensively understand the end-to-end process of developing an ads prediction system.\n\n\n\r---\n\rThis work is licensed under a Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License: https://creativecommons.org/licenses/by-nc-sa/4.0/",
        "thumbnail": "https://i.ytimg.com/vi/HQSd1QTpDUY/maxresdefault.jpg",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=HQSd1QTpDUY",
        "original_url": "https://www.youtube.com/watch?v=HQSd1QTpDUY"
    },
    {
        "index": 93,
        "title": "Pydantic Logfire — Uncomplicated Observability — Samuel Colvin",
        "url": "https://www.youtube.com/watch?v=FOweIXpw8jE",
        "video_id": "FOweIXpw8jE",
        "uploader": "EuroPython Conference",
        "uploader_id": "@EuroPythonConference",
        "uploader_url": "https://www.youtube.com/@EuroPythonConference",
        "upload_date": "20241002",
        "duration": 1666,
        "view_count": 1300,
        "like_count": 32,
        "comment_count": null,
        "tags": [
            "europython",
            "python",
            "conference"
        ],
        "categories": [
            "Science & Technology"
        ],
        "description": "[EuroPython 2024 — Terrace 2B on 2024-07-11]\n\n\rPydantic Logfire — Uncomplicated Observability by Samuel Colvin\n\rhttps://ep2024.europython.eu/session/pydantic-logfire-uncomplicated-observability\n\n\rPydantic Logfire — Uncomplicated Observability\n\n\rFrom the team behind Pydantic, Logfire is a new type of observability platform built on the same belief as our open source library — that the most powerful tools can be easy to use.\n\n\rIn this talk we'll introduce Logfire, then demonstrate how it can make understanding and fixing your app faster and more enjoyable with a live demo.\n\n\rWe'll touch on some of the most useful integrations including: FastAPI, Postgres and OpenAI.\n\n\n\r---\n\rThis work is licensed under a Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License: https://creativecommons.org/licenses/by-nc-sa/4.0/",
        "thumbnail": "https://i.ytimg.com/vi/FOweIXpw8jE/maxresdefault.jpg",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=FOweIXpw8jE",
        "original_url": "https://www.youtube.com/watch?v=FOweIXpw8jE"
    },
    {
        "index": 94,
        "title": "Autoinstrumentation Adventures: enhancing Python apps with OpenTelemetry — Israel Blancas",
        "url": "https://www.youtube.com/watch?v=JEY7N2GxxP4",
        "video_id": "JEY7N2GxxP4",
        "uploader": "EuroPython Conference",
        "uploader_id": "@EuroPythonConference",
        "uploader_url": "https://www.youtube.com/@EuroPythonConference",
        "upload_date": "20241002",
        "duration": 2341,
        "view_count": 282,
        "like_count": 11,
        "comment_count": null,
        "tags": [
            "europython",
            "python",
            "conference"
        ],
        "categories": [
            "Science & Technology"
        ],
        "description": "[EuroPython 2024 — Terrace 2B on 2024-07-11]\n\n\rAutoinstrumentation Adventures: enhancing Python apps with OpenTelemetry by Israel Blancas\n\rhttps://ep2024.europython.eu/session/autoinstrumentation-adventures-enhancing-python-apps-with-opentelemetry\n\n\rHey there, fellow Python enthusiasts! Are you ready to dive into the exciting world of application observability without getting your hands too dirty with complex instrumentation? If that sounds like a journey you'd be interested in, then you're in for a treat!\n\n\rObservability is that magical window into the inner workings of our applications, allowing us to understand what's happening under the hood, troubleshoot issues, and ensure everything is running smoothly. However, achieving this level of insight can sometimes feel like a daunting task. That's where OpenTelemetry comes into play, simplifying the entire process and making it accessible to everyone, not just the observability wizards.\n\n\rIn our session, we'll start with the basics: what OpenTelemetry is and the problems it aims to solve (and those it doesn't). We'll demystify the concept of instrumentation—the process of embedding observability into your applications—and show you how OpenTelemetry makes this not only possible but painless.\n\n\rThe heart of our talk will be focused on autoinstrumentation, a magical feature of OpenTelemetry that automates the task of adding observability to your Python projects. Imagine being able to get detailed insights into your application's performance and behavior without having to manually instrument every nook and cranny. Sounds like a dream, right?\n\n\rAnd because we believe in learning by doing, we'll walk you through a small but mighty demo. You'll see firsthand how effortlessly you can implement OpenTelemetry in your own Python applications, turning the daunting into the doable.\n\n\n\r---\n\rThis work is licensed under a Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License: https://creativecommons.org/licenses/by-nc-sa/4.0/",
        "thumbnail": "https://i.ytimg.com/vi/JEY7N2GxxP4/maxresdefault.jpg",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=JEY7N2GxxP4",
        "original_url": "https://www.youtube.com/watch?v=JEY7N2GxxP4"
    },
    {
        "index": 95,
        "title": "Healthy code for healthy teams (or the other way around) — Mai Giménez",
        "url": "https://www.youtube.com/watch?v=PJNkCgMfHdI",
        "video_id": "PJNkCgMfHdI",
        "uploader": "EuroPython Conference",
        "uploader_id": "@EuroPythonConference",
        "uploader_url": "https://www.youtube.com/@EuroPythonConference",
        "upload_date": "20241002",
        "duration": 2737,
        "view_count": 123,
        "like_count": 3,
        "comment_count": null,
        "tags": [
            "europython",
            "python",
            "conference"
        ],
        "categories": [
            "Science & Technology"
        ],
        "description": "[EuroPython 2024 — Forum Hall on 2024-07-12]\n\n\rHealthy code for healthy teams (or the other way around) by Mai Giménez\n\rhttps://ep2024.europython.eu/session/healthy-code-for-healthy-teams-or-the-other-way-around\n\n\rCodebases often disappoint us, but we keep creating new ones with the absurd hope that it will be different this time. Spoiler alert: it never is.\n\n\rNotably, research codebases need to fulfil the oxymoron of being robust for long and large computations and highly flexible to experiment with outlandish ideas quickly.\n\n\rBut what if there was a way to break the cycle and build code that endures, even for groundbreaking research.\n\n\rThis talk isn't about magic bullets or silver linings. It's about the powerful connection between healthy teams and healthy code. We'll explore how a healthy team improved the health of a codebase by introducing type annotations and runtime type checking for JAX arrays.\n\n\n\r---\n\rThis work is licensed under a Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License: https://creativecommons.org/licenses/by-nc-sa/4.0/",
        "thumbnail": "https://i.ytimg.com/vi/PJNkCgMfHdI/maxresdefault.jpg",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=PJNkCgMfHdI",
        "original_url": "https://www.youtube.com/watch?v=PJNkCgMfHdI"
    },
    {
        "index": 96,
        "title": "Cython and the Limited API — David Woods",
        "url": "https://www.youtube.com/watch?v=YRzEfdqnlJk",
        "video_id": "YRzEfdqnlJk",
        "uploader": "EuroPython Conference",
        "uploader_id": "@EuroPythonConference",
        "uploader_url": "https://www.youtube.com/@EuroPythonConference",
        "upload_date": "20241002",
        "duration": 1744,
        "view_count": 179,
        "like_count": 7,
        "comment_count": null,
        "tags": [
            "europython",
            "python",
            "conference"
        ],
        "categories": [
            "Science & Technology"
        ],
        "description": "[EuroPython 2024 — Forum Hall on 2024-07-12]\n\n\rCython and the Limited API by David Woods\n\rhttps://ep2024.europython.eu/session/cython-and-the-limited-api\n\n\rCython's Limited API support is finally approaching a usable state. As an example, it is possible to produce a working version of Cython by compiling it in Limited API mode.\n\n\rFor users the main advantage is to be able to reduce the number of wheels/binaries they have to build in order to be compatible across a range of versions of Python. For Cython itself there is also an advantage in future-proofing: being able to produce simpler code that should continue to work even as the Python interpreter evolves and which is more likely to work with alternative Python implementations, as well as hopefully placating the unease some of the core Python developers have at Cython's use of Python internals (in non-limited API mode).\n\n\rThis talk will start off by looking at the subject from the users' perspective:\n\r* Why you might want to use the Limited API (from Cython).\n\r* What kind of projects are likely to benefit from it (as far as it's ever possible to predict how people will use a tool...).\n\r* What you actually need to do to build a Cython module with the Limited API.\n\r* What the limitations and disadvantages are: there are some features that don't work, some features that only work in recent versions of Python, some speed costs, and complete forward-compatibility might not be all you hope it would be.\n\n\rWhen that \"general interest\" section is done, I plan to talk about some of the gory implementation details - what \"creative\" solutions have been employed to work around missing features or things the Limited API was never intended to do.\n\n\n\r---\n\rThis work is licensed under a Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License: https://creativecommons.org/licenses/by-nc-sa/4.0/",
        "thumbnail": "https://i.ytimg.com/vi/YRzEfdqnlJk/maxresdefault.jpg",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=YRzEfdqnlJk",
        "original_url": "https://www.youtube.com/watch?v=YRzEfdqnlJk"
    },
    {
        "index": 97,
        "title": "Move the Python ecosystem to the stable ABI — Victor Stinner",
        "url": "https://www.youtube.com/watch?v=ZmVEFHAJ1eE",
        "video_id": "ZmVEFHAJ1eE",
        "uploader": "EuroPython Conference",
        "uploader_id": "@EuroPythonConference",
        "uploader_url": "https://www.youtube.com/@EuroPythonConference",
        "upload_date": "20241002",
        "duration": 1834,
        "view_count": 132,
        "like_count": 3,
        "comment_count": null,
        "tags": [
            "europython",
            "python",
            "conference"
        ],
        "categories": [
            "Science & Technology"
        ],
        "description": "[EuroPython 2024 — Forum Hall on 2024-07-12]\n\n\rMove the Python ecosystem to the stable ABI by Victor Stinner\n\rhttps://ep2024.europython.eu/session/move-the-python-ecosystem-to-the-stable-abi\n\n\rThe Python C API is used to extend Python and make C libraries accessible in Python. The C API changes often forcing C extensions maintainers to update frequently their code. Also, new binary packages have to be build for each Python version. The stable ABI provides a more stable C API and only require to distribute a single binary package for all Python versions.\n\n\n\r---\n\rThis work is licensed under a Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License: https://creativecommons.org/licenses/by-nc-sa/4.0/",
        "thumbnail": "https://i.ytimg.com/vi/ZmVEFHAJ1eE/maxresdefault.jpg",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=ZmVEFHAJ1eE",
        "original_url": "https://www.youtube.com/watch?v=ZmVEFHAJ1eE"
    },
    {
        "index": 98,
        "title": "Tales from the abyss: some of the most obscure CPython bugs — Pablo Galindo Salgado",
        "url": "https://www.youtube.com/watch?v=Y4cnr_OhbCY",
        "video_id": "Y4cnr_OhbCY",
        "uploader": "EuroPython Conference",
        "uploader_id": "@EuroPythonConference",
        "uploader_url": "https://www.youtube.com/@EuroPythonConference",
        "upload_date": "20241002",
        "duration": 1699,
        "view_count": 212,
        "like_count": 9,
        "comment_count": null,
        "tags": [
            "europython",
            "python",
            "conference"
        ],
        "categories": [
            "Science & Technology"
        ],
        "description": "[EuroPython 2024 — Forum Hall on 2024-07-12]\n\n\rTales from the abyss: some of the most obscure CPython bugs by Pablo Galindo Salgado\n\rhttps://ep2024.europython.eu/session/tales-from-the-abyss-some-of-the-most-obscure-cpython-bugs\n\n\rWorking on one of the major programming languages surely is a lot of fun but sometimes very weird things happen. In these moments Python stops behaving like Python and you enter a new dimension where everything is possible. And debugging what's going on in this new world of weirdness is quite a daunting task given the size of the CPython codebase. In this talk you will learn some of the most obscure, mind-bending and difficult bugs that we faced when developing CPython and how we solve them. You will also learn all the advanced tips and tricks that we used to slay these dragons so you can fight similar monsters in your own codebases or if you want to contribute to CPython itself!\n\n\n\r---\n\rThis work is licensed under a Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License: https://creativecommons.org/licenses/by-nc-sa/4.0/",
        "thumbnail": "https://i.ytimg.com/vi/Y4cnr_OhbCY/maxresdefault.jpg",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=Y4cnr_OhbCY",
        "original_url": "https://www.youtube.com/watch?v=Y4cnr_OhbCY"
    },
    {
        "index": 99,
        "title": "Async Await: Mastering Python's Time-Bending Tricks — Bojan Miletic",
        "url": "https://www.youtube.com/watch?v=HouWsGsTRgE",
        "video_id": "HouWsGsTRgE",
        "uploader": "EuroPython Conference",
        "uploader_id": "@EuroPythonConference",
        "uploader_url": "https://www.youtube.com/@EuroPythonConference",
        "upload_date": "20241002",
        "duration": 1226,
        "view_count": 449,
        "like_count": 15,
        "comment_count": null,
        "tags": [
            "europython",
            "python",
            "conference"
        ],
        "categories": [
            "Science & Technology"
        ],
        "description": "[EuroPython 2024 — Forum Hall on 2024-07-12]\n\n\rAsync Await: Mastering Python's Time-Bending Tricks by Bojan Miletic\n\rhttps://ep2024.europython.eu/session/async-await-mastering-python-s-time-bending-tricks\n\n\rUnlock the secrets of Python's async and await—tools that let you bend time itself! \n\rIn this talk, we'll dive into the magic of asynchronous programming, making your code faster and more efficient. \n\n\rLearn to handle I/O-bound tasks like a pro, juggle multiple operations without breaking a sweat, and impress your peers with your newfound time-warping skills. \n\rPerfect for those ready to level up from mere mortals to Python sorcerers. \n\n\rPeople of all levels of experience are welcome, only requirement is curiosity and enthusiasm :)\n\rJoin us, and let’s make time our playground!\n\n\n\r---\n\rThis work is licensed under a Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License: https://creativecommons.org/licenses/by-nc-sa/4.0/",
        "thumbnail": "https://i.ytimg.com/vi/HouWsGsTRgE/maxresdefault.jpg",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=HouWsGsTRgE",
        "original_url": "https://www.youtube.com/watch?v=HouWsGsTRgE"
    },
    {
        "index": 100,
        "title": "Python in Parallel: Sub-Interpreters vs. NoGIL vs. Multiprocessing — Samet Yaslan",
        "url": "https://www.youtube.com/watch?v=HdTtJKevxfQ",
        "video_id": "HdTtJKevxfQ",
        "uploader": "EuroPython Conference",
        "uploader_id": "@EuroPythonConference",
        "uploader_url": "https://www.youtube.com/@EuroPythonConference",
        "upload_date": "20241002",
        "duration": 1667,
        "view_count": 1467,
        "like_count": 58,
        "comment_count": null,
        "tags": [
            "europython",
            "python",
            "conference"
        ],
        "categories": [
            "Science & Technology"
        ],
        "description": "[EuroPython 2024 — Forum Hall on 2024-07-12]\n\n\rPython in Parallel: Sub-Interpreters vs. NoGIL vs. Multiprocessing by Samet Yaslan\n\rhttps://ep2024.europython.eu/session/python-in-parallel-sub-interpreters-vs-nogil-vs-multiprocessing\n\n\rIn the realm of Python development, achieving parallelism and harnessing the full power of modern multi-core processors is challenging. Traditionally constrained by the Global Interpreter Lock (GIL), multi-threading was not useful for true parallelism in Python, hence developers turned into multi-processing. Now this is all changing with upcoming developments. \n\r- A new per-Interpreter GIL in Python 3.12 helps to facilitate true parallelism by opening up sub interpreters to run Python codes at the same time. In addition, it is going to be easier to use these features in Python 3.13 by having support for sub interpreters in the Stdlib.\n\r- An upcoming compile option to disable-gil is opening a path to a world with NoGIL where Python threads can truly run in parallel. Which can potentially become the default in the upcoming years. \n\rMultiprocessing, sub-interpreters and multi-threading without GIL are all different ways of facilitating multi-core parallelism in Python. Each of these approaches offers a unique pathway to parallel execution, but comes with its own set of trade-offs, complexities, and suitability for different types of problems. During this talk we will explore each of these options and asses their pros and cons.\n\n\rWhether you're building CPU-bound high throughput applications, IO-bound services, or simply curious about the future of parallel processing in Python, this talk will help you with the knowledge to make informed decisions and leverage Python's parallel computing capabilities.\n\n\n\r---\n\rThis work is licensed under a Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License: https://creativecommons.org/licenses/by-nc-sa/4.0/",
        "thumbnail": "https://i.ytimg.com/vi/HdTtJKevxfQ/maxresdefault.jpg",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=HdTtJKevxfQ",
        "original_url": "https://www.youtube.com/watch?v=HdTtJKevxfQ"
    },
    {
        "index": 101,
        "title": "The truth about objects — Naomi Ceder",
        "url": "https://www.youtube.com/watch?v=T6WvSP5REow",
        "video_id": "T6WvSP5REow",
        "uploader": "EuroPython Conference",
        "uploader_id": "@EuroPythonConference",
        "uploader_url": "https://www.youtube.com/@EuroPythonConference",
        "upload_date": "20241002",
        "duration": 1631,
        "view_count": 329,
        "like_count": 13,
        "comment_count": null,
        "tags": [
            "europython",
            "python",
            "conference"
        ],
        "categories": [
            "Science & Technology"
        ],
        "description": "[EuroPython 2024 — Forum Hall at 2024-07-12 14:35]\n\nThe truth about objects by Naomi Ceder\nhttps://ep2024.europython.eu/session/the-truth-about-objects\n\n\"Everything in Python is an object.\" This is a profound truth about Python, but what does it mean? Is literally EVERYTHING an object? And what is an object anyway? Are objects the same as instances of a class? How do classes and types really work in Python? And what do metaclasses have to do with anything?\n\nIn fact, the answers to these questions are probably not what you think they are - Python's approach to objects is different from most other languages in sometimes surprising ways. \n\nThis talk will use simple live coded examples to explore how objects work in Python and clear up several common misconceptions and misunderstandings about how objects and instances, classes and types, and metaclasses all work together. \n\nBe warned - you are likely to be surprised when you learn the truth about objects in Python.\n\n---\nThis work is licensed under a Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License: https://creativecommons.org/licenses/by-nc-sa/4.0/",
        "thumbnail": "https://i.ytimg.com/vi/T6WvSP5REow/maxresdefault.jpg",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=T6WvSP5REow",
        "original_url": "https://www.youtube.com/watch?v=T6WvSP5REow"
    },
    {
        "index": 102,
        "title": "Live coding music with PyREPL in Python 3.13 — Łukasz Langa",
        "url": "https://www.youtube.com/watch?v=dK6HGcSb60Y",
        "video_id": "dK6HGcSb60Y",
        "uploader": "EuroPython Conference",
        "uploader_id": "@EuroPythonConference",
        "uploader_url": "https://www.youtube.com/@EuroPythonConference",
        "upload_date": "20241002",
        "duration": 2442,
        "view_count": 1841,
        "like_count": 77,
        "comment_count": null,
        "tags": [
            "europython",
            "python",
            "conference"
        ],
        "categories": [
            "Science & Technology"
        ],
        "description": "[EuroPython 2024 — Forum Hall on 2024-07-12]\n\n\rLive coding music with PyREPL in Python 3.13 by Łukasz Langa\n\rhttps://ep2024.europython.eu/session/live-coding-music-with-pyrepl-in-python-3-13\n\n\rHave you heard we've got a nice new REPL in 3.13? Let's make some music with it in real time. You've had an intense conference. How about you sit back and relax and watch a music performance constructed before your very eyes? We'll be interacting with hardware synthesizers and drum machines, and even showing visualizations, but most importantly we will be writing Python, lots of Python. Consider it a demo of PyREPL and some other features of Python 3.13.\n\n\n\r---\n\rThis work is licensed under a Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License: https://creativecommons.org/licenses/by-nc-sa/4.0/",
        "thumbnail": "https://i.ytimg.com/vi/dK6HGcSb60Y/maxresdefault.jpg",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=dK6HGcSb60Y",
        "original_url": "https://www.youtube.com/watch?v=dK6HGcSb60Y"
    },
    {
        "index": 103,
        "title": "EuroPython 2024 — Lightning talks Friday",
        "url": "https://www.youtube.com/watch?v=jwcJcDaf9r0",
        "video_id": "jwcJcDaf9r0",
        "uploader": "EuroPython Conference",
        "uploader_id": "@EuroPythonConference",
        "uploader_url": "https://www.youtube.com/@EuroPythonConference",
        "upload_date": "20241002",
        "duration": 3611,
        "view_count": 149,
        "like_count": 1,
        "comment_count": null,
        "tags": [
            "europython",
            "python",
            "conference"
        ],
        "categories": [
            "Science & Technology"
        ],
        "description": "[EuroPython 2024 — Forum Hall on 2024-07-12]\n\n\rLightning talks Friday\n\rhttps://ep2024.europython.eu/session/lightning-talks-friday\n\n\rEnjoy Fridays lightning talks. Short talks about everything by everyone. Hosted by Elise Kasai and Mark Smith:\n\n00:00 *Welcome to Friday's Lightning Talks*\n01:52 *Community Conference / Events Announcements & Celebration!*\n07:12 *OpenFHE - Matrix Arithmetic Library* — Sukanya Mandal\n10:05 *A mysterious case of distorted 3D models* — Miro Hrončok\n15:28 *How to `from italia import 🤌`* — Ester Beltrami\n21:26 *How the cycle Garbage Collection works* — Mark Shannon\n25:58 *A EuroPython Poem* — Emma Cooke\n29:56 *Testing Hardware Specs with Pytest* — Thomas Ganahl\n33:30 *Presentation slides dos and don'ts* — Reuven Lerner\n38:57 *Who wants to be a millionaire?* — Rodrigo Girão Serrão\n44:13 *Level Up Your Presentations with Better Screenshots* — Rudolfs Berzins\n48:53 *Python C++ API with Nanobind* — Fernando Pereira\n54:43 *self.optimize() to become a better programmer* — Muzher Sharif\n\n\r---\n\rThis work is licensed under a Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License: https://creativecommons.org/licenses/by-nc-sa/4.0/",
        "thumbnail": "https://i.ytimg.com/vi/jwcJcDaf9r0/maxresdefault.jpg",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=jwcJcDaf9r0",
        "original_url": "https://www.youtube.com/watch?v=jwcJcDaf9r0"
    },
    {
        "index": 104,
        "title": "EuroPython 2024 — Sprint orientation",
        "url": "https://www.youtube.com/watch?v=8Vv4l2Q0tHk",
        "video_id": "8Vv4l2Q0tHk",
        "uploader": "EuroPython Conference",
        "uploader_id": "@EuroPythonConference",
        "uploader_url": "https://www.youtube.com/@EuroPythonConference",
        "upload_date": "20241002",
        "duration": 634,
        "view_count": 54,
        "like_count": 1,
        "comment_count": null,
        "tags": [
            "europython",
            "python",
            "conference"
        ],
        "categories": [
            "Science & Technology"
        ],
        "description": "[EuroPython 2024 — Forum Hall on 2024-07-12]\n\n\rSprint orientation\n\rhttps://ep2024.europython.eu/session/sprint-orientation\n\n\rWhat is a sprint? \n\rWhere are they going to take place?\n\rCan I even join? And how?\n\n\rLet us answer these questions and a few more in the Sprint orientation\n\n\n\r---\n\rThis work is licensed under a Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License: https://creativecommons.org/licenses/by-nc-sa/4.0/",
        "thumbnail": "https://i.ytimg.com/vi/8Vv4l2Q0tHk/maxresdefault.jpg",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=8Vv4l2Q0tHk",
        "original_url": "https://www.youtube.com/watch?v=8Vv4l2Q0tHk"
    },
    {
        "index": 105,
        "title": "EuroPython 2024 — Closing Session",
        "url": "https://www.youtube.com/watch?v=z8iyG76KaA8",
        "video_id": "z8iyG76KaA8",
        "uploader": "EuroPython Conference",
        "uploader_id": "@EuroPythonConference",
        "uploader_url": "https://www.youtube.com/@EuroPythonConference",
        "upload_date": "20241002",
        "duration": 894,
        "view_count": 50,
        "like_count": 1,
        "comment_count": null,
        "tags": [
            "europython",
            "python",
            "conference"
        ],
        "categories": [
            "Science & Technology"
        ],
        "description": "[EuroPython 2024 — Forum Hall on 2024-07-12]\n\n\rClosing Session\n\rhttps://ep2024.europython.eu/session/closing-session\n\n\rThat's it for the tutorial and talks. Thank you all and before we all use what we learned let's have a short recap.\n\n\n\r---\n\rThis work is licensed under a Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License: https://creativecommons.org/licenses/by-nc-sa/4.0/",
        "thumbnail": "https://i.ytimg.com/vi/z8iyG76KaA8/maxresdefault.jpg",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=z8iyG76KaA8",
        "original_url": "https://www.youtube.com/watch?v=z8iyG76KaA8"
    },
    {
        "index": 106,
        "title": "Test java and C applications with python — Roberto Polli",
        "url": "https://www.youtube.com/watch?v=4yxhSRff1FU",
        "video_id": "4yxhSRff1FU",
        "uploader": "EuroPython Conference",
        "uploader_id": "@EuroPythonConference",
        "uploader_url": "https://www.youtube.com/@EuroPythonConference",
        "upload_date": "20241002",
        "duration": 1722,
        "view_count": 94,
        "like_count": 1,
        "comment_count": null,
        "tags": [
            "europython",
            "python",
            "conference"
        ],
        "categories": [
            "Science & Technology"
        ],
        "description": "[EuroPython 2024 — North Hall on 2024-07-12]\n\n\rTest java and C applications with python by Roberto Polli\n\rhttps://ep2024.europython.eu/session/test-java-and-c-applications-with-python\n\n\rDid you know that Python can be used to test foreign code, such as Java and C?\n\rThis enables writing tests for legacy code in a very few time, reducing development time and improving code coverage (e.g., using python frameworks to generate testcases for foreign code).\n\rIf you have C and Java services that communicates over the network, you can use python as a glue to anticipate some integration tests directly in python.\n\n\n\r---\n\rThis work is licensed under a Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License: https://creativecommons.org/licenses/by-nc-sa/4.0/",
        "thumbnail": "https://i.ytimg.com/vi/4yxhSRff1FU/maxresdefault.jpg",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=4yxhSRff1FU",
        "original_url": "https://www.youtube.com/watch?v=4yxhSRff1FU"
    },
    {
        "index": 107,
        "title": "Adventures in not writing tests — Andy Fundinger",
        "url": "https://www.youtube.com/watch?v=tp8-2qeYCwY",
        "video_id": "tp8-2qeYCwY",
        "uploader": "EuroPython Conference",
        "uploader_id": "@EuroPythonConference",
        "uploader_url": "https://www.youtube.com/@EuroPythonConference",
        "upload_date": "20241002",
        "duration": 1786,
        "view_count": 100,
        "like_count": 3,
        "comment_count": null,
        "tags": [
            "europython",
            "python",
            "conference"
        ],
        "categories": [
            "Science & Technology"
        ],
        "description": "[EuroPython 2024 — North Hall on 2024-07-12]\n\n\rAdventures in not writing tests by Andy Fundinger\n\rhttps://ep2024.europython.eu/session/adventures-in-not-writing-tests\n\n\rSometimes we write code that we don't expect to go to production; they are one-offs or analysis to understand our data. However, a good analysis may be worth repeating, and before we know it, the code that was never supposed to go to production is running every day and driving critical decisions – it is in production. Once our code is in production, we have to maintain it, and that means we need tests to ensure that changes made to the code while maintaining it do not change other behavior.\n\n\rHypothesis is a Python library for creating inputs that are good for exercising code. Hypothesis tests create many different inputs for a single test case, with a special concentration on inputs that are likely to break your code. If the code was originally written to understand data, then new data we feed it over time could be very different from what was initially expected or planned for. With Hypothesis, we randomize our test outputs and they become just as unknown as our real-world outputs. Our tests then confirm certain properties to prove that the analysis was performed as expected.\n\n\rGhostwriting is a feature of Hypothesis that writes tests based on the type hints in your code. This can not only save time, but also validate our type hints. The savings in time and toil can be significant, but the ghostwritten tests do also need some additions to truly test our code. We'll look at what is needed to both generate proper inputs and check our outputs.\n\n\n\r---\n\rThis work is licensed under a Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License: https://creativecommons.org/licenses/by-nc-sa/4.0/",
        "thumbnail": "https://i.ytimg.com/vi/tp8-2qeYCwY/maxresdefault.jpg",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=tp8-2qeYCwY",
        "original_url": "https://www.youtube.com/watch?v=tp8-2qeYCwY"
    },
    {
        "index": 108,
        "title": "Pytest Design Patterns — Miloslav Pojman",
        "url": "https://www.youtube.com/watch?v=Q21AFc0QjSs",
        "video_id": "Q21AFc0QjSs",
        "uploader": "EuroPython Conference",
        "uploader_id": "@EuroPythonConference",
        "uploader_url": "https://www.youtube.com/@EuroPythonConference",
        "upload_date": "20241002",
        "duration": 1794,
        "view_count": 372,
        "like_count": 12,
        "comment_count": null,
        "tags": [
            "europython",
            "python",
            "conference"
        ],
        "categories": [
            "Science & Technology"
        ],
        "description": "[EuroPython 2024 — North Hall on 2024-07-12]\n\n\rPytest Design Patterns by Miloslav Pojman\n\rhttps://ep2024.europython.eu/session/pytest-design-patterns\n\n\rProper testing of your Python application doesn't require a rewrite into hexagonal architecture (whatever it means 🤷). In this session, we'll explore battle-tested techniques to enhance the maintainability of your test suite.\n\n\r- *Embracing Well-Known Patterns:* The test client or transaction-bound tests are well-established patterns originating from Django. We will explore how to extend these foundational practices within pytest.\n\r- *Employing Fixture Factories:* How to ensure that our test data clearly cover the intended scenarios? Unpack the utility of fixture factories, streamlining the setup process.\n\r- *Mocking without Monkey Patching:* Learn effective mocking, steering clear of the problematic practice of monkey patching. We'll explore strategies to achieve accurate testing using favorite frameworks and libraries.\n\r- *Covering More with Parametrized Fixtures:* Many developers are familiar with pytest fixtures and parametrized tests, but may not be aware of the power of their combination: parametrized fixtures. Discover how to easily build more comprehensive tests.\n\r- *Rethinking Test Categorization:* The traditional division into unit and integration tests often falls short in practical application. We'll check an alternative approach that can better align with real-world scenarios.\n\n\rThe goal is not merely to report higher coverage but to have tests that can be trusted. By incorporating established patterns, you'll be empowered to focus on what truly matters.\n\n\n\r---\n\rThis work is licensed under a Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License: https://creativecommons.org/licenses/by-nc-sa/4.0/",
        "thumbnail": "https://i.ytimg.com/vi/Q21AFc0QjSs/maxresdefault.jpg",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=Q21AFc0QjSs",
        "original_url": "https://www.youtube.com/watch?v=Q21AFc0QjSs"
    },
    {
        "index": 109,
        "title": "Python Observability Perfected: Advanced Techniques with OpenTelemetry — Anton Caceres",
        "url": "https://www.youtube.com/watch?v=BUTo0YClH-8",
        "video_id": "BUTo0YClH-8",
        "uploader": "EuroPython Conference",
        "uploader_id": "@EuroPythonConference",
        "uploader_url": "https://www.youtube.com/@EuroPythonConference",
        "upload_date": "20241002",
        "duration": 1910,
        "view_count": 525,
        "like_count": 12,
        "comment_count": null,
        "tags": [
            "europython",
            "python",
            "conference"
        ],
        "categories": [
            "Science & Technology"
        ],
        "description": "[EuroPython 2024 — North Hall on 2024-07-12]\n\n\rPython Observability Perfected: Advanced Techniques with OpenTelemetry by Anton Caceres\n\rhttps://ep2024.europython.eu/session/python-observability-perfected-advanced-techniques-with-opentelemetry\n\n\rIn the evolving landscape of serverless and cloud technologies, Python stands out as a key player for building microservices. Yet, as these systems grow, tracking their performance and catching bugs become increasingly complex.\n\n\rThis presentation introduces OpenTelemetry, a rising standard that equips us with tools to monitor not just Python code but also vital components like databases and message queues. It's designed to blend seamlessly with Python, offering a unified method to collect, process, and share telemetry data across different parts of a distributed system.\n\n\rThis talk starts by discussing the importance of observability in modern distributed environments. Then, we'll dive into OpenTelemetry, focusing on its Python SDK's basics. We'll walk through a hands-on example, showing how to integrate OpenTelemetry into a Python project for automated and manual tracking.\n\n\rFinally, we'll explore how to leverage the insights gained from OpenTelemetry for more effective system monitoring, ensuring smoother operation and easier troubleshooting.\n\n\n\r---\n\rThis work is licensed under a Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License: https://creativecommons.org/licenses/by-nc-sa/4.0/",
        "thumbnail": "https://i.ytimg.com/vi/BUTo0YClH-8/maxresdefault.jpg",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=BUTo0YClH-8",
        "original_url": "https://www.youtube.com/watch?v=BUTo0YClH-8"
    },
    {
        "index": 110,
        "title": "A Tale of Scaling Observability — Toomas Ormisson",
        "url": "https://www.youtube.com/watch?v=2noRXtnCb_U",
        "video_id": "2noRXtnCb_U",
        "uploader": "EuroPython Conference",
        "uploader_id": "@EuroPythonConference",
        "uploader_url": "https://www.youtube.com/@EuroPythonConference",
        "upload_date": "20241002",
        "duration": 1723,
        "view_count": 91,
        "like_count": 2,
        "comment_count": null,
        "tags": [
            "europython",
            "python",
            "conference"
        ],
        "categories": [
            "Science & Technology"
        ],
        "description": "[EuroPython 2024 — North Hall on 2024-07-12]\n\n\rA Tale of Scaling Observability by Toomas Ormisson\n\rhttps://ep2024.europython.eu/session/a-tale-of-scaling-observability\n\n\rWhat it’s like to keep the lights on in a rapidly growing business - how we’ve scaled our metrics, logging and tracing beyond processing 50TB+ of telemetry a day, and what we’ve learned along the way.\n\n\rDuring this session, we will discuss the challenges of scaling high load services, and give few pointers to developers to help your chosen open-source observebility tool function as a product.\n\n\n\r---\n\rThis work is licensed under a Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License: https://creativecommons.org/licenses/by-nc-sa/4.0/",
        "thumbnail": "https://i.ytimg.com/vi/2noRXtnCb_U/maxresdefault.jpg",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=2noRXtnCb_U",
        "original_url": "https://www.youtube.com/watch?v=2noRXtnCb_U"
    },
    {
        "index": 111,
        "title": "​​Encrypted computing in Python using OpenFHE — Sukanya Mandal",
        "url": "https://www.youtube.com/watch?v=PqR4_9jpSPs",
        "video_id": "PqR4_9jpSPs",
        "uploader": "EuroPython Conference",
        "uploader_id": "@EuroPythonConference",
        "uploader_url": "https://www.youtube.com/@EuroPythonConference",
        "upload_date": "20241002",
        "duration": 1779,
        "view_count": 216,
        "like_count": 0,
        "comment_count": null,
        "tags": [
            "europython",
            "python",
            "conference"
        ],
        "categories": [
            "Science & Technology"
        ],
        "description": "[EuroPython 2024 — North Hall on 2024-07-12]\n\n\r​​Encrypted computing in Python using OpenFHE by Sukanya Mandal\n\rhttps://ep2024.europython.eu/session/encrypted-computing-in-python-using-openfhe\n\n\rFully Homomorphic Encryption (FHE) is a privacy-enhancing technology that enables performing computations over encrypted data. FHE has recently seen a lot of progress, and commercial applications of FHE are now available. One of the main application domains for FHE is privacy-preserving machine learning. We introduce a Python interface for OpenFHE, a popular open-source FHE C++ software library that supports all common FHE schemes. OpenFHE is a NumFocus-sponsored open-source project that has been authored by a community of well-known FHE cryptographers and software engineers.The talk provides a high-level introduction to FHE and its applications, and then provides an overview of the Python API. Several examples are presented to both illustrate FHE concepts and show the practicality of the technology.\n\n\rMore information about the OpenFHE project: \n\r* Main website: https://www.openfhe.org/ ;\n\r* OpenFHE discourse forum: https://openfhe.discourse.group/ ;\n\r* Main OpenFHE repository: https://github.com/openfheorg/openfhe-development ;\n\r* OpenFHE organization: https://github.com/openfheorg ;\n\r* Main OpenFHE design paper: https://eprint.iacr.org/2022/915 ;\n\n\n\r---\n\rThis work is licensed under a Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License: https://creativecommons.org/licenses/by-nc-sa/4.0/",
        "thumbnail": "https://i.ytimg.com/vi/PqR4_9jpSPs/maxresdefault.jpg",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=PqR4_9jpSPs",
        "original_url": "https://www.youtube.com/watch?v=PqR4_9jpSPs"
    },
    {
        "index": 112,
        "title": "Lessons learned from maintaining open-source Python projects — Bernat Gabor",
        "url": "https://www.youtube.com/watch?v=4qmuZQYxdrU",
        "video_id": "4qmuZQYxdrU",
        "uploader": "EuroPython Conference",
        "uploader_id": "@EuroPythonConference",
        "uploader_url": "https://www.youtube.com/@EuroPythonConference",
        "upload_date": "20241002",
        "duration": 1753,
        "view_count": 135,
        "like_count": 5,
        "comment_count": null,
        "tags": [
            "europython",
            "python",
            "conference"
        ],
        "categories": [
            "Science & Technology"
        ],
        "description": "[EuroPython 2024 — South Hall 2A on 2024-07-12]\n\n\rLessons learned from maintaining open-source Python projects by Bernat Gabor\n\rhttps://ep2024.europython.eu/session/lessons-learned-from-maintaining-open-source-python-projects\n\n\rI started maintaining open source projects back in 2016 with tox. In 2018, I became a virtualenv maintainer. Today, this has now ballooned to 16 different packages where I'm the primary maintainer (+6 other projects where I help out). On average, these packages get more than 360 million downloads each month.\n\n\rIn this talk, I will share my experience, and explore how I manage to pull this off while also having a primary job and a family. I will present which techniques I tried, what worked, and what did not. I will also share my views on how one should approach maintaining an open source package to avoid burnout.\n\n\n\r---\n\rThis work is licensed under a Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License: https://creativecommons.org/licenses/by-nc-sa/4.0/",
        "thumbnail": "https://i.ytimg.com/vi/4qmuZQYxdrU/maxresdefault.jpg",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=4qmuZQYxdrU",
        "original_url": "https://www.youtube.com/watch?v=4qmuZQYxdrU"
    },
    {
        "index": 113,
        "title": "Edges of Python: Three Radical Python Hacks for Fun and Profit — Elvis Pranskevichus",
        "url": "https://www.youtube.com/watch?v=i-rZlnfGUaE",
        "video_id": "i-rZlnfGUaE",
        "uploader": "EuroPython Conference",
        "uploader_id": "@EuroPythonConference",
        "uploader_url": "https://www.youtube.com/@EuroPythonConference",
        "upload_date": "20241002",
        "duration": 1786,
        "view_count": 120,
        "like_count": 2,
        "comment_count": null,
        "tags": [
            "europython",
            "python",
            "conference"
        ],
        "categories": [
            "Science & Technology"
        ],
        "description": "[EuroPython 2024 — South Hall 2A on 2024-07-12]\n\n\rEdges of Python: Three Radical Python Hacks for Fun and Profit by Elvis Pranskevichus\n\rhttps://ep2024.europython.eu/session/edges-of-python-three-radical-python-hacks-for-fun-and-profit\n\n\rBuilding complex software projects is hard, but the fun part of doing it\n\ris that it often pushes you to find non-obvious solutions to problems\n\rwhich seem radical at first, yet almost obvious in hindsight.  In this\n\rtalk you learn some of the unusual Python tricks that we use at EdgeDB\n\rto write more efficient Python with fewer bugs, and which you can apply in\n\ryour project next time you need to scratch a similar itch.\n\n\n\r---\n\rThis work is licensed under a Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License: https://creativecommons.org/licenses/by-nc-sa/4.0/",
        "thumbnail": "https://i.ytimg.com/vi/i-rZlnfGUaE/maxresdefault.jpg",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=i-rZlnfGUaE",
        "original_url": "https://www.youtube.com/watch?v=i-rZlnfGUaE"
    },
    {
        "index": 114,
        "title": "chDB: The Blazing Fast SQL Engine for Data Science — Auxten Wang",
        "url": "https://www.youtube.com/watch?v=e_yL0dlX6k4",
        "video_id": "e_yL0dlX6k4",
        "uploader": "EuroPython Conference",
        "uploader_id": "@EuroPythonConference",
        "uploader_url": "https://www.youtube.com/@EuroPythonConference",
        "upload_date": "20241002",
        "duration": 1757,
        "view_count": 252,
        "like_count": 10,
        "comment_count": null,
        "tags": [
            "europython",
            "python",
            "conference"
        ],
        "categories": [
            "Science & Technology"
        ],
        "description": "[EuroPython 2024 — South Hall 2A on 2024-07-12]\n\n\rchDB: The Blazing Fast SQL Engine for Data Science by Auxten Wang\n\rhttps://ep2024.europython.eu/session/chdb-the-blazing-fast-sql-engine-for-data-science\n\n\rchDB, powered by the robust ClickHouse engine, is a high-performance in-process SQL engine designed for the Python data ecosystem. It supports direct interaction with databases like MySQL, PostgreSQL, SQLite, and MongoDB; streaming platforms such as Kafka; and key-value stores like Redis. With extensive support for various data sources and formats, chDB is highly adaptable to different data environments. It seamlessly integrates with structured formats like CSV and JSON as well as complex binary formats such as Parquet, Avro, and Arrow, enabling efficient data manipulation and analysis.\n\rThe engine is ANSI SQL compliant, ensuring broad compatibility with existing SQL codebases and facilitating easy integration into diverse data pipelines. This comprehensive SQL support includes complex querying capabilities, enhancing the engine's utility in sophisticated data analysis tasks. chDB is particularly designed to accommodate the rapid prototyping of applications, allowing developers to transition smoothly and quickly from development to production environments with minimal adjustments.\n\rWith its deep integration into Python, chDB interacts directly with popular Python libraries such as Pandas, NumPy, and others, streamlining the data science workflow. This integration enables direct data manipulation within Python scripts and notebooks, drastically reducing the need for data movement and conversion, thus accelerating the data analytics process.\n\rFor organizations and developers leveraging Python, chDB offers an unmatched combination of performance, flexibility, and ease of use, making it an invaluable tool for building efficient, scalable, and robust data-driven applications.\n\n\n\r---\n\rThis work is licensed under a Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License: https://creativecommons.org/licenses/by-nc-sa/4.0/",
        "thumbnail": "https://i.ytimg.com/vi/e_yL0dlX6k4/maxresdefault.jpg",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=e_yL0dlX6k4",
        "original_url": "https://www.youtube.com/watch?v=e_yL0dlX6k4"
    },
    {
        "index": 115,
        "title": "Start strong! — Honza Král",
        "url": "https://www.youtube.com/watch?v=O18k-FF5qI0",
        "video_id": "O18k-FF5qI0",
        "uploader": "EuroPython Conference",
        "uploader_id": "@EuroPythonConference",
        "uploader_url": "https://www.youtube.com/@EuroPythonConference",
        "upload_date": "20241002",
        "duration": 1828,
        "view_count": 114,
        "like_count": 2,
        "comment_count": null,
        "tags": [
            "europython",
            "python",
            "conference"
        ],
        "categories": [
            "Science & Technology"
        ],
        "description": "[EuroPython 2024 — South Hall 2A on 2024-07-12]\n\n\rStart strong! by Honza Král\n\rhttps://ep2024.europython.eu/session/start-strong\n\n\rStarting new python projects should be fun, but often we get bogged down in the details and spend several weeks fine tuning our setup; Not to mention the unproductive time spent on discussions like:\n\n\r* oh, you are using `ruff`? I just use `black`!\n\r* how do you set up your dev environment?\n\r* what version of `superFramework` are you running?\n\r* can you please update your PR, the tests don't pass.\n\n\rLet's put a stop to it! We will go through a collection of tools and techniques you can use to set up your new project for success. What to look for and how to make sure you can hit the ground running.\n\n\rCovered tools/techniques:\n\rLinting, testing, CI, dependency management, editor config, and some more...\n\n\n\r---\n\rThis work is licensed under a Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License: https://creativecommons.org/licenses/by-nc-sa/4.0/",
        "thumbnail": "https://i.ytimg.com/vi/O18k-FF5qI0/maxresdefault.jpg",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=O18k-FF5qI0",
        "original_url": "https://www.youtube.com/watch?v=O18k-FF5qI0"
    },
    {
        "index": 116,
        "title": "Neurodiversity in the IT industry. Why do YOU need to know more about it? — Amelia Walter-Dzikowska",
        "url": "https://www.youtube.com/watch?v=cMsN0iJPV_k",
        "video_id": "cMsN0iJPV_k",
        "uploader": "EuroPython Conference",
        "uploader_id": "@EuroPythonConference",
        "uploader_url": "https://www.youtube.com/@EuroPythonConference",
        "upload_date": "20241002",
        "duration": 1858,
        "view_count": 83,
        "like_count": 2,
        "comment_count": null,
        "tags": [
            "europython",
            "python",
            "conference"
        ],
        "categories": [
            "Science & Technology"
        ],
        "description": "[EuroPython 2024 — South Hall 2A on 2024-07-12]\n\n\rNeurodiversity in the IT industry. Why do YOU need to know more about it? by Amelia Walter-Dzikowska\n\rhttps://ep2024.europython.eu/session/neurodiversity-in-the-it-industry-why-do-you-need-to-know-more-about-it\n\n\rImagine discovering that your brain is equipped in a rare, niche operation system. No wonder the standard software does not suit your hardware and you keep encountering difficult situations… Once you discover it is just software incompatibility and you update the right app versions, the world starts being more comfortable! Unfortunately, few apps only have adapted versions.\n\rIt is estimated that neuroatypical people constitute even up to 15-20% of the population. According to “the geek syndrome hypothesis” - autism, but also ADHD are likely to be common in people working in the IT industry. Neurodivergent people have a chance to become wonderful specialists and bring variety to the team thanks to a slightly different perception, special interests or ability to hyperfocus. Their presence can help introduce better practices such as clear communication and transparency. On the other hand, they are at risk of having various troubles in the world adapted to the neurotypical folk. \n\rThe author will present the current state of science on neurodiversity, the challenges faced by neurodivergent IT specialists and possible improvements to make the workplace more inclusive for everyone. As a neurodivergent advocate, an IT professional and a biologist with scientific mindset, she will combine her own life and career experience as a neuroatypical person with psychological knowledge which will create a unique perspective. The goal is to prove that neuroatypical people constitute a large part of the IT community and that even small actions can help meet their needs - and not only make their life easier, but also add more creativity to IT teams!\n\n\n\r---\n\rThis work is licensed under a Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License: https://creativecommons.org/licenses/by-nc-sa/4.0/",
        "thumbnail": "https://i.ytimg.com/vi/cMsN0iJPV_k/maxresdefault.jpg",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=cMsN0iJPV_k",
        "original_url": "https://www.youtube.com/watch?v=cMsN0iJPV_k"
    },
    {
        "index": 117,
        "title": "From Diamonds to Mixins: Demystifying Multiple Inheritance in Python — Ariel Ortiz",
        "url": "https://www.youtube.com/watch?v=97v2VVQlKSw",
        "video_id": "97v2VVQlKSw",
        "uploader": "EuroPython Conference",
        "uploader_id": "@EuroPythonConference",
        "uploader_url": "https://www.youtube.com/@EuroPythonConference",
        "upload_date": "20241002",
        "duration": 1881,
        "view_count": 201,
        "like_count": 6,
        "comment_count": null,
        "tags": [
            "europython",
            "python",
            "conference"
        ],
        "categories": [
            "Science & Technology"
        ],
        "description": "[EuroPython 2024 — South Hall 2A on 2024-07-12]\n\n\rFrom Diamonds to Mixins: Demystifying Multiple Inheritance in Python by Ariel Ortiz\n\rhttps://ep2024.europython.eu/session/from-diamonds-to-mixins-demystifying-multiple-inheritance-in-python\n\n\rMost Python programmers are probably aware that Python supports multiple inheritance. However, few are likely to be aware of its implications and inner workings. This talk aims to shed light on this commonly overlooked topic. \n\n\rIn the first part of the talk we will start by reviewing the “diamond problem,” where a class inherits from two classes that have a common ancestor, and contrast how this issue is handled in Python compared to other object oriented languages. Next, we will discuss the Method Resolution Order (MRO) to see how Python determines the sequence in which classes are considered when searching for a method or attribute. We will also review the use of the `super()` function that allows a subclass to call a method from its superclass in a way that adheres to the MRO.\n\n\rDuring the second part of the talk, we will explore real-world scenarios related to the benefits,  problems, and alternatives of using multiple inheritance in our programs. We will dedicate some time to examining the concept of a _mixin_ and how to implement it effectively in Python. Finally, we will delve into the _Interface Segregation Principle_ and explore collaboration and composition as mechanisms for avoiding the pitfalls of inheritance in general.\n\n\n\r---\n\rThis work is licensed under a Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License: https://creativecommons.org/licenses/by-nc-sa/4.0/",
        "thumbnail": "https://i.ytimg.com/vi/97v2VVQlKSw/maxresdefault.jpg",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=97v2VVQlKSw",
        "original_url": "https://www.youtube.com/watch?v=97v2VVQlKSw"
    },
    {
        "index": 118,
        "title": "Insights and Experiences of Packaging Python Binary Extensions — Goran Jelic-Cizmek",
        "url": "https://www.youtube.com/watch?v=buWHiWv5cXY",
        "video_id": "buWHiWv5cXY",
        "uploader": "EuroPython Conference",
        "uploader_id": "@EuroPythonConference",
        "uploader_url": "https://www.youtube.com/@EuroPythonConference",
        "upload_date": "20241002",
        "duration": 1101,
        "view_count": 61,
        "like_count": 0,
        "comment_count": null,
        "tags": [
            "europython",
            "python",
            "conference"
        ],
        "categories": [
            "Science & Technology"
        ],
        "description": "[EuroPython 2024 — South Hall 2B on 2024-07-12]\n\n\rInsights and Experiences of Packaging Python Binary Extensions by Goran Jelic-Cizmek\n\rhttps://ep2024.europython.eu/session/insights-and-experiences-of-packaging-python-binary-extensions\n\n\rIn the domain of scientific and high-performance computing (HPC), software packages are primarily written in compiled languages such as C, C++, and Fortran, complemented by end-user APIs implemented in Python. Such packages frequently incorporate CPU-specific code (e.g. SIMD extensions) and utilise GPU-specific programming models, such as OpenMP and CUDA, to achieve enhanced performance. Despite the recent proliferation of build backends for creating pure Python packages, the distribution of Python packages containing binary extensions poses a unique set of challenges and currently lacks a standardised solution. In this talk, I will share insights and experiences gained from building portable and performant Python wheels for a set of computational neuroscience projects, aiming for compatibility and usage across a diverse of compute platforms, from desktop to large compute clusters.\n\n\n\r---\n\rThis work is licensed under a Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License: https://creativecommons.org/licenses/by-nc-sa/4.0/",
        "thumbnail": "https://i.ytimg.com/vi/buWHiWv5cXY/maxresdefault.jpg",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=buWHiWv5cXY",
        "original_url": "https://www.youtube.com/watch?v=buWHiWv5cXY"
    },
    {
        "index": 119,
        "title": "Automatic trusted publishing with PyPI — Facundo Tuesca",
        "url": "https://www.youtube.com/watch?v=ozu48KewEl4",
        "video_id": "ozu48KewEl4",
        "uploader": "EuroPython Conference",
        "uploader_id": "@EuroPythonConference",
        "uploader_url": "https://www.youtube.com/@EuroPythonConference",
        "upload_date": "20241002",
        "duration": 1573,
        "view_count": 163,
        "like_count": 3,
        "comment_count": null,
        "tags": [
            "europython",
            "python",
            "conference"
        ],
        "categories": [
            "Science & Technology"
        ],
        "description": "[EuroPython 2024 — South Hall 2B on 2024-07-12]\n\n\rAutomatic trusted publishing with PyPI by Facundo Tuesca\n\rhttps://ep2024.europython.eu/session/automatic-trusted-publishing-with-pypi\n\n\rPyPI added support for “Trusted Publishing” last year, allowing package maintainers to create releases directly from their GitHub Actions pipelines without having to worry about token management. Trusted Publishing removes long-lived API tokens from the equation, removing a threat vector for supply chain attacks.\n\rIn this talk, we’ll go through the details of how this works, how maintainers can easily take advantage of it with minimal changes to their existing setup, and the ongoing effort in the last 12 months to add support for publishers other than GitHub, such as GitLab, Google, and ActiveState.\n\n\n\r---\n\rThis work is licensed under a Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License: https://creativecommons.org/licenses/by-nc-sa/4.0/",
        "thumbnail": "https://i.ytimg.com/vi/ozu48KewEl4/maxresdefault.jpg",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=ozu48KewEl4",
        "original_url": "https://www.youtube.com/watch?v=ozu48KewEl4"
    },
    {
        "index": 120,
        "title": "It’s happening: TUF joins PyPI (Warehouse) — Kairo de Araujo, Lukas Pühringer",
        "url": "https://www.youtube.com/watch?v=ZKcxa6Ch6mY",
        "video_id": "ZKcxa6Ch6mY",
        "uploader": "EuroPython Conference",
        "uploader_id": "@EuroPythonConference",
        "uploader_url": "https://www.youtube.com/@EuroPythonConference",
        "upload_date": "20241002",
        "duration": 1520,
        "view_count": 67,
        "like_count": 0,
        "comment_count": null,
        "tags": [
            "europython",
            "python",
            "conference"
        ],
        "categories": [
            "Science & Technology"
        ],
        "description": "[EuroPython 2024 — South Hall 2B on 2024-07-12]\n\n\rIt’s happening: TUF joins PyPI (Warehouse) by Kairo de Araujo, Lukas Pühringer\n\rhttps://ep2024.europython.eu/session/its-happening-tuf-joins-pypi-warehouse\n\n\rThe Update Framework (TUF) has been a prime reference for secure package delivery and updates for many years. Despite its popularity, integrating with existing package managers remains challenging.\n\n\rPEP 458 is a very good example of some of the related challenges. Authored a decade ago, it aims to protect the freshness, consistency, and integrity of packages in the Python Packaging Index (PyPI) and provide compromise resilience. Even though these goals remain largely unaddressed, PEP 458 has not made its way into production yet!\n\n\rWith Repository Service For TUF (RSTUF), a new tool has emerged, which makes implementing and maintaining a TUF-powered package repository a black box to the repository maintainers and which has become mature enough to kick off an incremental integration in Warehouse and RubyGems.\n\n\rIn this talk, Kairo, RSTUF's tech lead, and Lukas, TUF project maintainer, will show how RSTUF has evolved and allowed us to take a big leap towards adopting TUF in Warehouse and elsewhere. Primers on TUF, PEP 458, and Warehouse will be included.\n\n\n\r---\n\rThis work is licensed under a Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License: https://creativecommons.org/licenses/by-nc-sa/4.0/",
        "thumbnail": "https://i.ytimg.com/vi/ZKcxa6Ch6mY/maxresdefault.jpg",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=ZKcxa6Ch6mY",
        "original_url": "https://www.youtube.com/watch?v=ZKcxa6Ch6mY"
    },
    {
        "index": 121,
        "title": "Navigating Tech Leadership: Challenges and Strategies — Çağıl Uluşahin Sönmez",
        "url": "https://www.youtube.com/watch?v=JYO2DlrzRbA",
        "video_id": "JYO2DlrzRbA",
        "uploader": "EuroPython Conference",
        "uploader_id": "@EuroPythonConference",
        "uploader_url": "https://www.youtube.com/@EuroPythonConference",
        "upload_date": "20241002",
        "duration": 2086,
        "view_count": 69,
        "like_count": 1,
        "comment_count": null,
        "tags": [
            "europython",
            "python",
            "conference"
        ],
        "categories": [
            "Science & Technology"
        ],
        "description": "[EuroPython 2024 — South Hall 2B on 2024-07-12]\n\n\rNavigating Tech Leadership: Challenges and Strategies by Çağıl Uluşahin Sönmez\n\rhttps://ep2024.europython.eu/session/navigating-tech-leadership-challenges-and-strategies\n\n\rJoin us for a discussion on navigating tech leadership roles in the dynamic world of technology. \n\n\rIn this talk, we will explore the essence of managerial roles in the tech industry, examining the unique challenges faced by leaders at different levels. We'll discuss the critical decision every developer must make regarding balancing or giving up hands-on expertise with management responsibilities, as well as the challenges of transitioning from a primarily technical role to a managerial position.\n\n\rAdditionally, we'll explore the challenges that managees may face when led by managers and tech leads who may lack management training or experience. We'll also discuss strategies for fostering a more inclusive and supportive engineering culture overall.\n\n\rLet's talk about management in tech from the perspective of a tech lead that identifies as a woman.\n\n\n\r---\n\rThis work is licensed under a Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License: https://creativecommons.org/licenses/by-nc-sa/4.0/",
        "thumbnail": "https://i.ytimg.com/vi/JYO2DlrzRbA/maxresdefault.jpg",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=JYO2DlrzRbA",
        "original_url": "https://www.youtube.com/watch?v=JYO2DlrzRbA"
    },
    {
        "index": 122,
        "title": "The Imposter Staff Engineer’s Journey to Leadership — Manivannan Selvaraj",
        "url": "https://www.youtube.com/watch?v=K2CIG_U9SAw",
        "video_id": "K2CIG_U9SAw",
        "uploader": "EuroPython Conference",
        "uploader_id": "@EuroPythonConference",
        "uploader_url": "https://www.youtube.com/@EuroPythonConference",
        "upload_date": "20241002",
        "duration": 1521,
        "view_count": 515,
        "like_count": 17,
        "comment_count": null,
        "tags": [
            "europython",
            "python",
            "conference"
        ],
        "categories": [
            "Science & Technology"
        ],
        "description": "[EuroPython 2024 — South Hall 2B on 2024-07-12]\n\n\rThe Imposter Staff Engineer’s Journey to Leadership by Manivannan Selvaraj\n\rhttps://ep2024.europython.eu/session/the-imposter-staff-engineers-journey-to-leadership\n\n\rI, an undercover Imposter Syndrome sufferer, masquerade as a Staff Software Engineer amid an army of coding geniuses. Imagine you're playing a video game where you're pretending to be a powerful leader, but deep down, you're convinced you're not really good enough. That's my daily life as a staff software engineer leading a team, except it's not a game, and the 'quit' button doesn't work. In this talk, I'll tell you about my hilarious misadventures and unexpected triumphs in the rollercoaster ride of being a staff software engineer and how my team still manages to create cool things despite my 'imposter' moments.\n\n\n\r---\n\rThis work is licensed under a Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License: https://creativecommons.org/licenses/by-nc-sa/4.0/",
        "thumbnail": "https://i.ytimg.com/vi/K2CIG_U9SAw/maxresdefault.jpg",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=K2CIG_U9SAw",
        "original_url": "https://www.youtube.com/watch?v=K2CIG_U9SAw"
    },
    {
        "index": 123,
        "title": "How I used pgvector and PostgreSQL® to find pictures of me at a party — Tibs",
        "url": "https://www.youtube.com/watch?v=qXiprdhk87g",
        "video_id": "qXiprdhk87g",
        "uploader": "EuroPython Conference",
        "uploader_id": "@EuroPythonConference",
        "uploader_url": "https://www.youtube.com/@EuroPythonConference",
        "upload_date": "20241002",
        "duration": 1846,
        "view_count": 206,
        "like_count": 2,
        "comment_count": null,
        "tags": [
            "europython",
            "python",
            "conference"
        ],
        "categories": [
            "Science & Technology"
        ],
        "description": "[EuroPython 2024 — South Hall 2B on 2024-07-12]\n\n\rHow I used pgvector and PostgreSQL® to find pictures of me at a party by Tibs\n\rhttps://ep2024.europython.eu/session/how-i-used-pgvector-and-postgresql-r-to-find-pictures-of-me-at-a-party\n\n\rNowadays, if you attend an event you're bound to end up with a catalogue of photographs to look at. Formal events are likely to have a professional photographer, and modern smartphones mean that it's easy to make a photographic record of just about any gathering. It can be fun to look through the pictures, to find yourself or your friends and family, but it can also be tedious.\n\n\rAt our company get-together earlier in the year, the photographers did indeed take a lot of pictures. Afterwards the best of them were put up on our internal network - and like many people, I combed through them looking for those in which I appeared (yes, for vanity, but also with some amusement).\n\n\rIn this talk, I'll explain how to automate finding the photographs I'm in (or at least, mostly so). I'll walk through Python code that extracts faces using OpenCV, calculates vector embeddings using imgbeddings and OpenAI, and stores them in PostgreSQL® using pgvector. Given all of that, I can then make an SQL query to find which pictures I'm in.\n\n\rPython is a good fit for data pipelines like this, as it has good bindings to machine learning packages, and excellent support for talking to PostgreSQL.\n\n\rYou may be wondering why that sequence ends with PostgreSQL (and SQL) rather than something more machine learning specific. I'll talk about that as well, and in particular about how PostgreSQL allows us to cope when the amount of data gets too large to be handled locally, and how useful it is to be able to relate the similarity calculations to other columns in the database - in our case, perhaps including the image metadata.\n\n\n\r---\n\rThis work is licensed under a Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License: https://creativecommons.org/licenses/by-nc-sa/4.0/",
        "thumbnail": "https://i.ytimg.com/vi/qXiprdhk87g/maxresdefault.jpg",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=qXiprdhk87g",
        "original_url": "https://www.youtube.com/watch?v=qXiprdhk87g"
    },
    {
        "index": 124,
        "title": "Fundamentals of Retrieval Augmented Generation — Catalin Hanga",
        "url": "https://www.youtube.com/watch?v=vSwK5sBpD2c",
        "video_id": "vSwK5sBpD2c",
        "uploader": "EuroPython Conference",
        "uploader_id": "@EuroPythonConference",
        "uploader_url": "https://www.youtube.com/@EuroPythonConference",
        "upload_date": "20241002",
        "duration": 1843,
        "view_count": 100,
        "like_count": 1,
        "comment_count": null,
        "tags": [
            "europython",
            "python",
            "conference"
        ],
        "categories": [
            "Science & Technology"
        ],
        "description": "[EuroPython 2024 — Terrace 2A on 2024-07-12]\n\n\rFundamentals of Retrieval Augmented Generation by Catalin Hanga\n\rhttps://ep2024.europython.eu/session/fundamentals-of-retrieval-augmented-generation\n\n\rRetrieval Augmented Generation (RAG) has emerged in recent years as a popular technique at the crossroads of Information Retrieval and Natural Language Generation. It represents a promising new approach that combines the strengths of both retrieval-based systems and generative AI models, aiming to address the limitations of each, while enhancing their overall performance on document intelligence tasks. This talk will introduce the key frameworks, methodologies and advancements in RAG, exploring its ability to empower Large Language Models with a deeper comprehension of context, by leveraging pre-existing knowledge from external corpora. We will review the theoretical foundations, practical applications, and technical challenges associated with RAG, showcasing its potential to impact various fields, such as document summarization or database management. Through this talk, attendees will gain insights into the most relevant topics related to RAG, including token embedding, vector indexing and semantic similarity search.\n\n\n\r---\n\rThis work is licensed under a Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License: https://creativecommons.org/licenses/by-nc-sa/4.0/",
        "thumbnail": "https://i.ytimg.com/vi/vSwK5sBpD2c/maxresdefault.jpg",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=vSwK5sBpD2c",
        "original_url": "https://www.youtube.com/watch?v=vSwK5sBpD2c"
    },
    {
        "index": 125,
        "title": "Representation is King: The Journey to Quality Dialog Embeddings — Adam Zíka",
        "url": "https://www.youtube.com/watch?v=gE2LFy7yKlQ",
        "video_id": "gE2LFy7yKlQ",
        "uploader": "EuroPython Conference",
        "uploader_id": "@EuroPythonConference",
        "uploader_url": "https://www.youtube.com/@EuroPythonConference",
        "upload_date": "20241002",
        "duration": 1634,
        "view_count": 85,
        "like_count": 3,
        "comment_count": null,
        "tags": [
            "europython",
            "python",
            "conference"
        ],
        "categories": [
            "Science & Technology"
        ],
        "description": "[EuroPython 2024 — Terrace 2A on 2024-07-12]\n\n\rRepresentation is King: The Journey to Quality Dialog Embeddings by Adam Zíka\n\rhttps://ep2024.europython.eu/session/representation-is-king-the-journey-to-quality-dialog-embeddings\n\n\rIn natural language processing, embeddings are crucial for understanding textual data. In this talk, we’ll explore sentence embeddings and their application in dialog systems. We'll focus on a use case involving the classification of dialogs.\n\n\rWe'll demonstrate the necessity of sentence transformers for this problem, specifically utilizing one of the top-performing small-sized sentence transformers. We will show how to fine-tune this model with both labeled and unlabeled dialog data, using the SentenceTransformers Python framework.\n\n\rThis talk is practical, packed with easy-to-follow examples, and aimed at building intuition around this topic. While some basic knowledge of Transformers would be beneficial, it is not required. Newcomers are also welcome.\n\n\n\r---\n\rThis work is licensed under a Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License: https://creativecommons.org/licenses/by-nc-sa/4.0/",
        "thumbnail": "https://i.ytimg.com/vi/gE2LFy7yKlQ/maxresdefault.jpg",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=gE2LFy7yKlQ",
        "original_url": "https://www.youtube.com/watch?v=gE2LFy7yKlQ"
    },
    {
        "index": 126,
        "title": "Which LLM said that? - watermarking generated text — Adam Kaczmarek",
        "url": "https://www.youtube.com/watch?v=OzpFJtxiR70",
        "video_id": "OzpFJtxiR70",
        "uploader": "EuroPython Conference",
        "uploader_id": "@EuroPythonConference",
        "uploader_url": "https://www.youtube.com/@EuroPythonConference",
        "upload_date": "20241002",
        "duration": 1842,
        "view_count": 109,
        "like_count": 2,
        "comment_count": null,
        "tags": [
            "europython",
            "python",
            "conference"
        ],
        "categories": [
            "Science & Technology"
        ],
        "description": "[EuroPython 2024 — Terrace 2A on 2024-07-12]\n\n\rWhich LLM said that? - watermarking generated text by Adam Kaczmarek\n\rhttps://ep2024.europython.eu/session/which-llm-said-that-watermarking-generated-text\n\n\rWith the emergence of large generative language models there comes a problem of assigning the authorship of the AI-generated texts to its original source. This raises many concerns regarding eg. social engineering, fake news generation and cheating in many educational assignments. While there are several black-box methods for detecting if text was written by human or LLM they have significant issues. \n\n\rI will discuss how by watermarking you can equip your LLM with a mechanism that undetectable to human eye can give you the means of verifying if it was the true source of a generated text.\n\n\n\r---\n\rThis work is licensed under a Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License: https://creativecommons.org/licenses/by-nc-sa/4.0/",
        "thumbnail": "https://i.ytimg.com/vi/OzpFJtxiR70/maxresdefault.jpg",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=OzpFJtxiR70",
        "original_url": "https://www.youtube.com/watch?v=OzpFJtxiR70"
    },
    {
        "index": 127,
        "title": "Those annotations can have things other than typing?! — Mattijs Ugen",
        "url": "https://www.youtube.com/watch?v=cQl50koGAmg",
        "video_id": "cQl50koGAmg",
        "uploader": "EuroPython Conference",
        "uploader_id": "@EuroPythonConference",
        "uploader_url": "https://www.youtube.com/@EuroPythonConference",
        "upload_date": "20241002",
        "duration": 1453,
        "view_count": 124,
        "like_count": 1,
        "comment_count": null,
        "tags": [
            "europython",
            "python",
            "conference"
        ],
        "categories": [
            "Science & Technology"
        ],
        "description": "[EuroPython 2024 — Terrace 2A on 2024-07-12]\n\n\rThose annotations can have things other than typing?! by Mattijs Ugen\n\rhttps://ep2024.europython.eu/session/those-annotations-can-have-things-other-than-typing\n\n\rAnnotating functions with typing information is commonplace nowadays. Annotations have become synonymous with typing information, even though they could be just about anything you’d want. Are there use cases for function annotations other than typing? Is that useful? Should you care? Should you stop using typing?\n\n\n\r---\n\rThis work is licensed under a Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License: https://creativecommons.org/licenses/by-nc-sa/4.0/",
        "thumbnail": "https://i.ytimg.com/vi/cQl50koGAmg/maxresdefault.jpg",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=cQl50koGAmg",
        "original_url": "https://www.youtube.com/watch?v=cQl50koGAmg"
    },
    {
        "index": 128,
        "title": "MLtraq: Track your ML/AI experiments at hyperspeed — Michele Dallachiesa",
        "url": "https://www.youtube.com/watch?v=QU9FfyAFObI",
        "video_id": "QU9FfyAFObI",
        "uploader": "EuroPython Conference",
        "uploader_id": "@EuroPythonConference",
        "uploader_url": "https://www.youtube.com/@EuroPythonConference",
        "upload_date": "20241002",
        "duration": 1328,
        "view_count": 52,
        "like_count": 0,
        "comment_count": null,
        "tags": [
            "europython",
            "python",
            "conference"
        ],
        "categories": [
            "Science & Technology"
        ],
        "description": "[EuroPython 2024 — Terrace 2A on 2024-07-12]\n\n\rMLtraq: Track your ML/AI experiments at hyperspeed by Michele Dallachiesa\n\rhttps://ep2024.europython.eu/session/mltraq-track-your-ml-ai-experiments-at-hyperspeed\n\n\rEvery second spent waiting for initializations and obscure delays hindering high-frequency logging, further limited by what you can track, an experiment dies. Wouldn’t loading and starting tracking in nearly zero time be nice? What if we could track more and faster, even handling arbitrarily large, complex Python objects with ease?\n\n\rIn this talk, I will present the results of comparative benchmarks covering Weights & Biases, MLflow, FastTrackML, Neptune, Aim, Comet, and MLtraq. You will learn their strengths and weaknesses, what makes them slow and fast, and what sets MLtraq apart, making it 100x faster and capable of handling tens of thousands of experiments.\n\n\rThis presentation will not only be enlightening for those involved in AI/ML experimentation but will also be invaluable for anyone interested in the efficient and safe serialization of Python objects.\n\n\n\r---\n\rThis work is licensed under a Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License: https://creativecommons.org/licenses/by-nc-sa/4.0/",
        "thumbnail": "https://i.ytimg.com/vi/QU9FfyAFObI/maxresdefault.jpg",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=QU9FfyAFObI",
        "original_url": "https://www.youtube.com/watch?v=QU9FfyAFObI"
    },
    {
        "index": 129,
        "title": "Exploring Apache Iceberg: A Modern Data Lake Stack — Gowthami Bhogireddy",
        "url": "https://www.youtube.com/watch?v=GT6mb0043Xk",
        "video_id": "GT6mb0043Xk",
        "uploader": "EuroPython Conference",
        "uploader_id": "@EuroPythonConference",
        "uploader_url": "https://www.youtube.com/@EuroPythonConference",
        "upload_date": "20241002",
        "duration": 1724,
        "view_count": 1153,
        "like_count": 29,
        "comment_count": null,
        "tags": [
            "europython",
            "python",
            "conference"
        ],
        "categories": [
            "Science & Technology"
        ],
        "description": "[EuroPython 2024 — Terrace 2A on 2024-07-12]\n\n\rExploring Apache Iceberg: A Modern Data Lake Stack by Gowthami Bhogireddy\n\rhttps://ep2024.europython.eu/session/exploring-apache-iceberg-a-modern-data-lake-stack\n\n\rBloomberg is a leading provider of financial data, with information spanning multiple decades. Handling and organizing these huge datasets can be challenging, with typical concerns including sluggish query performance, high storage costs, and data consistency problems.\n\rThis talk will describe how Apache Iceberg is revolutionizing big data management, offering ACID transactions, time travel, and seamless schema evolution that enable lightning-fast query performance and robust data consistency for even our largest workloads.\n\rThe session will introduce Apache Iceberg, an open-source table format that enables incremental updates, versioning, and schema evolution. The discussion will focus on how these features address common big data management challenges, improve query performance, and reduce storage costs. Finally, the session will outline how our Enterprise Data Lake Applications engineering team has harnessed the capabilities of Apache Iceberg (especially PyIceberg) to revolutionize our data management and analytical processing workflows.\n\rAttendees will be able to apply the best practices discussed in the talk to build better infrastructure for their growing data demands and spur innovation within their organization.\n\n\n\r---\n\rThis work is licensed under a Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License: https://creativecommons.org/licenses/by-nc-sa/4.0/",
        "thumbnail": "https://i.ytimg.com/vi/GT6mb0043Xk/maxresdefault.jpg",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=GT6mb0043Xk",
        "original_url": "https://www.youtube.com/watch?v=GT6mb0043Xk"
    },
    {
        "index": 130,
        "title": "PEP 683: Immortal Objects - A new approach for memory managing — Vinícius Gubiani Ferreira",
        "url": "https://www.youtube.com/watch?v=so9bklb1KPA",
        "video_id": "so9bklb1KPA",
        "uploader": "EuroPython Conference",
        "uploader_id": "@EuroPythonConference",
        "uploader_url": "https://www.youtube.com/@EuroPythonConference",
        "upload_date": "20241002",
        "duration": 1701,
        "view_count": 130,
        "like_count": 3,
        "comment_count": null,
        "tags": [
            "europython",
            "python",
            "conference"
        ],
        "categories": [
            "Science & Technology"
        ],
        "description": "[EuroPython 2024 — Terrace 2B on 2024-07-12]\n\n\rPEP 683: Immortal Objects - A new approach for memory managing by Vinícius Gubiani Ferreira\n\rhttps://ep2024.europython.eu/session/pep-683-immortal-objects-a-new-approach-for-memory-managing\n\n\rFor most people that use Python, worrying about memory is not an issue. But that's not the case when you have to handle a lot of requests on a large scale. So how do you reduce memory consumption without affecting the CPU?\n\n\rIn this presentation I'll discuss about memory management in Python from the basics, where the necessity for PEP 683 came from, and the changes introduced by it. I also intend to discuss why this PEP is so important for the language, and what we'll be able to achieve with it in the future, such as changes to the GIL and true parallelism.\n\n\rThe talk is targeted for folks who are intermediate/advanced pythonistas. People who are just starting with Python (maybe less than 1.5 years) may feel a bit lost. Even so, curious learners are more than welcome to join, and I'll try my best to make it easy for all audiences on this advanced topic.\n\rAfter this presentation, participants will learn a bit more about how memory management works under the hood in python, and how it may change in the next couple of years.\n\n\n\r---\n\rThis work is licensed under a Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License: https://creativecommons.org/licenses/by-nc-sa/4.0/",
        "thumbnail": "https://i.ytimg.com/vi/so9bklb1KPA/maxresdefault.jpg",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=so9bklb1KPA",
        "original_url": "https://www.youtube.com/watch?v=so9bklb1KPA"
    },
    {
        "index": 131,
        "title": "You are sharing your code wrong (and what to do about it) — Jeremiah Paige",
        "url": "https://www.youtube.com/watch?v=AMRHRNDVhEg",
        "video_id": "AMRHRNDVhEg",
        "uploader": "EuroPython Conference",
        "uploader_id": "@EuroPythonConference",
        "uploader_url": "https://www.youtube.com/@EuroPythonConference",
        "upload_date": "20241002",
        "duration": 1667,
        "view_count": 151,
        "like_count": 9,
        "comment_count": null,
        "tags": [
            "europython",
            "python",
            "conference"
        ],
        "categories": [
            "Science & Technology"
        ],
        "description": "[EuroPython 2024 — Terrace 2B on 2024-07-12]\n\n\rYou are sharing your code wrong (and what to do about it) by Jeremiah Paige\n\rhttps://ep2024.europython.eu/session/you-are-sharing-your-code-wrong-and-what-to-do-about-it\n\n\rEveryone who writes also distributes Python code. The only reliable way to share Python code is by packaging it, any other way hurts your consumers. Packaging can be an intimidating topic most would rather avoid but following just a few best practices of packaging can make your code much easier to share, even without going through the process of uploading to pypi.org.\n\n\n\r---\n\rThis work is licensed under a Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License: https://creativecommons.org/licenses/by-nc-sa/4.0/",
        "thumbnail": "https://i.ytimg.com/vi/AMRHRNDVhEg/maxresdefault.jpg",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=AMRHRNDVhEg",
        "original_url": "https://www.youtube.com/watch?v=AMRHRNDVhEg"
    },
    {
        "index": 132,
        "title": "Tackling Thread Safety in Python — Jothir Adithyan, Adarsh Divakaran",
        "url": "https://www.youtube.com/watch?v=RO1PUe5UeXM",
        "video_id": "RO1PUe5UeXM",
        "uploader": "EuroPython Conference",
        "uploader_id": "@EuroPythonConference",
        "uploader_url": "https://www.youtube.com/@EuroPythonConference",
        "upload_date": "20241002",
        "duration": 1697,
        "view_count": 176,
        "like_count": 3,
        "comment_count": null,
        "tags": [
            "europython",
            "python",
            "conference"
        ],
        "categories": [
            "Science & Technology"
        ],
        "description": "[EuroPython 2024 — Terrace 2B on 2024-07-12]\n\n\rTackling Thread Safety in Python by Jothir Adithyan, Adarsh Divakaran\n\rhttps://ep2024.europython.eu/session/tackling-thread-safety-in-python\n\n\rThread safety is often overlooked when we start with Python for developing simple scripts. But the hidden monster will be unleashed when we try to run non-thread safe code in a multithreaded setup. \n\n\rWe will discuss the problems which can happen when seemingly good code is run in a multithreaded environment. We will walk over the concept of race coditions, how Python’s GIL currently affects multithreading and will cover steps to fix thread unsafe code using synchronization primitives.\n\n\n\r---\n\rThis work is licensed under a Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License: https://creativecommons.org/licenses/by-nc-sa/4.0/",
        "thumbnail": "https://i.ytimg.com/vi/RO1PUe5UeXM/maxresdefault.jpg",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=RO1PUe5UeXM",
        "original_url": "https://www.youtube.com/watch?v=RO1PUe5UeXM"
    },
    {
        "index": 133,
        "title": "Effective Strategies for Disability Inclusion in Open Source Communities — Brayan Kai Mwanyumba",
        "url": "https://www.youtube.com/watch?v=v6QBk1MDmPI",
        "video_id": "v6QBk1MDmPI",
        "uploader": "EuroPython Conference",
        "uploader_id": "@EuroPythonConference",
        "uploader_url": "https://www.youtube.com/@EuroPythonConference",
        "upload_date": "20241002",
        "duration": 1260,
        "view_count": 50,
        "like_count": 0,
        "comment_count": null,
        "tags": [
            "europython",
            "python",
            "conference"
        ],
        "categories": [
            "Science & Technology"
        ],
        "description": "[EuroPython 2024 — Terrace 2B on 2024-07-12]\n\n\rEffective Strategies for Disability Inclusion in Open Source Communities by Brayan Kai Mwanyumba\n\rhttps://ep2024.europython.eu/session/effective-strategies-for-disability-inclusion-in-open-source-communities\n\n\rIn today's world, where disability affects a significant percentage of the population, it is crucial for open-source communities to address the challenges faced by persons with disabilities (PWDs) and work towards their inclusion. This talk will delve into practical measures such as referral programs, internal disability disclosures, and integrating disability into existing agendas rather than treating it as a separate issue. We will dive into disability mainstreaming with a focus on its role in promoting universal design and inclusivity. Attendees will gain insights into establishing disability mainstreaming committees, formulating action plans, implementing best practices, and monitoring and evaluating progress.\n\n\n\r---\n\rThis work is licensed under a Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License: https://creativecommons.org/licenses/by-nc-sa/4.0/",
        "thumbnail": "https://i.ytimg.com/vi/v6QBk1MDmPI/maxresdefault.jpg",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=v6QBk1MDmPI",
        "original_url": "https://www.youtube.com/watch?v=v6QBk1MDmPI"
    },
    {
        "index": 134,
        "title": "Streamlining Testing in a Large Python Codebase — Jimmy Lai",
        "url": "https://www.youtube.com/watch?v=SkbugLOeyKk",
        "video_id": "SkbugLOeyKk",
        "uploader": "EuroPython Conference",
        "uploader_id": "@EuroPythonConference",
        "uploader_url": "https://www.youtube.com/@EuroPythonConference",
        "upload_date": "20241002",
        "duration": 1868,
        "view_count": 128,
        "like_count": 2,
        "comment_count": null,
        "tags": [
            "europython",
            "python",
            "conference"
        ],
        "categories": [
            "Science & Technology"
        ],
        "description": "[EuroPython 2024 — Terrace 2B on 2024-07-12]\n\n\rStreamlining Testing in a Large Python Codebase by Jimmy Lai\n\rhttps://ep2024.europython.eu/session/streamlining-testing-in-a-large-python-codebase\n\n\rMaintaining code quality through effective testing becomes increasingly challenging as codebases expand and developer teams grow. In our rapidly expanding codebase, we encountered common obstacles such as increasing test suite execution time, slow test coverage reporting and delayed test startup. By leveraging innovative strategies using open-source tools, we achieved remarkable enhancements in testing efficiency and code quality.\n\rChallenges Faced:\n\r- Test Suite Execution Time: The duration of test suite execution escalated significantly as we added more tests over time, hampering development speed.\n\r- Slow Test Startup: Complex test setup led to prolonged test startup times, impeding developer productivity.\n\r- Test Coverage Reporting Overhead: Coverage tools introduced substantial overhead and impacted test performance.\n\n\rSolutions Implemented:\n\r- Parallel Test Execution: We applied pytest-xdist to distribute tests across multiple runners, significantly reducing test suite execution time and enabling faster development iterations.\n\r- Optimized Test Startup: Pre-installing dependencies in a Docker image and utilizing Kubernetes for auto-scaling continuous integration runners helped expedite test startup times, improving developer efficiency. For local development, we used pytest-hot-reloading to reload tests fast after code editing.\n\r- Efficient Test Coverage Reporting: Customizing the coverage tool to collect data only on updated files of pull requests minimized overhead on test coverage reporting.\n\rAs a result, in the past year, our test case volume increased by 8000, test coverage was elevated to 85%, and Continuous Integration (CI) test duration was maintained under 15 minute\n\n\n\r---\n\rThis work is licensed under a Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License: https://creativecommons.org/licenses/by-nc-sa/4.0/",
        "thumbnail": "https://i.ytimg.com/vi/SkbugLOeyKk/maxresdefault.jpg",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=SkbugLOeyKk",
        "original_url": "https://www.youtube.com/watch?v=SkbugLOeyKk"
    },
    {
        "index": 135,
        "title": "Building Event-Driven Python service using FastStream and AsyncAPI — Abhinand C",
        "url": "https://www.youtube.com/watch?v=5UL71U3NcCg",
        "video_id": "5UL71U3NcCg",
        "uploader": "EuroPython Conference",
        "uploader_id": "@EuroPythonConference",
        "uploader_url": "https://www.youtube.com/@EuroPythonConference",
        "upload_date": "20241002",
        "duration": 1735,
        "view_count": 383,
        "like_count": 6,
        "comment_count": null,
        "tags": [
            "europython",
            "python",
            "conference"
        ],
        "categories": [
            "Science & Technology"
        ],
        "description": "[EuroPython 2024 — Terrace 2B on 2024-07-12]\n\n\rBuilding Event-Driven Python service using FastStream and AsyncAPI by Abhinand C\n\rhttps://ep2024.europython.eu/session/building-event-driven-python-service-using-faststream-and-asyncapi\n\n\rIn this talk, we dive into the world of Event Driven Architecture and Message Streaming, using Python and FastStream. \n\n\rYou'll learn to integrate FastStream, a python framework, into your projects and leverage AsyncAPI to define contracts for asynchronous communication and event streaming. Through practical examples and insights, you'll discover the art of building scalable, responsive Python applications that thrive in real-time environments.\n\n\n\r#### About AsyncAPI\n\rAsyncAPI is an open standard/specification and growing set of open-source tools to help developers define, build, and maintain asynchronous APIs and Event-Driven Architectures. It describes message-driven APIs in a machine-readable format, and is protocol-agnostic.\n\n\r#### About FastStream\n\rFastStream is a powerful and easy-to-use Python framework for building asynchronous services interacting with event streams such as Apache Kafka, RabbitMQ, NATS and Redis. FastStream simplifies the process of writing producers and consumers for message queues, handling all the parsing, networking and documentation generation automatically. FastStream provides unified API across multiple brokers, built-in Pydantic validations, automatic AsyncAPI documentation, FastAPI like Dependency Injection System, built-in support for test and extensions.\n\n\n\r---\n\rThis work is licensed under a Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License: https://creativecommons.org/licenses/by-nc-sa/4.0/",
        "thumbnail": "https://i.ytimg.com/vi/5UL71U3NcCg/maxresdefault.jpg",
        "age_limit": 0,
        "is_live": false,
        "was_live": false,
        "availability": "public",
        "webpage_url": "https://www.youtube.com/watch?v=5UL71U3NcCg",
        "original_url": "https://www.youtube.com/watch?v=5UL71U3NcCg"
    }
]
