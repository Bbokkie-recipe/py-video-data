index,title,url,video_id,uploader,uploader_id,uploader_url,upload_date,duration,view_count,like_count,comment_count,tags,categories,description,thumbnail,age_limit,is_live,was_live,availability,webpage_url,original_url
1,Closing - PyCon Italia 2024,https://www.youtube.com/watch?v=hZyYl3XB5Mc,hZyYl3XB5Mc,Python Italia,@PythonItalia,https://www.youtube.com/@PythonItalia,20240726,1508,360,0,,,Entertainment,Closing - PyCon Italia 2024,https://i.ytimg.com/vi/hZyYl3XB5Mc/maxresdefault.jpg,0,False,False,public,https://www.youtube.com/watch?v=hZyYl3XB5Mc,https://www.youtube.com/watch?v=hZyYl3XB5Mc
2,Opening - PyCon Italia 2024,https://www.youtube.com/watch?v=EOypTw_Eo5M,EOypTw_Eo5M,Python Italia,@PythonItalia,https://www.youtube.com/@PythonItalia,20240711,777,147,0,,,Entertainment,"Opening - PyCon Italia 2024

Welcome to PyCon Italia 2024!",https://i.ytimg.com/vi/EOypTw_Eo5M/maxresdefault.jpg,0,False,False,public,https://www.youtube.com/watch?v=EOypTw_Eo5M,https://www.youtube.com/watch?v=EOypTw_Eo5M
3,"Zero waste: trucchi per riciclare (la memoria) meglio - Francesco Panico, Carlo Bertini",https://www.youtube.com/watch?v=f8Yy4d71cLA,f8Yy4d71cLA,Python Italia,@PythonItalia,https://www.youtube.com/@PythonItalia,20240702,1740,184,6,,"CPython,CodeAnalysis,Debugging,Performance",Entertainment,"Zero waste: trucchi per riciclare (la memoria) meglio - Francesco Panico, Carlo Bertini - PyCon Italia 2024

Elevator Pitch:
Un talk sul riciclaggio? In un certo senso si! Parleremo infatti del peggior spreco per un dev: quello di memoria. Esploreremo il funzionamento del GC e gli algoritmi alla base del suo funzionamento. Impareremo alcune tecniche per analizzare e ridurre il consumo di memoria del nostro codice.

Learn more: https://2024.pycon.it/event/zero-waste-trucchi-per-riciclare-la-memoria-meglio

#Performance #CPython #Debugging #CodeAnalysis",https://i.ytimg.com/vi/f8Yy4d71cLA/maxresdefault.jpg,0,False,False,public,https://www.youtube.com/watch?v=f8Yy4d71cLA,https://www.youtube.com/watch?v=f8Yy4d71cLA
4,🧼 From GPU-poor to data-rich: data quality practices for LLM fine-tuning - David Berenstein,https://www.youtube.com/watch?v=BsPM410jdSg,BsPM410jdSg,Python Italia,@PythonItalia,https://www.youtube.com/@PythonItalia,20240702,1692,298,6,,"BestPractice,CaseStudy,MachineLearning,NaturalLanguageProcessing,OpenSource",Entertainment,"🧼 From GPU-poor to data-rich: data quality practices for LLM fine-tuning - David Berenstein - PyCon Italia 2024

Elevator Pitch:
If you are GPU-poor you need to become data-rich. I will give an overview of what we learned from looking at Alpaca, LIMA, Dolly, UltraFeedback and Zephyr and how we applied that to fine-tuning a state-of-the-art open source LLM called Notus and Notux by becoming data-rich.

Description:
GPUs are in high demand and low supply but being GPU-poor can be solved by focusing on data quality and becoming data-rich. By looking at efforts like Alpaca, LIMA, Dolly, UltraFeedback and Zephyr, we can see again and again that data quality is often a thing that does not get the attention it deserves. 

1) Alpaca was made up of synthetic data that was not representative of real-world usage. 2) LIMA standing for Less Is More Alignment showed that a high-quality curated preference dataset with only a fraction of the required data could outperform other datasets in alignment tasks. 3) Databricks employees seemed to misunderstand the annotation task at hand. 3) UltraFeedback showed synthetic data at scale was possible and that GPT4 could be used to curate data aligned with human judgement. 4) Zephyr was trained on UltraFeedback but overlooked a bug in the dataset. 5) We trained Notus by resolving this bug but overlooked the fact training data was present in the benchmarks. 6) We started distilabel and worked on Notux.

Learn more: https://2024.pycon.it/event/from-gpu-poor-to-data-rich-data-quality-practices-for-llm-fine-tuning

#MachineLearning #OpenSource #BestPractice #CaseStudy #NaturalLanguageProcessing",https://i.ytimg.com/vi/BsPM410jdSg/maxresdefault.jpg,0,False,False,public,https://www.youtube.com/watch?v=BsPM410jdSg,https://www.youtube.com/watch?v=BsPM410jdSg
5,"Embeddings, Transformers, RLHF: Three key ideas to understand ChatGPT - Luca Baggi",https://www.youtube.com/watch?v=91Bbn0TYSoM,91Bbn0TYSoM,Python Italia,@PythonItalia,https://www.youtube.com/@PythonItalia,20240702,1469,478,15,,"BestPractice,DeepLearning,Education",Entertainment,"Embeddings, Transformers, RLHF: Three key ideas to understand ChatGPT - Luca Baggi - PyCon Italia 2024

Elevator Pitch:
Everyone is using ChatGPT, but few know how it works. This talk will drive the audience through the main ideas powering ChatGPT, to rip through the curtain of magic around the tool.

Description:
ChatGPT has become a groundbreaking tool, transforming how professionals in various industries work. However, while many articles focus on ""the 30 prompts everybody needs to know"", they often overlook the underlying technology of ChatGPT. 

To truly understand ChatGPT, it's important to comprehend three key concepts:

1. **Embeddings**: how Large Language Models (LLMs) convert words and phrases into numerical values, allowing them to interpret natural language effectively.
2. **Transformers**: advanced deep-learning modules that enable LLMs to understand semantic connections within text, even when they're widely spaced.
3. **RLHF (Reinforcement Learning with Human Feedback)**: a technique to align AI models with our intended purposes and ethical standards.

In our presentation, we will explore the four primary steps involved in building and training a GPT-like model. In our journey, we will discuss Embeddings, Transformers, and RLHF, but we will not stop at the technical details. 

By relying on the laters academic studies, we will also discuss both the limitations and strengths of current generative AI models and provide actionable insights to foster their safe and effective adoption.

Learn more: https://2024.pycon.it/event/embeddings-transformers-rlhf-three-key-ideas-to-understand-chatgpt

#Education #BestPractice #DeepLearning",https://i.ytimg.com/vi/91Bbn0TYSoM/maxresdefault.jpg,0,False,False,public,https://www.youtube.com/watch?v=91Bbn0TYSoM,https://www.youtube.com/watch?v=91Bbn0TYSoM
6,Lightning Talks - PyCon Italia 2024,https://www.youtube.com/watch?v=SnD_zHf95sk,SnD_zHf95sk,Python Italia,@PythonItalia,https://www.youtube.com/@PythonItalia,20240702,3679,204,3,,,Entertainment,"Lightning Talks - PyCon Italia 2024

Description:
Howdy 👋

Welcome to the Lightning Talk (**LT**) Session at PyCon Italia 2024. 

In case you were wondering what a LT is, here a short and pompous definition kindly provided by ChatGPT™ :

ᐳ Lightning Talks are commonly used in conferences, seminars, and tech meetups to provide a platform for speakers to share ideas without requiring a significant time commitment from the audience. They are particularly popular in tech and academic communities where they can be used to present new ideas, research findings, or interesting projects.

In essence, LTs are very short talks (4 to 5 minutes) that offer the opportunity to *any* participant to get up on stage, and share with the community what they have to say! **Any** topic is a **good** topic for a LT (_as long as it is permitted by the CoC_, ed. ) .


### Proposing a Lighting Talk at PyCon Italia 2024 

To send in your proposal for a LT, all we need is a **title** and **the name(s) of the speaker(s)** to be called up on stage. 

This year submissions will be organised according to **four categories**:

- **Community & Diversity**, for community and/or diversity initiatives;
- **Announcement** (limited to 1 min) about upcoming conferences, events, call for papers; 
- **First-time Speaker**: special category for whoever is going to go on stage for the first time!
- **General Track** : default category, if none of the above applies.


All the submissions will be collected in a **special box** located at the **Registration booth**. 

It will be possible to send in your proposal anytime during the conference, until the beginning of the session.

Learn more: https://2024.pycon.it/event/lightning-talks",https://i.ytimg.com/vi/SnD_zHf95sk/maxresdefault.jpg,0,False,False,public,https://www.youtube.com/watch?v=SnD_zHf95sk,https://www.youtube.com/watch?v=SnD_zHf95sk
7,A Tale from the Trenches - Sheena O'Connell,https://www.youtube.com/watch?v=93zAMQMGKaM,93zAMQMGKaM,Python Italia,@PythonItalia,https://www.youtube.com/@PythonItalia,20240701,3425,184,6,1.0,,Entertainment,"A Tale from the Trenches - Sheena O'Connell - PyCon Italia 2024

Description:
Once upon a time, there was an on-premises, non-profit training provider called Umuzi. Umuzi focused on teaching high-value digital skills (including Python) to high-potential un/der-employed youth and was based in JeppesTown, South Africa. The premises were... cosy. I had recently been promoted to be Umuzi's CTO when COVID hit. It was a rough time, we had a lot of learners who we had brought into Jeppestown from around the country for training and we needed to figure out how to get them all home and how to keep supporting their growth and learning.
In the end we didn't just survive COVID, we scaled up. Django helped.

Learn more: https://2024.pycon.it/event/a-tale-from-the-trenches",https://i.ytimg.com/vi/93zAMQMGKaM/maxresdefault.jpg,0,False,False,public,https://www.youtube.com/watch?v=93zAMQMGKaM,https://www.youtube.com/watch?v=93zAMQMGKaM
8,Scaling Yourself: Make an Impact to Billions - Daniel Roy Greenfeld,https://www.youtube.com/watch?v=3r6yJu21mbI,3r6yJu21mbI,Python Italia,@PythonItalia,https://www.youtube.com/@PythonItalia,20240701,3394,300,9,,,Entertainment,"Scaling Yourself: Make an Impact to Billions - Daniel Roy Greenfeld - PyCon Italia 2024

Description:
This talk connects the core components of what makes a good Python (or any language) developer to activities that can impact billions of people. The magnitude of lives affected raises ethical questions, as Ian Malcolm says, ""Your scientists were so preoccupied with whether or not they could, they didn’t stop to think if they should.""

Learn more: https://2024.pycon.it/event/scaling-yourself-make-an-impact-to-billions",https://i.ytimg.com/vi/3r6yJu21mbI/maxresdefault.jpg,0,False,False,public,https://www.youtube.com/watch?v=3r6yJu21mbI,https://www.youtube.com/watch?v=3r6yJu21mbI
9,Stay Close to the Metal - Vicki Boykis,https://www.youtube.com/watch?v=X6fmwLH_4RI,X6fmwLH_4RI,Python Italia,@PythonItalia,https://www.youtube.com/@PythonItalia,20240701,3485,294,1,,,Entertainment,"Stay Close to the Metal - Vicki Boykis - PyCon Italia 2024

Description:
As developers today, we are bombarded with a constant barrage of complexity that is a distraction from the core task of building and solving problems with code. The problem is that the key enabler of productivity - abstraction in the form of technology like the cloud and LLMs  - is also the thing that keeps us away from thinking clearly about our problems.  This keynote will discuss ways that developers today can fight noise, drawing from long-established patterns in both computer science and machine learning and thinking about the interplay between the two. There will also be memes.

Learn more: https://2024.pycon.it/event/stay-close-to-the-metal",https://i.ytimg.com/vi/X6fmwLH_4RI/maxresdefault.jpg,0,False,False,public,https://www.youtube.com/watch?v=X6fmwLH_4RI,https://www.youtube.com/watch?v=X6fmwLH_4RI
10,Designing a Human-Friendly CLI for API-Driven Infrastructure - Oliver Rew,https://www.youtube.com/watch?v=jDY1_7fz3BM,jDY1_7fz3BM,Python Italia,@PythonItalia,https://www.youtube.com/@PythonItalia,20240701,1856,258,7,,"APIs,Documentation,FastAPI,Starlette",Entertainment,"Designing a Human-Friendly CLI for API-Driven Infrastructure - Oliver Rew - PyCon Italia 2024

Elevator Pitch:
In this talk, I will share our experience designing a CLI that dynamically updates itself based purely on API documentation, and describe some of the specific challenges and solutions to this problem.

Description:
As Bloomberg’s infrastructure grows and evolves, the tools we use to manage it are becoming increasingly important. To streamline infrastructure management, our team set out to design a REST API and constituent CLI (Command Line Interface) that would comprise a single interface for both programmatic and human interaction with our infrastructure. Traditionally, building a CLI that is tightly coupled to an API requires maintaining a separate codebase, which is tedious and error-prone. Instead, we designed a CLI that dynamically generates commands based on the OpenAPI JSON documentation. However, since APIs are designed for computer interaction, we designed our API to include the information needed to implement a human-friendly CLI. Leveraging Python, FastAPI, and numerous other open source projects, we built a stable, extensible tool that greatly improves how we interact with our infrastructure.

Learn more: https://2024.pycon.it/event/designing-a-human-friendly-cli-for-api-driven-infrastructure

#Documentation #APIs #FastAPI #Starlette",https://i.ytimg.com/vi/jDY1_7fz3BM/maxresdefault.jpg,0,False,False,public,https://www.youtube.com/watch?v=jDY1_7fz3BM,https://www.youtube.com/watch?v=jDY1_7fz3BM
11,"AI, SQL, and GraphQL Walk into a Fertility Clinic… LLM-based Medical feature development",https://www.youtube.com/watch?v=qIEm74ib3nQ,qIEm74ib3nQ,Python Italia,@PythonItalia,https://www.youtube.com/@PythonItalia,20240701,1748,219,4,,"GraphQL,NaturalLanguageProcessing",Entertainment,"AI, SQL, and GraphQL Walk into a Fertility Clinic… LLM-based Medical feature development - Shirli Di-Castro - PyCon Italia 2024

Elevator Pitch:
Embark on a healthcare revolution! Witness the unique synergy of LLMs and GraphQL reshaping how doctors access patient data. Join me to explore the innovation behind 'chatting with my medical database' feature — a game-changer in data retrieval.

Description:
In the ever-evolving landscape of healthcare, doctors face an ongoing challenge: how to swiftly access vital medical information about their patients buried deep within databases. Traditional methods have proven time-consuming and often fall short of providing the comprehensive answers doctors need. But what if I told you that AI, SQL, and GraphQL have walked into  fertility clinics, offering a groundbreaking solution?

In my presentation I explore the innovative use of Large Language Models (LLMs) in medical feature development. I delve into a novel approach that leverages LLMs to translate doctors' intricate questions into SQL and GraphQL queries, enabling prompt and accurate retrieval of patient data. The result? A revolution in the way doctors access and utilize critical information to make informed decisions.

Join me at the coding table as we uncover the objectives behind crafting the ""chatting with my medical database"" feature. Together, we'll unravel how LLM-based Python chains became integral to this feature and how GraphQL emerged as the superhero, leaving SQL in the dust. We will delve deep into the key development considerations that influenced our choices, encompassing security, cloud integration, flexibility to handle diverse inputs, and reliability in providing doctors with answers to their questions. Witness how concise and targeted Python code can efficiently achieve these objectives.

Session outline:
1. Self introduction (40 seconds)

2. Main challenges of doctors while working with patients' medical data in databases. (2 minutes)

3. Outline of the talk (1 minute)

4. Goals of “chatting with my data” feature for fertility clinics. (2 minute)

5. Going with the audience step by step on the architecture flow of this kind of feature - showing each step in the flow, what is the input and output of each step, what are our main concerns in every step (7 minutes)

6. Sharing with the audience the solutions we discussed in our team to achieve the feature goals, and that are adequate to the feature flow. Presenting the pros and cons of each solution with respect to: security, flexibility in input and output, development time and cost, explainability and reliability of answers given back to the doctor. In this part I share a Python code that includes LLM-based chains for each of the solutions. I show how the code enables us to seamlessly test each of the solutions and compare them. The three solutions are: LLM+SQL, LLM+GraphQL and LLM+RestAPI. (9 minutes - three solutions, 3 minutes each)

7. Discussing why we chose the “GraphQL solution”, how we implement it and present additional challenges in this development section (leaving some of them not solved yet… :)) (5 minutes)

8. Summary (2 minutes)

Learn more: https://2024.pycon.it/event/ai-sql-and-graphql-walk-into-a-fertility-clinic-llm-based-medical-feature-development

#GraphQL #NaturalLanguageProcessing",https://i.ytimg.com/vi/qIEm74ib3nQ/maxresdefault.jpg,0,False,False,public,https://www.youtube.com/watch?v=qIEm74ib3nQ,https://www.youtube.com/watch?v=qIEm74ib3nQ
12,"Code More, Draw Less, and Debug Just a Little! - Yash Saboo",https://www.youtube.com/watch?v=FOXPbOLS488,FOXPbOLS488,Python Italia,@PythonItalia,https://www.youtube.com/@PythonItalia,20240701,1912,101,1,,"Architecture,GraphDatabases,Pandas,Tooling,Visualization",Entertainment,"Code More, Draw Less, and Debug Just a Little! - Yash Saboo - PyCon Italia 2024

Elevator Pitch:
Understanding software architecture and data flow is vital when building any maintainable system and debugging the errors. While we are searching for life on Mars, our architectural diagrams and debugging tools remain manual and lifeless. Let's use GraphDB, pandas, and Python to add life to them.

Description:
Before I dive into how to draw less and debug just a little, let's recap your life as an engineer, which likely looks like one of the following:

- You often wonder before you go to sleep, ""A short time ago in a galaxy not that far, far away, I updated my software's architecture diagram. So why is it stale… again?""
- Your team grew in size during the pandemic and so did your components and ownership. Has it become harder to onboard new engineers due to ever-changing software, dependencies, and owners?
- Your new release didn't go as planned because something broke in your new code. Wouldn’t it help if you had a holistic and interactive view to navigate between software components while understanding how they communicate with each other? When was the last time you used your architectural diagram as a debugging tool?
- You managed to quickly draw the data-flow diagram to help with debugging your system and you thought “this is majestic work right here!” But the feedback you received was, ""it’s too detailed"" or ""it’s not detailed enough."" While you’re trying to figure out the fine line between too many and too few details, your hairline is starting to show!

If you’ve fallen victim to any of these scenarios, behold! Your prayers have been answered!

In the first half of this talk, we’ll describe an approach that can automatically identify the software design and data flows within your systems. To achieve this, we use algorithmic scrapers and metadata profiling techniques that integrate with distributed trace, code structure, language dependencies, contribution ownerships, and other sources to avoid the toil of manually updating software architecture diagrams and debugging tools.

In the second part of this talk, we will dive deeper into the details of how to use Python data engineering libraries to enrich the collected data and process it for storage in a graph database. The graph structure not only signifies the relationships between components in a real-world manner, but also helps in generating multiple views of the software architecture in an easy and comprehensible fashion. Now, instead of the architecture and data flow diagram being a static JPEG, those auto-generative views can be compiled into interactive and immersive UIs for debugging.

My team built a debugging visualization tool for our organization, Bloomberg, but the approach we took is germane to all tech organizations. We want to share the challenges and lessons we learned during our journey to help you build a similar tool for your organization because why not “Code More, Draw Less, and Debug Just a Little”?!

Learn more: https://2024.pycon.it/event/code-more-draw-less-and-debug-just-a-little

#Visualization #Pandas #Tooling #Architecture #GraphDatabases",https://i.ytimg.com/vi/FOXPbOLS488/maxresdefault.jpg,0,False,False,public,https://www.youtube.com/watch?v=FOXPbOLS488,https://www.youtube.com/watch?v=FOXPbOLS488
13,Enhancing AsyncIO for Complex Applications - Anton Caceres,https://www.youtube.com/watch?v=DYXWFELJBq8,DYXWFELJBq8,Python Italia,@PythonItalia,https://www.youtube.com/@PythonItalia,20240701,1939,292,6,,"Architecture,AsyncIO,Debugging,Performance",Entertainment,"Enhancing AsyncIO for Complex Applications - Anton Caceres - PyCon Italia 2024

Elevator Pitch:
Dealing with AsyncIO can get tricky, especially in bigger projects. In our talk, we'll dive into making AsyncIO work smoother for you. Expect real tips on managing multiple connections, smarter task handling,  and cracking those tough debugging problems.

Description:
We all love AsyncIO. Yet as our project's complexity scales up, we might find ourselves struggling with debugging, managing a surge of connections, and the art of asynchronous task management. This talk is your roadmap to navigating these challenges.

We'll start by tackling one of the most daunting aspects of AsyncIO: debugging. If you've ever felt like you're chasing ghosts in your code, this is for you. We'll introduce you to effective strategies and tools tailored for AsyncIO, transforming debugging into a manageable routine.

Next, we address scaling issues. When your application grows, so does the number of connections and tasks it must handle. I'll guide you through optimizing your AsyncIO application to handle this growth efficiently, sharing practical advice to prevent common performance pitfalls.

Integration is another key area we'll explore. How does AsyncIO fit with other Python libraries and frameworks you're using? We'll dive into examples that show how to make AsyncIO work in harmony with your entire Python stack, enhancing its functionality and your productivity.

As a desert, we'll take a walk over real-world scenarios where these strategies have been successfully applied. These case studies will illustrate how the right approach to AsyncIO can significantly improve the performance and scalability of complex Python applications.

By the end of this talk, attendees will be equipped with a deeper understanding and new techniques to use the full potential of AsyncIO in large-scale projects.

Learn more: https://2024.pycon.it/event/enhancing-asyncio-for-complex-applications

#AsyncIO #Performance #Architecture #Debugging",https://i.ytimg.com/vi/DYXWFELJBq8/maxresdefault.jpg,0,False,False,public,https://www.youtube.com/watch?v=DYXWFELJBq8,https://www.youtube.com/watch?v=DYXWFELJBq8
14,Analyzing COVID-19 Protest Movements: A Multidimensional Approach Using Geo-Social Media Data,https://www.youtube.com/watch?v=ePd0hwvDZQ8,ePd0hwvDZQ8,Python Italia,@PythonItalia,https://www.youtube.com/@PythonItalia,20240701,1789,46,0,1.0,"Analytics,CaseStudy,GEOandGIS,NaturalLanguageProcessing,Visualization",Entertainment,"Analyzing COVID-19 Protest Movements: A Multidimensional Approach Using Geo-Social Media Data - Nefta Kanilmaz - PyCon Italia 2024

Elevator Pitch:
The spread of conspiracy theories on social media through protest movements is a societal problem. For effective countermeasures, understanding the movement's spatial manifestation is essential. This talk explores how leveraging a geo-social network analysis of Twitter data can address the issue.

Description:
The COVID-19 pandemic and associated policy measures lead to world-wide protest movements that were singled out by the spread of misinformation and conspiracy theories, predominantly on social media platforms. Publicly available social media data therefore is a powerful proxy for studying these protest movements. The data, consisting of user locations, follower relationships, and content information, allows to understand the geographical centers of activity, network structure, and key themes of conspiracy movements.

This talk will present a multi-dimensional network analysis for the Austrian COVID-10 protest movement using Python libraries like geopandas, networkx and gensim. In particular, it will demonstrate how to identify geo-spatial hot spots using spatial statistics, densely connected clusters within the network by employing community detection techniques, as well as dominating content themes through topic modeling approaches.

The presentation highlights how data-driven analysis enables further understanding of movements that may pose threats to democracy, alongside the importance of publicly available social media data for addressing societal challenges.

Learn more: https://2024.pycon.it/event/analyzing-covid-19-protest-movements-a-multidimensional-approach-using-geo-social-media-data

#Analytics #Visualization #CaseStudy #GEOandGIS #NaturalLanguageProcessing",https://i.ytimg.com/vi/ePd0hwvDZQ8/maxresdefault.jpg,0,False,False,public,https://www.youtube.com/watch?v=ePd0hwvDZQ8,https://www.youtube.com/watch?v=ePd0hwvDZQ8
15,PEP 683: Immortal Objects - A new approach for memory managing - Vinícius Gubiani Ferreira,https://www.youtube.com/watch?v=9ortAAMVP28,9ortAAMVP28,Python Italia,@PythonItalia,https://www.youtube.com/@PythonItalia,20240701,2109,241,4,,"CPython,OpenSource",Entertainment,"PEP 683: Immortal Objects - A new approach for memory managing - Vinícius Gubiani Ferreira - PyCon Italia 2024

Elevator Pitch:
For most people that use Python, worrying about memory is not an issue. But that's not the case when you have to handle a lot of requests on a large scale. So how do you reduce memory consumption without affecting the CPU?
Want to know more? So let's talk about PEP 683, GIL and memory management

Description:
In this presentation I'll discuss memory management in Python from the basics, where the necessity for PEP 683 came from, and the changes introduced by it. I also intend to discuss why this PEP is so important for the language, and what we'll be able to achieve with it in the future, such as changes to the GIL and true parallelism.

Outline:
* 2 min self-presentation;
* 3 mins: memory management in python from the basics;
* 3 mins: memory, GIL and threads;
* 5 mins: Motivation and use case: why immutability and ignoring reference count?;
* 3 mins: problems ahead! Backwards/platform compatibility, performance degradation;
* 5 mins: future implications and where immortal objects are already being used (other related PEPs);
* 2 mins for conclusions and thanks;
* 5 mins for Q&A;

The talk is targeted for folks who are intermediate/advanced pythonistas. People who are just starting with Python (maybe less than 1.5 years) may feel a bit lost. Even so, curious learners are more than welcome to join, and will try my best to make it as easy as possible for all audiences on this topic.
After this presentation, participants will learn a bit more about how memory management works under the hood in python, and how it may change in the next couple of years.

Learn more: https://2024.pycon.it/event/pep-683-immortal-objects-a-new-approach-for-memory-managing

#OpenSource #CPython",https://i.ytimg.com/vi/9ortAAMVP28/maxresdefault.jpg,0,False,False,public,https://www.youtube.com/watch?v=9ortAAMVP28,https://www.youtube.com/watch?v=9ortAAMVP28
16,Tricking Neural Networks : Explore Adversarial Attacks - Bernice Waweru,https://www.youtube.com/watch?v=39xFtAoQYdA,39xFtAoQYdA,Python Italia,@PythonItalia,https://www.youtube.com/@PythonItalia,20240701,1472,119,2,,"DeepLearning,MachineLearning,NaturalLanguageProcessing,Security",Entertainment,"Tricking Neural Networks : Explore Adversarial Attacks - Bernice Waweru - PyCon Italia 2024

Elevator Pitch:
 Large Language Models are pretty cool, but we need to be aware of how they can be compromised. I will show how neural networks are vulnerable to attacks through an example of an adversarial attack on deep learning models in Natural Language Processing(NLP). 

Description:
 Large Language Models are pretty cool, but we need to be aware of how they can be compromised. I will show how neural networks are vulnerable to attacks through an example of an adversarial attack on deep learning models in Natural Language Processing(NLP). 
We’ll explore the mechanisms used to attack models, and you’ll get a new way to think about the security of deep learning models. 

With increasing adoption of deep learning models such as Large Language Models(LLMs) in real-world applications, we should consider security and safety of the models. To address the security concerns we need to understand the model's vulnerabilities and how they can be compromised. After all, it is hard to defend yourself when you don't know you are under attack.

You will gain the most out of this session if you have worked with deep learning models before. 

Learn more: https://2024.pycon.it/event/tricking-neural-networks-explore-adversarial-attacks

#Security #MachineLearning #DeepLearning #NaturalLanguageProcessing",https://i.ytimg.com/vi/39xFtAoQYdA/maxresdefault.jpg,0,False,False,public,https://www.youtube.com/watch?v=39xFtAoQYdA,https://www.youtube.com/watch?v=39xFtAoQYdA
17,Advanced parsing of structured data using Python's new match statement - Marc-André Lemburg,https://www.youtube.com/watch?v=P3Qr2zReKJ0,P3Qr2zReKJ0,Python Italia,@PythonItalia,https://www.youtube.com/@PythonItalia,20240701,1798,331,7,,"Abstractions,Algorithms,BestPractice,CPython,CleanCode",Entertainment,"Advanced parsing of structured data using Python's new match statement - Marc-André Lemburg - PyCon Italia 2024

Elevator Pitch:
The `match` statement was introduced in Python 3.10, but has not yet seen wide adoption. This talk will highlight practical use cases for parsing JSON, XML and ASTs, and compare expressiveness and performance to the classic if-elif-else approach.

Description:
The `match` statement was introduced in Python 3.10, but has not yet seen wide adoption.

In this talk, I'd like to show case a few more advanced use cases to demonstrate it's expressiveness and versatility, compared to classic parsers using if-elif-else chains.

We will have a look at parsing JSON, XML and ASTs, and also compare performance to the classic parsing strategy.

Knowledge of how the `match` statement works and familiarity with at least one of JSON, XML and ASTs are prerequisite for this talk.

Learn more: https://2024.pycon.it/event/advanced-parsing-of-structured-data-using-pythons-new-match-statement

#CPython #BestPractice #CleanCode #Abstractions #Algorithms",https://i.ytimg.com/vi/P3Qr2zReKJ0/maxresdefault.jpg,0,False,False,public,https://www.youtube.com/watch?v=P3Qr2zReKJ0,https://www.youtube.com/watch?v=P3Qr2zReKJ0
18,The European AI Act: a data scientist’s perspective - Luca Gilli,https://www.youtube.com/watch?v=WZuv2Ez792I,WZuv2Ez792I,Python Italia,@PythonItalia,https://www.youtube.com/@PythonItalia,20240701,2075,116,2,,"BestPractice,MachineLearning",Entertainment,"The European AI Act: a data scientist’s perspective - Luca Gilli - PyCon Italia 2024

Elevator Pitch:
The new EU's AI Act mandates assessments for high-risk AI, with a focus on robustness and human oversight. This talk explores these requirements, discussing how they can be implemented as part of a ML pipeline, and presents a Python-based case study guiding data scientists on the new regulations.

Description:
After years of discussions and negotiations, in December 2023,  the European Council and the European Parliament agreed on shaping the first rules in the work to govern AI- aka, the AI Act. In the coming months, the proposed draft, which adopts a risk-based approach to AI governance, is set to become a law enforced across the EU member states, with far-reaching global effects. In tangible terms, violations would cost companies between €7.5-€35 million or 1.5%-7% of their global turnover, based on the risk level of the AI applications. The current text states that high-risk AI systems must undergo a conformity assessment based on extensive technical documentation before being used in production. The contents of the required technical documentation are defined at a very high level and will need to cover aspects such as accuracy, robustness, and human oversight of AI systems. This talk will analyse the requirements of an AI system's technical documentation from a data scientist's perspective. In particular, we will first tackle the technical aspects that must be verified to consider an AI system as conforming. For example, we will discuss human oversight from a technical point of view, highlighting different interpretability techniques that can be used to perform this analysis. We will then show a practical example of technical documentation related to an illustrative machine learning model from a financial use case. This use case will demonstrate how to translate most of the requirements included in the technical documentation into machine learning model tests implemented using open-source Python libraries. By the end of the talk, participants will have a practical understanding of what the new regulation means from the perspective of a data scientist developing new machine learning-based systems.

Learn more: https://2024.pycon.it/event/the-european-ai-act-a-data-scientists-perspective

#MachineLearning #BestPractice",https://i.ytimg.com/vi/WZuv2Ez792I/maxresdefault.jpg,0,False,False,public,https://www.youtube.com/watch?v=WZuv2Ez792I,https://www.youtube.com/watch?v=WZuv2Ez792I
19,Computer Vision IRL: dall'idea al deploy on-premise - Egon Ferri,https://www.youtube.com/watch?v=Zbo3PUzRX9s,Zbo3PUzRX9s,Python Italia,@PythonItalia,https://www.youtube.com/@PythonItalia,20240701,1904,127,1,,"DeepLearning,FastAPI",Entertainment,"Computer Vision IRL: dall'idea al deploy on-premise - Egon Ferri - PyCon Italia 2024

Elevator Pitch:
Reale caso di studio di Immobiliare.it su come realizzare un servizio di classificazione di immagini in ambito real estate: dall'idea fino al deployment in produzione di un servizio REST basato su FastAPI e il model serving TorchServe per la gestione di elevati carichi di req/s con latenze inferiori ai 200ms per richiesta.

Description:
Nell'ambito della Computer Vision (CV), l'attenzione è spesso rivolta allo sviluppo di modelli di deep learning, trascurando le fasi cruciali di definizione del problema come: preparazione dei dati, messa in produzione del modello e successivo monitoraggio.

In questo talk, illustreremo il nostro approccio allo sviluppo di servizi di CV attraverso un use-case reale: la classificazione degli ambienti di un immobile utilizzando esclusivamente tecnologie open-source.
In particolare racconteremo: 
- come dall'esigenza di business passiamo ai requisiti tecnici per il modello e il servizio;
- il processo di creazione del dataset di immagini e dello sviluppo e dell'ottimizzazione della performance del modello;
- la messa in produzione in ambiente on-premise del servizio di CV basata sulla combinazione di una proxy API targata FastAPI e di un model serving basato su  TorchServe per assicurare un servizio che sia scalabile e che garantisca un throughput elevato e una bassa latenza;
- come abbiamo implementato il nostro sistema di monitoraggio per garantire l'efficienza e la correttezza del servizio, vigilando sull'hardware, sulla qualità dei dati, sull'accuratezza del modello e sulle KPI di business.

Attraverso questo approccio, abbiamo realizzato un servizio di CV innovativo e performante, dimostrando l'efficacia delle soluzioni open-source nel rispondere a esigenze complesse di business.

Learn more: https://2024.pycon.it/event/computer-vision-irl-dallidea-al-deploy-on-premise

#DeepLearning #FastAPI",https://i.ytimg.com/vi/Zbo3PUzRX9s/maxresdefault.jpg,0,False,False,public,https://www.youtube.com/watch?v=Zbo3PUzRX9s,https://www.youtube.com/watch?v=Zbo3PUzRX9s
20,"Data VS Engineers: a long lasting story - Andrea Purgato, Federica Previ",https://www.youtube.com/watch?v=kx4pIWIj02w,kx4pIWIj02w,Python Italia,@PythonItalia,https://www.youtube.com/@PythonItalia,20240701,1684,156,1,1.0,"Analytics,DataStructures,Scaling",Entertainment,"Data VS Engineers: a long lasting story - Andrea Purgato, Federica Previ - PyCon Italia 2024

Elevator Pitch:
Large companies often face the same challenges: fragmented data, incompatible formats, and scattered expertise. These ""data silos"" create chaos, hindering your ability to build robust models.​

In this talk, we'll unveil our solution – a Data Feature Store as Single Source of Truth that overcomes data silos and ensures feature consistency.

Description:
In this talk, we'll share our experience building and deploying Efesto, a scalable Data Feature Store. This Python and PySpark software solution empowers data scientists and engineers to focus on solving real business problems by eliminating the need for developers to ""reinvent the wheel"" with repetitive feature engineering tasks. We'll explore how Efesto leverages Apache Airflow's orchestration capabilities to manage dependencies and ensure data quality for hundreds of deployed data features.​

​

Here's a deeper dive into what we'll cover:​

- Technical Deep Dive: We'll explore the design and architecture of Efesto, focusing on how we created a Python library for building data features.​

- Airflow as the Standard: We'll showcase how we built an Airflow-based toolkit to standardize process execution across all teams.​

- Unify and Conquer: Discover strategies for unifying data across silos and enforcing feature consistency within your organization's data pipelines.​

- Real-World Results: Witness concrete examples of how Efesto empowers data science teams to build better models faster, improve collaboration, and unlock the full potential of their data.

Learn more: https://2024.pycon.it/event/data-vs-engineers-a-long-lasting-story

#Analytics #Scaling #DataStructures",https://i.ytimg.com/vi/kx4pIWIj02w/maxresdefault.jpg,0,False,False,public,https://www.youtube.com/watch?v=kx4pIWIj02w,https://www.youtube.com/watch?v=kx4pIWIj02w
21,FastAPI Internals - How does it work? - Marcelo Trylesinski,https://www.youtube.com/watch?v=nYAMtzAbNN8,nYAMtzAbNN8,Python Italia,@PythonItalia,https://www.youtube.com/@PythonItalia,20240701,1868,5173,177,4.0,"APIs,AsyncIO,FastAPI,Starlette",Entertainment,"FastAPI Internals - How does it work? - Marcelo Trylesinski - PyCon Italia 2024

Elevator Pitch:
FastAPI has become one of the most popular web frameworks in Python, but do you know how it really works internally?

In this talk, we'll go through each FastAPI component, and understand when they run. We'll also understand how FastAPI interacts with Pydantic, Starlette and Uvicorn!

Description:
FastAPI has become one of the most popular web frameworks in Python, but how does it work internally?

In this talk, we'll go through each FastAPI component, and understand when and how they run. We'll see how the dependency injection runs, what are the benefits, and limitations. We'll also see how the routing takes place, how the middleware stack runs, how the OpenAPI schema is generated, the differences between async and non async endpoint functions, and how the WebSockets fit in all this. Furthermore, we'll also see how the dependencies Pydantic and Starlette help FastAPI on its job.

At the end of this talk, the attendee will understand what's underneath of this very popular package.

Learn more: https://2024.pycon.it/event/fastapi-internals-how-does-it-work

#AsyncIO #APIs #FastAPI #Starlette",https://i.ytimg.com/vi/nYAMtzAbNN8/maxresdefault.jpg,0,False,False,public,https://www.youtube.com/watch?v=nYAMtzAbNN8,https://www.youtube.com/watch?v=nYAMtzAbNN8
22,streamlit vs gradio: which to pick? - Davide Poggiali,https://www.youtube.com/watch?v=rJ4_7pnIRmA,rJ4_7pnIRmA,Python Italia,@PythonItalia,https://www.youtube.com/@PythonItalia,20240701,1266,8967,141,6.0,"Analytics,MachineLearning",Entertainment,"streamlit vs gradio: which to pick? - Davide Poggiali - PyCon Italia 2024

Elevator Pitch:
gradio and streamlit are two popular packages that allow to create with ease cool interactive applications to present your work to your colleagues. I will compare the two packages side-by-side giving examples from the perspectives of Back End developer, a Data Analyst, and a ML Specialist.

Description:
gradio and streamlit are two popular packages that allow to create with ease cool interactive applications. You will be able to present your work to your colleagues hiding most of the code complexities and focusing on inputs and outputs. Both of the web apps can be deployed and hosted for free in the respective providers.

In this presentation I will compare the two packages side-by-side giving examples from the perspectives of a Back End developer, a Data Analyst, and a ML Specialist. Some comparison to FOSS/non FOSS alternative will also be given.

The speech is intended for intermediate pythonists, but any curious person will be able to follow and enjoy.

Learn more: https://2024.pycon.it/event/streamlit-vs-gradio-which-to-pick

#Analytics #MachineLearning",https://i.ytimg.com/vi/rJ4_7pnIRmA/maxresdefault.jpg,0,False,False,public,https://www.youtube.com/watch?v=rJ4_7pnIRmA,https://www.youtube.com/watch?v=rJ4_7pnIRmA
23,"Building high-performance, type-safe GraphQL APIs with Strawberry and Django",https://www.youtube.com/watch?v=ndeh2KQbUXo,ndeh2KQbUXo,Python Italia,@PythonItalia,https://www.youtube.com/@PythonItalia,20240701,2454,498,12,,"APIs,AsyncIO,Django,GraphQL,Performance",Entertainment,"Building high-performance, type-safe GraphQL APIs with Strawberry and Django - Thiago Bellini Ribeiro - PyCon Italia 2024

Elevator Pitch:
Discover the power of GraphQL APIs with Strawberry & Django in this talk! We'll explore GraphQL vs RESTful APIs, tackle the N+1 problem, and unveil Strawberry's Django integration for efficient queries. Learn to build high-performance, type-safe APIs with ease 😊

Description:
In this talk, we will explore the world of GraphQL APIs with Strawberry, a new Python library that makes it easy to create GraphQL APIs with Django. We will dive into what GraphQL is, how it compares to traditional RESTful APIs, and what makes Strawberry stand out from other Python GraphQL libraries.

One of the biggest challenges in GraphQL API development is the N+1 problem, where queries can become exponentially slow as more data is requested. We will discuss how data loaders can help solve this problem, and go in-depth on how to use them in Strawberry. In this topic we will also cover how the Strawberry Django integration leverages query introspection and user defined hints to automatically call .only(…)/.select_related(…)/.prefetch_related(…) on querysets, making your queries more efficient and avoiding common pitfalls. This is especially important in high-traffic, production environments where performance is critical.

Finally, we will showcase some of the benefits of using Strawberry and Django together, including a type-safe approach to API development and streamlined code maintenance. By the end of this talk, you’ll have the knowledge and tools you need to create high-performance GraphQL APIs with Strawberry and Django.

It will be presented in the following order:
* Intro
* Quick overview of what a GraphQL API looks like and its advantages
* Writing general GraphQL APIs using Strawberry
* Integrating the Django ORM with Strawberry
* Some common pitfalls, with emphasis on the N+1 problem
* GraphQL tools to avoid those pitfalls and how to use them with Strawberry
* How the Strawberry Django integration uses introspection to automatically overcome those pitfalls and also improve performance when executing Django querysets

Learn more: https://2024.pycon.it/event/building-high-performance-type-safe-graphql-apis-with-strawberry-and-django

#AsyncIO #Django #GraphQL #APIs #Performance",https://i.ytimg.com/vi/ndeh2KQbUXo/maxresdefault.jpg,0,False,False,public,https://www.youtube.com/watch?v=ndeh2KQbUXo,https://www.youtube.com/watch?v=ndeh2KQbUXo
24,Debugging python applications inside k8s environment - Andrii Soldatenko,https://www.youtube.com/watch?v=U4KmTNO5pY8,U4KmTNO5pY8,Python Italia,@PythonItalia,https://www.youtube.com/@PythonItalia,20240701,2354,154,2,,"Debugging,Docker",Entertainment,"Debugging python applications inside k8s environment - Andrii Soldatenko - PyCon Italia 2024

Elevator Pitch:
In an ideal world, you would write Python code and then it would work perfectly. But unfortunately, it doesn't work in this manner. In my talk, I'll cover how to efficiently debug your programs, especially in cloud environments or inside Kubernetes.

Description:
In an ideal world, you wrote your program from the first iteration and it works. But in practice development of cloud-native Python applications has a different character. Debugging from another side is also complex. Sometimes, I spend most of the time on debugging rather than development. 
There are many different books and official docs, but there’s not enough information on debugging your programs efficiently, especially in cloud environments or inside Kubernetes. 
Luckily, we have a couple of options to consider when debugging cloud-native applications in Python.
In my talk, I'll show different techniques to debug containerized applications, including remote debugging, how to debug still, even if we're using multi-staged docker builds, how to debug applications already deployed without any debuggers, also how to attach for running Python processes inside the container. In the end, we’ll discuss tips and tricks on troubleshooting things like permissions, networking, and other k8s failures that may affect your applications.

Learn more: https://2024.pycon.it/event/debugging-python-applications-inside-k8s-environment

#Docker #Debugging",https://i.ytimg.com/vi/U4KmTNO5pY8/maxresdefault.jpg,0,False,False,public,https://www.youtube.com/watch?v=U4KmTNO5pY8,https://www.youtube.com/watch?v=U4KmTNO5pY8
25,From Pixels to Plots: Transforming Lives of African Smallholder Farmers through Geospatial Data,https://www.youtube.com/watch?v=fGZr6sQbmyc,fGZr6sQbmyc,Python Italia,@PythonItalia,https://www.youtube.com/@PythonItalia,20240701,1771,33,1,,"BigData,DeepLearning,GEOandGIS,MachineLearning,Visualization",Entertainment,"From Pixels to Plots: Transforming Lives of African Smallholder Farmers through Geospatial Data - Emiel Veersma - PyCon Italia 2024

Elevator Pitch:
During this talk, we'll explore how One Acre Fund uses python, streamlit and Google Earth Engine to support millions of smallholder farmers in Africa. We will cover how to identify individual farmer fields, assess soil conditions, give farming recommendations, and combat deforestation.

Description:
One Acre Fund is a non-profit organization helping smallholder farmers in Africa. We provide millions of farmers in 10 countries with practical support like quality seeds, fertilizers, market access and training. Our approach is hands-on, focusing on increasing farm productivity and promoting sustainable practices. Through our work, we aim to break the cycle of poverty for these farmers and contribute to food security in their communities.

During this presentation, I will focus on the geospatial aspect of my job as a Data Scientist. I will share my experiences in utilizing satellite imagery through Google Earth Engine, a free platform that provides petabytes of geospatial up-to-date data and powerful analysis capabilities. The focus will be on how we've employed Python, unlocking information about farmers' fields.

The first part of the talk will showcase the process of accessing satellite information from Google Earth Engine. We'll explore how to extract valuable insights, including soil composition, rainfall patterns, and temperature variations, all crucial factors in optimizing agronomic decisions.

Then I will show how we worked together with Berkeley and MIT to delineate fields accurately, by using a Residual U-Net (ResUNet), a deep learning architecture tailored for semantic segmentation. This step is key in identifying individual farmers' plots, which makes future analysis possible.

After that, I will demonstrate how we leverage this geospatial data to recommend optimal planting dates and maize types based on specific soil characteristics, temperature profiles, and rainfall patterns (both historical and real-time). I will show how we use Machine Learning for this and how we avail the results through API endpoints.

The final part of the talk will feature a Streamlit app that visually represents all the geospatial information gathered. This interactive tool not only aids in data exploration but also serves as a model for how developers and data scientists can craft user-friendly interfaces to communicate complex agricultural insights effectively. I will show how our end users in the field use the tool to check for deforestation, which is important for the reliability of their carbon credit projects.

Throughout the presentation, the emphasis will be on open-source python packages like geemap, sklearn, streamlit and pytorch. Attendees will gain practical insights into replicating and customizing these methodologies for their specific applications. In the end, I hope the attendees learned how to use Google Earth Engine, API endpoints and Streamlit to work with geospatial data. And of course, this presentation will give insights into what it is like to be a Data Scientist working for an African NGO.

Learn more: https://2024.pycon.it/event/from-pixels-to-plots-transforming-lives-of-african-smallholder-farmers-through-geospatial-data

#Visualization #BigData #MachineLearning #DeepLearning #GEOandGIS",https://i.ytimg.com/vi/fGZr6sQbmyc/maxresdefault.jpg,0,False,False,public,https://www.youtube.com/watch?v=fGZr6sQbmyc,https://www.youtube.com/watch?v=fGZr6sQbmyc
26,Combining Django ORM & FastAPI in a Data Visualization Tool - Mia Bajić,https://www.youtube.com/watch?v=6FiSXec3V1w,6FiSXec3V1w,Python Italia,@PythonItalia,https://www.youtube.com/@PythonItalia,20240701,1450,937,29,4.0,"APIs,Django,FastAPI",Entertainment,"Combining Django ORM & FastAPI in a Data Visualization Tool - Mia Bajić - PyCon Italia 2024

Elevator Pitch:
Wondering how to blend sync and async together in Python?

Join me on a journey where Django meets FastAPI. We'll dive into the practicalities of integrating Django's synchronous ORM with FastAPI's asynchronous capabilities.

Description:
Django is the most extensive Python framework, which is also very opinionated and synchronous. In contrast, FastAPI emerges as a more recent, asynchronous framework.

As a developer and the maintainer of several services, one of which is a data visualization tool deployed in production across various companies, I have had the unique opportunity to use Django ORM with FastAPI. If you take a look through GitHub or other resources, you'll notice there's not much out there about combining Django and FastAPI — it's a bit of an unconventional setup. The aim of my talk is to share insights from my experience with this setup, highlighting its practical implementation and the lessons learned along the way.

This talk is aimed at programmers from beginners to more experienced ones familiar with either of these frameworks. You'll gain insights into combining asynchronous frameworks with synchronous ones, along with understanding the benefits and challenges of this approach.

Learn more: https://2024.pycon.it/event/combining-django-orm-and-fastapi-in-a-data-visualization-tool

#Django #APIs #FastAPI",https://i.ytimg.com/vi/6FiSXec3V1w/maxresdefault.jpg,0,False,False,public,https://www.youtube.com/watch?v=6FiSXec3V1w,https://www.youtube.com/watch?v=6FiSXec3V1w
27,Testing for Ghosts in the Machine: Assuring 'Good Enough' Software Quality in AI-based systems,https://www.youtube.com/watch?v=lSI6GgMpM4s,lSI6GgMpM4s,Python Italia,@PythonItalia,https://www.youtube.com/@PythonItalia,20240701,1737,30,0,,"APIs,BestPractice,NaturalLanguageProcessing,Testing",Entertainment,"Testing for Ghosts in the Machine: Assuring 'Good Enough' Software Quality in AI-based systems - Artur Patoka - PyCon Italia 2024

Elevator Pitch:
Join my talk on trying to master software quality in AI's unpredictable world.  I'll share both challenges and solutions for developing reliable tests, with a focus on chatbots. Get ready to implement robust and automated testing strategies. Or at least get a bit closer to achieving it!

Description:
The presentation is the culmination of my experiences in two distinct projects - I have been professionally responsible for a quality of a chatbot and, despite the experiences, I've also created a hobby open-source project which utilizes the OpenAI API.

In this talk, I will explain the why - the state of current automated tests in the AI realm and why it's important. I plan to dissect various methodologies, illustrating their strengths and weaknesses through real-life examples, predominantly focusing on GPT-based chatbots.. The presentation will also cover dead ends in hope to spare the suffering for those embarking on their own ghostbusting adventures in AI. Finally, I'll share a few proved solutions which should greatly improve the quality and stability of an AI-based system on an example of a chat bot.

This presentation is designed to be accessible and engaging, requiring just basic knowledge about gen AI and software development cycle.

Learn more: https://2024.pycon.it/event/testing-for-ghosts-in-the-machine-assuring-good-enough-software-quality-in-ai-based-systems

#APIs #BestPractice #Testing #NaturalLanguageProcessing",https://i.ytimg.com/vi/lSI6GgMpM4s/maxresdefault.jpg,0,False,False,public,https://www.youtube.com/watch?v=lSI6GgMpM4s,https://www.youtube.com/watch?v=lSI6GgMpM4s
28,Beyond Bias: Crafting Fairness in Pythonic Machine Learning Systems - Rashmi Nagpal,https://www.youtube.com/watch?v=26LGm75onLQ,26LGm75onLQ,Python Italia,@PythonItalia,https://www.youtube.com/@PythonItalia,20240701,2324,61,4,,"BestPractice,CodeAnalysis,JupyteriPythonNotebook,MachineLearning,Testing",Entertainment,"Beyond Bias: Crafting Fairness in Pythonic Machine Learning Systems - Rashmi Nagpal - PyCon Italia 2024

Elevator Pitch:
Have you ever wondered how we can quantify and rectify biases in predictive policing algorithms using Python? In this talk, let's discover techniques which address bias in machine learning systems and build the orchestration of algorithms for fair and harmonious systems.

Description:
Artificial intelligence systems have woven their influence into every facet of our lives, from the physical to the virtual, shaping our world with data and algorithms. But, have you ever thought about the biases in the algorithms behind predictive policing?

In this talk, we'll explore this question. Firstly, we'll unveil the critical significance of quantifying and rectifying biases within machine learning systems, using Python. Through a live demo, we will delve into practical techniques designed to address bias, and orchestration of algorithms that lay the foundation for the creation of fair and equitable machine learning systems. Lastly, we'll discuss the bigger picture—how these fair algorithms can contribute to a just and inclusive society. 

Learn more: https://2024.pycon.it/event/beyond-bias-crafting-fairness-in-pythonic-machine-learning-systems

#MachineLearning #BestPractice #CodeAnalysis #JupyteriPythonNotebook #Testing",https://i.ytimg.com/vi/26LGm75onLQ/maxresdefault.jpg,0,False,False,public,https://www.youtube.com/watch?v=26LGm75onLQ,https://www.youtube.com/watch?v=26LGm75onLQ
29,Is it me or Python memory management? 🤔💻 - Yullia Barabash,https://www.youtube.com/watch?v=9VHRNfX1MVM,9VHRNfX1MVM,Python Italia,@PythonItalia,https://www.youtube.com/@PythonItalia,20240701,1501,129,3,,Performance,Entertainment,"Is it me or Python memory management? 🤔💻 - Yullia Barabash - PyCon Italia 2024

Elevator Pitch:
Have you ever wondered if Python memory management is playing tricks on you? Starting small, everything runs smoothly. But as your application scales, complexity grows, and memory issues rear their head. No worries! In this talk, you will learn how Python memory works!

Description:
Have you ever wondered if Python memory management is playing tricks on you? Starting small, everything runs smoothly. But as your application scales, complexity grows, and memory issues rear their head. You ask yourself, ""Is it me or Python memory management?""

In this talk, we'll show you how Python memory works, provide tools to analyze memory usage and share practical optimization tips. Whether you're a seasoned Python developer or just starting on your Python journey, this talk is designed to provide you with techniques to overcome Python memory management challenges and write more efficient, memory-conscious code. 

By the end of this talk, you will learn that It's not just you — it's a shared journey, and we've got you covered.

Learn more: https://2024.pycon.it/event/is-it-me-or-python-memory-management

#Performance",https://i.ytimg.com/vi/9VHRNfX1MVM/maxresdefault.jpg,0,False,False,public,https://www.youtube.com/watch?v=9VHRNfX1MVM,https://www.youtube.com/watch?v=9VHRNfX1MVM
30,Supercharge your code with Python's 'match' statement - Siddharta Govindaraj,https://www.youtube.com/watch?v=TohEnqYYGdc,TohEnqYYGdc,Python Italia,@PythonItalia,https://www.youtube.com/@PythonItalia,20240701,2760,197,7,,"CPython,CleanCode,FunctionalProgramming",Entertainment,"Supercharge your code with Python's 'match' statement - Siddharta Govindaraj - PyCon Italia 2024

Elevator Pitch:
When 'match' statement was added to Python 3.10, I thought it was a confusing feature. But after learning to use it correctly, it became my favourite new feature in Python. In this talk, we will learn how to use match to write much nicer, pythonic code. Then you will also fall in love with match.

Description:
When 'match' statement was added to Python 3.10, I thought it was a confusing feature. I thought that it was just a fancy way of doing if/then/else statements. Why do we need a new feature just to make if/then/else a little simpler?

But I found out that my understanding was wrong. It is not a way to do if/then/else. It is something called structural pattern matching. That was a complicated word for me, but after reading up, the concept is not so difficult. It quickly became my favourite new feature in Python.

In this talk, we will take a deeper understanding into structural pattern matching and how it is related to match statement. With that understanding, we will learn how to use 'match' effectively. We will also look at some practical day to day situations where 'match' statement makes the python code much cleaner and easy to read.

By the end, you will understand why this feature was added into Python, how to use it effectively and fall in love with 'match' just like I did.

Learn more: https://2024.pycon.it/event/supercharge-your-code-with-pythons-match-statement

#CPython #FunctionalProgramming #CleanCode",https://i.ytimg.com/vi/TohEnqYYGdc/maxresdefault.jpg,0,False,False,public,https://www.youtube.com/watch?v=TohEnqYYGdc,https://www.youtube.com/watch?v=TohEnqYYGdc
31,Advent of Python - PyCon Italia 2024,https://www.youtube.com/watch?v=MM7jeW9tfUg,MM7jeW9tfUg,Python Italia,@PythonItalia,https://www.youtube.com/@PythonItalia,20240630,2774,100,2,,,Entertainment,"Advent of Python - PyCon Italia 2024

Description:
Nel panel ""Advent of Python"", esploreremo l'emozionante ""Advent of Code"", un'avventura annuale di programmazione che unisce sfide di programmazione e spirito festivo. Discuteremo cos'è l'Advent of Code, perché è così appassionante e condivideremo esperienze personali e lezioni apprese, evidenziando come questo evento stimoli la creatività e il problem solving. Infine, racconteremo aneddoti divertenti ed i motivi per cui ogni programmatore dovrebbe accettare questa sfida durante le feste. Unisciti a noi per una panoramica del mondo di ""Advent of Python""!

Learn more: https://2024.pycon.it/event/advent-of-python",https://i.ytimg.com/vi/MM7jeW9tfUg/maxresdefault.jpg,0,False,False,public,https://www.youtube.com/watch?v=MM7jeW9tfUg,https://www.youtube.com/watch?v=MM7jeW9tfUg
32,Let’s make the world a better place: Python for Social Good - Adarsh Kumar,https://www.youtube.com/watch?v=QfIBcImx0xc,QfIBcImx0xc,Python Italia,@PythonItalia,https://www.youtube.com/@PythonItalia,20240630,1346,32,1,,"CaseStudy,DeepLearning,NaturalLanguageProcessing",Entertainment,"Let’s make the world a better place: Python for Social Good - Adarsh Kumar - PyCon Italia 2024

Elevator Pitch:
Join me on a purposeful journey where Python with its palette of libraries paints a brighter future. While exploring its versatility, simplicity, and extensive community support, let's code a healthier world in healthcare and battle online villains with Python, our ethical superhero! #PythonForGood

Description:
Let’s zoom out for a moment and have a look at the vast canvas of our world, at the challenges it presents to us. Now, imagine if Python could be the color that paints a brighter future within that canvas. In this talk, let’s embark on a **purposeful journey** with Python: a journey where a bunch of lines of code works as a catalyst for positive transformation.

Python for its **simplicity**, **versatility**, and most importantly, its **community support**, has constantly been the first choice. For starters, libraries like *Numpy, Pandas, Scikit-Learn*, and *OpenCV* have played pivotal roles in the research and development of revolutionary solutions. But this isn't just about coding; it's about applying Python to make a tangible impact on people's lives. In this talk, we will introduce two such domains, which we have been involved working in over the last few years

First, we’ll delve into Python's role in **healthcare and medical research**, where code becomes a savior. Imagine writing code that identifies diseases, automates healthcare processes, and contributes to a healthier world.

But that’s just the start. Python isn't just a coding language; it's like a superhero on a mission for good. Imagine Python as the hero **fighting online bad stuff** – like bullies, mean talkers, and fake/misleading news. And what’s more? It has some cool sidekicks, like *Huggingface, EthicalML*, and *TensorFlow-Fairness-Indicators*, making it a real ethical superhero in the coding world.

Learn more: https://2024.pycon.it/event/lets-make-the-world-a-better-place-python-for-social-good

#DeepLearning #CaseStudy #NaturalLanguageProcessing",https://i.ytimg.com/vi/QfIBcImx0xc/maxresdefault.jpg,0,False,False,public,https://www.youtube.com/watch?v=QfIBcImx0xc,https://www.youtube.com/watch?v=QfIBcImx0xc
33,So you think you know Git: Advanced Git Tips and Tricks - Scott Chacon,https://www.youtube.com/watch?v=uJWTDXkk-20,uJWTDXkk-20,Python Italia,@PythonItalia,https://www.youtube.com/@PythonItalia,20240630,2838,326,7,,BestPractice,Entertainment,"So you think you know Git: Advanced Git Tips and Tricks - Scott Chacon - PyCon Italia 2024

Elevator Pitch:
Git has been the de-facto version control system used by nearly every developer in the world for almost a decade now. While most of us know the basics, there are depths and hidden valleys of our Git tooling that even the most experienced of us may have never even heard of. Join Scott Chacon, a GitHu

Description:
Git has been the de-facto version control system used by nearly every developer in the world for almost a decade now. While most of us know the basics, there are depths and hidden valleys of our Git tooling that even the most experienced of us may have never even heard of. Join Scott Chacon, a GitHub co-founder and the author of Pro Git, to dig into the hidden depths of obscure command line invocations to get more out of the amazing tool you use every day.

Learn more: https://2024.pycon.it/event/so-you-think-you-know-git-advanced-git-tips-and-tricks

#BestPractice",https://i.ytimg.com/vi/uJWTDXkk-20/maxresdefault.jpg,0,False,False,public,https://www.youtube.com/watch?v=uJWTDXkk-20,https://www.youtube.com/watch?v=uJWTDXkk-20
34,Snakes and Ladders: The Ups and Downs of Python Development with AWS Lambda - Kristi Perreault,https://www.youtube.com/watch?v=EJr8aqphGi8,EJr8aqphGi8,Python Italia,@PythonItalia,https://www.youtube.com/@PythonItalia,20240630,2194,64,4,,"AWS,BestPractice,Computing,Packaging,Testing",Entertainment,"Snakes and Ladders: The Ups and Downs of Python Development with AWS Lambda - Kristi Perreault - PyCon Italia 2024

Elevator Pitch:
Python is the second most used language for AWS Lambda, and yet beginner developers through seasoned architects still struggle with python cloud development. Join us as we discuss the common pitfalls and the tools we can use to address them, and together we can make python as common as the viper.

Description:
In the 2023 Datadog State of Serverless Report, researchers identified python as the #2 most used language for AWS Lambda, with nearly 30% of lambda functions using python [1]. Additionally, python has the shortest cold start time out of all languages [1], was the first supported language for Lambda Powertools, and event has its own specific local testing tools, python-lambda-local and the moto mocking library. With all this support, it’s surprising to see how difficult python can still be in cloud development. Working for years in Serverless DevOps and Cloud Enablement in a large enterprise, as well as engaging with the tech community, I’ve seen beginner developers up through seasoned architects struggle with packaging python dependencies in the cloud, get frustrated with frequent build & deploy failures, and fall into the “well it works locally on my machine” trap. Luckily, with some expertise and the supporting technologies we have at our disposal, these difficulties can be not only easy to work through but will have you reaching for python for all your cloud applications.

DETAILED OVERVIEW
As an avid python AWS lambda developer, we will spend this session focusing on the common pitfalls of python AWS lambda development, the tools & techniques we can use to overcome these challenges, and how to get the most out of developing your AWS lambda functions with python.

This talk will cover:
• The challenges developers face working with python compute in AWS, including dependency conflicts & package sizing, working with local vs deployed environments, interacting with the filesystem & the OS library, injecting environment variables, and more.
• Tips & tools for addressing your Big Python Problems in cloud, including embracing technologies like Docker & containerization, lambda layers, and lambda powertools.
• Testing appropriately with python-lambda-local, moto, and tox to save time & future frustrations.

Attendees will walk away with an understanding of how to create, develop, and troubleshoot pesky python AWS lambda functions following best practices from real-world experiences.

AUDIENCE
This session is best suited for those at any level in their career, however this session may be of particular interest to those that have intermediate experience with python & AWS or focus on cloud computing with python. This is a technical topic focused python AWS Lambda development that would be extraordinarily beneficial for anyone looking to develop or strengthen their serverless cloud computing posture.

SOURCES
[1] https://www.datadoghq.com/state-of-serverless/#:~:text=Python%20and%20Node.,js.

Learn more: https://2024.pycon.it/event/snakes-and-ladders-the-ups-and-downs-of-python-development-with-aws-lambda

#Packaging #BestPractice #AWS #Testing #Computing",https://i.ytimg.com/vi/EJr8aqphGi8/maxresdefault.jpg,0,False,False,public,https://www.youtube.com/watch?v=EJr8aqphGi8,https://www.youtube.com/watch?v=EJr8aqphGi8
35,GIL: What's the hassle and... should I care? - Jacek Kołodziej,https://www.youtube.com/watch?v=mZCTkTYAfek,mZCTkTYAfek,Python Italia,@PythonItalia,https://www.youtube.com/@PythonItalia,20240630,2562,63,2,,"AsyncIO,CPython,MultiProcessing,MultiThreading,Performance",Entertainment,"GIL: What's the hassle and... should I care? - Jacek Kołodziej - PyCon Italia 2024

Elevator Pitch:
GIL often appears as a scary, obscure *gizmo*. Misunderstanding this aspect of Python may lead to *suboptimal architectural choices*. I invite you to see my attempt at explaining the GIL and its implications, as well as providing pointers for **how to deal with the GIL** in specific situations.

Description:
GIL often appears as a scary, obscure *gizmo*. Misunderstanding this aspect of Python may lead to *suboptimal architectural choices*. I invite you to see my attempt at explaining the GIL and its implications, as well as providing pointers for **how to deal with the GIL** in specific situations.

There have been (and still are), of course, attempts to get around the GIL - or *get rid of it* altogether. I hope to give some light to these works.

By providing a comprehensive overview of today's GIL in CPython, this presentation aims to help make **better design choices** - be it choosing a concurrency/parallelism model, Python implementation to use - or even whether or not to drop. Python entirely.

Learn more: https://2024.pycon.it/event/gil-whats-the-hassle-and-should-i-care

#AsyncIO #Performance #CPython #MultiProcessing #MultiThreading",https://i.ytimg.com/vi/mZCTkTYAfek/maxresdefault.jpg,0,False,False,public,https://www.youtube.com/watch?v=mZCTkTYAfek,https://www.youtube.com/watch?v=mZCTkTYAfek
36,Understanding the Magic of Python Modules and Packages - Swastika Yadav,https://www.youtube.com/watch?v=xn7NQBKknyk,xn7NQBKknyk,Python Italia,@PythonItalia,https://www.youtube.com/@PythonItalia,20240630,1240,138,1,,"CleanCode,CodeAnalysis,Education",Entertainment,"Understanding the Magic of Python Modules and Packages - Swastika Yadav - PyCon Italia 2024

Elevator Pitch:
Demystify Python Modules and Packages together—Understand their impact on readability, scalability, and collaboration. 

Let's build Modules and Packages from scratch and understand. We will discuss everything from the basics of modules and packages to real-world examples.

Description:
Developers often grapple with the challenge of maintaining order in complex codebases. The ever-growing complexity of projects often leads to disorganized code that hinders readability and collaboration. To resolve this code disarray, we have Modules and Packages in Python. 

Many developers use Modules and Packages in their daily lives, so let's understand the impact these tools have on code and project scalability and collaborative workflows. We will code Python packages and modules from scratch and understand the functioning and look into real-world examples.

In this talk, we will discover:
1. What are Python modules
2. What are Python Packages
3. Understand Module Search Path
4. How to use and import Modules and Packages
5. What are subpackages
6. Real world example of Modules and Packages
7. Conclusion
8. Q/A

Learn more: https://2024.pycon.it/event/understanding-the-magic-of-python-modules-and-packages

#Education #CleanCode #CodeAnalysis",https://i.ytimg.com/vi/xn7NQBKknyk/maxresdefault.jpg,0,False,False,public,https://www.youtube.com/watch?v=xn7NQBKknyk,https://www.youtube.com/watch?v=xn7NQBKknyk
37,503 days working full time on FOSS: lessons learned - Rodrigo Girão Serrão,https://www.youtube.com/watch?v=soCa9xTNnWo,soCa9xTNnWo,Python Italia,@PythonItalia,https://www.youtube.com/@PythonItalia,20240630,2735,19,2,,"Community,OpenSource",Entertainment,"503 days working full time on FOSS: lessons learned - Rodrigo Girão Serrão - PyCon Italia 2024

Elevator Pitch:
I worked 503 days full-time on a Free and Open Source Software (FOSS) project, so what did I learn?

Description:
In this talk I will share the main lessons I learned after working full-time on a FOSS project for 503 days.
These lessons will revolve around four main points:

 1. how to get a tech job in this day & age
 2. how to put your ego aside when working with others (who know more than you!) and how to deal with mistakes
 3. how to interact with users & contributors online
 4. how it feels to collaborate to a large codebase

With contributors and “wanna-be” contributors in mind, this talk will shed some light on how the FOSS world works and what you can expect when you're trying to contribute to a FOSS project that you like.

Learn more: https://2024.pycon.it/event/503-days-working-full-time-on-foss-lessons-learned

#Community #OpenSource",https://i.ytimg.com/vi/soCa9xTNnWo/maxresdefault.jpg,0,False,False,public,https://www.youtube.com/watch?v=soCa9xTNnWo,https://www.youtube.com/watch?v=soCa9xTNnWo
38,FastAPI: Hitting the Performance Jackpot - Maciej Marzęta,https://www.youtube.com/watch?v=K7vtiUbZK2E,K7vtiUbZK2E,Python Italia,@PythonItalia,https://www.youtube.com/@PythonItalia,20240630,1688,837,28,,"FastAPI,Performance,PostgreSQL",Entertainment,"FastAPI: Hitting the Performance Jackpot - Maciej Marzęta - PyCon Italia 2024

Elevator Pitch:
Discover why FastAPI leads in speed with 'Hitting the Performance Jackpot'. Uncover the secrets behind its swift performance through advanced async techniques, efficient database interactions, and native pydantic integration.

Description:
In the rapidly evolving world of web development, speed and efficiency are not just desirable; they are essential. ""FastAPI: Hitting the Performance Jackpot"" is a dynamic presentation designed to reveal the core reasons behind FastAPI's remarkable speed, setting it apart in the Python web framework arena.

This talk goes beyond the basics, offering an in-depth exploration of FastAPI’s innovative use of modern Python features like asynchronous programming, type hints with pydantic, and automatic data model validation. We will explore how these features synergize to not only boost performance but also ensure robust, error-resistant code.

Attendees will gain valuable insights into optimizing database interactions for speed, implementing effective asynchronous patterns, and leveraging FastAPI's full potential to create blazing-fast, scalable web applications. This session is a must-attend for Python developers who aspire to push the boundaries of web application performance, offering practical knowledge that can be applied immediately to current projects.

Join me to transform your understanding and usage of FastAPI, turning every line of code into a step towards achieving unparalleled web app performance. This talk is not just a learning experience; it's an opportunity to join the forefront of Python web development.

Learn more: https://2024.pycon.it/event/fastapi-hitting-the-performance-jackpot

#PostgreSQL #Performance #FastAPI",https://i.ytimg.com/vi/K7vtiUbZK2E/maxresdefault.jpg,0,False,False,public,https://www.youtube.com/watch?v=K7vtiUbZK2E,https://www.youtube.com/watch?v=K7vtiUbZK2E
39,High Performance Data Visualization for the Web - Tim Paine,https://www.youtube.com/watch?v=s6n9vEyM1gY,s6n9vEyM1gY,Python Italia,@PythonItalia,https://www.youtube.com/@PythonItalia,20240630,1741,869,21,,"Analytics,FastAPI,Visualization",Entertainment,"High Performance Data Visualization for the Web - Tim Paine - PyCon Italia 2024

Elevator Pitch:
Are you looking for a high performance visualization component for the web? Need to filter, sort, pivot, and aggregate static/streaming data in realtime? Daunted by the massive JS ecosystem? In this talk, we'll build a high performance web frontend using the open source library Perspective. 

Description:
The Python ecosystem has ample supply of both web development frameworks, and data visualization components. But despite the maturity of the ecosystem, few datavisualization tools are capable of dealing with large amounts of streaming data. Even fewer are able to perform live aggregations, sorting, and filtering on top of this data.

In this talk, we will put together a simple but full-featured website using [Perspective](https://perspective.finos.org). Perspective is an open source interactive analytics and data visualization component, which is especially well-suited for large and/or streaming datasets. It is written in C++ and Rust with bindings to both Python and WebAssembly, making it ideal for data-intensive applications. It comes with a variety of visualization plugins, including a datagrid and various charts. Additionally, it comes with a Jupyter widget, which allows developers to iterate quickly with a clear pathway to their production website.

We will start with a simple [FastAPI](https://fastapi.tiangolo.com)-based website and some static data. In a few lines of code, we will have the website up and running. Next, we will demonstrate some of the core features of Perspective - pivoting, sorting, filtering, the various visualization plugins, cross-filtering (using one table as a filter on other tables), and computed columns. After this, we will pull in some streaming data and show how the functionality of Perspective demonstrated updates in realtime alongside the data. Finally, we'll crank the speed of updates to the limit.

By the end of this talk, the audience will know how to use Perspective and how to incorporate it into their own applications for both static and streaming data, either as a simple but high performance datagrid or as a full featured set of interconnected visualization components.

Learn more: https://2024.pycon.it/event/high-performance-data-visualization-for-the-web

#Analytics #Visualization #FastAPI",https://i.ytimg.com/vi/s6n9vEyM1gY/maxresdefault.jpg,0,False,False,public,https://www.youtube.com/watch?v=s6n9vEyM1gY,https://www.youtube.com/watch?v=s6n9vEyM1gY
40,Rewrite everything in Rust? What we learned from introducing Rust in Strawberry-GraphQL - Erik Wrede,https://www.youtube.com/watch?v=fpxHT1Uvv2w,fpxHT1Uvv2w,Python Italia,@PythonItalia,https://www.youtube.com/@PythonItalia,20240630,1395,383,9,,"GraphQL,Performance,Rust",Entertainment,"Rewrite everything in Rust? What we learned from introducing Rust in Strawberry-GraphQL - Erik Wrede - PyCon Italia 2024

Elevator Pitch:
Discover how we turbocharged Strawberry's Python-based GraphQL engine using Rust. Learn about performance improvements, our takeaways, and how to harness Rust's power in your next Python project!

Description:
Rewriting libraries in Rust is a hot topic in the Python community. But how do you maximize performance gains, and what’s the best way to shift parts of your Python codebase to Rust? We tackled these questions while working on Strawberry-GraphQL, one of the largest Python-based GraphQL frameworks, and performance is key for the large companies that rely on us.

We saw parsing and validation performance increase by up to seven times with our implementation. Plus, we've got more work planned to further enhance performance and share our tools with other language frameworks.

However, it wasn't straightforward. One main challenge was integrating Rust with our existing code in the execution engine. Rust's complexities initially made it seem unwise to move parts of our codebase into Rust, but we developed effective strategies for successful integration.

This session is great for you if you're interested in gaining performance with Rust or exploring the internals of a GraphQL execution engine. Prior GraphQL knowledge isn't necessary, but a basic understanding will help.

Join Erik to learn more about improving Python performance with Rust, and how you can implement Rust-based modules in your projects!

Learn more: https://2024.pycon.it/event/rewrite-everything-in-rust-what-we-learned-from-introducing-rust-in-strawberry-graphql

#GraphQL #Performance #Rust",https://i.ytimg.com/vi/fpxHT1Uvv2w/maxresdefault.jpg,0,False,False,public,https://www.youtube.com/watch?v=fpxHT1Uvv2w,https://www.youtube.com/watch?v=fpxHT1Uvv2w
41,Python and Freedom and Bias - Laís Carvalho,https://www.youtube.com/watch?v=RiqWAyE1McM,RiqWAyE1McM,Python Italia,@PythonItalia,https://www.youtube.com/@PythonItalia,20240630,1730,51,2,,"BestPractice,CleanCode,Communication",Entertainment,"Python and Freedom and Bias - Laís Carvalho - PyCon Italia 2024

Elevator Pitch:
Guido van Rossum stated that “Python is an experiment in how much freedom programmers need”.
Do you wonder what the implications of such freedom are?

In this talk, we will look at the Zen of Python and draw meaning from it, looking at the some blind spots such freedom can create.

Description:
Guido van Rossum, the creator of our beloved programming language, states that “Python is an experiment in how much freedom programmers need”. But have you ever wondered what the implications of such freedom are?

In this talk, we will have a look at the Python “built-in guidelines"" on how to write pythonic code, also known as The Zen of Python, written by Tim Peters. I will use concepts present on the book Gödel, Escher, Bach: An eternal Golden Braid (written by Douglas Hofstadter) to explain meaning and relate it to Freedom (both in life and coding) and the human nature of biased perspective.

The talk is structured as follows:
1) Intro to the Zen of Python
2) The Search for Meaning, an Intro to Gödel, Escher, Bach
3) Freedom and our responsibility to choose
4) The blind spot experiment
5) Summary and Conclusion

Learn more: https://2024.pycon.it/event/python-and-freedom-and-bias

#Communication #BestPractice #CleanCode",https://i.ytimg.com/vi/RiqWAyE1McM/maxresdefault.jpg,0,False,False,public,https://www.youtube.com/watch?v=RiqWAyE1McM,https://www.youtube.com/watch?v=RiqWAyE1McM
42,"Django, Metadati e Inspire: come catalogare dati geospaziali grazie a Python  - Armuzza",https://www.youtube.com/watch?v=OCIB7UIMExM,OCIB7UIMExM,Python Italia,@PythonItalia,https://www.youtube.com/@PythonItalia,20240630,1348,58,0,,"DataStructures,Documentation,GEOandGIS,Visualization",Entertainment,"Django, Metadati e Inspire: come catalogare dati geospaziali grazie a Python  - Armuzza - PyCon Italia 2024

Elevator Pitch:
Abbiamo tantissimi dati geospaziali e dobbiamo compilarne i metadati. Come possiamo fare? A mano? Certo che no. Non nel 2024.

Grazie a Python e Django vedremo come automatizzare e semplificare alcuni processi di raccolta e catalogazione e come trasformare i metadati in strumenti di consultazione.

Description:
L’obiettivo di questo talk è spiegare come creare un sito in Django di compilazione e consultazione di metadati.

Per fare questo, ci avvarremo di un caso pratico spiegando nel dettaglio le diverse fasi di sviluppo e le problematiche insorte lungo il percorso di creazione del sito.

Vedremo, in particolare, come partendo dalla necessità di catalogare dei dati geospaziali e avendo inizialmente solo un notebook Python si è arrivati alla creazione di un sito in Django il quale consente di compilare e consultare i metadati di dati geospaziali secondo la normativa INSPIRE. Scopriremo, ad esempio come, grazie ad alcuni script python e alle API di ArcGIS, è stato possibile leggere le informazioni dei servizi e dei layer sul portale ESRI aziendale e aggiornare il db e come, grazie ad htmx, sono state realizzate soluzioni di front-end carine anche per un data scientist!

Learn more: https://2024.pycon.it/event/django-metadati-e-inspire-come-catalogare-dati-geospaziali-grazie-a-python

#Visualization #Documentation #GEOandGIS #DataStructures",https://i.ytimg.com/vi/OCIB7UIMExM/maxresdefault.jpg,0,False,False,public,https://www.youtube.com/watch?v=OCIB7UIMExM,https://www.youtube.com/watch?v=OCIB7UIMExM
43,Is your model private? - Luca Corbucci,https://www.youtube.com/watch?v=bzyM1avxIvk,bzyM1avxIvk,Python Italia,@PythonItalia,https://www.youtube.com/@PythonItalia,20240630,1880,23,0,,"MachineLearning,Privacy",Entertainment,"Is your model private? - Luca Corbucci - PyCon Italia 2024

Elevator Pitch:
Join me in uncovering privacy vulnerabilities of Machine Learning, and discussing attacks like Membership Inference. Learn how techniques like Differential Privacy and tools such as Opacus can mitigate the privacy risk of your models.

Description:
As the popularity of Machine Learning models continues to soar, concerns about the risks associated with black box models have become more prominent. While much attention has been given to the development of unfair models that may discriminate against certain minorities, there exists another concern often overlooked: the privacy risks posed by ML models.

Research has substantiated that ML models are susceptible to various attacks, with one notable example being the Membership Inference attack, enabling the prediction of whether a specific sample was present during training.

Join me in this talk, where I will explain the privacy risks inherent in Machine Learning models. Beyond exploring potential attacks, I will elucidate how techniques such as Differential Privacy and tools like Opacus (https://github.com/pytorch/opacus) can play crucial roles in training more robust and secure models.

Learn more: https://2024.pycon.it/event/is-your-model-private

#Privacy #MachineLearning",https://i.ytimg.com/vi/bzyM1avxIvk/maxresdefault.jpg,0,False,False,public,https://www.youtube.com/watch?v=bzyM1avxIvk,https://www.youtube.com/watch?v=bzyM1avxIvk
44,Is Django async yet? - Riccardo Magliocchetti,https://www.youtube.com/watch?v=v3FZBgvugKM,v3FZBgvugKM,Python Italia,@PythonItalia,https://www.youtube.com/@PythonItalia,20240630,1257,572,15,,"APIs,AsyncIO,Django",Entertainment,"Is Django async yet? - Riccardo Magliocchetti - PyCon Italia 2024

Elevator Pitch:
Django started adding support for writing asynchronous views in version 3.1. We are now at 5.0: what's the status of this journey? We'll try to rewrite a simple synchronous API to asynchronous and see what works, how well it's working and what's missing.

Description:
Django started adding support for writing asynchronous views in version 3.1. We are now at 5.0: what's the status of this journey? It still may be too early to start rewriting all our production backend code using asynchronous views :) Though it may be a good moment to take a look at it. 
We'll try to rewrite a simple synchronous API as an asynchronous API and see what works, how well it's working and what's missing.

Learn more: https://2024.pycon.it/event/is-django-async-yet

#AsyncIO #Django #APIs",https://i.ytimg.com/vi/v3FZBgvugKM/maxresdefault.jpg,0,False,False,public,https://www.youtube.com/watch?v=v3FZBgvugKM,https://www.youtube.com/watch?v=v3FZBgvugKM
45,From Domain to Delivery: End-to-End Clean Architecture in Python - Ievgen Burdin,https://www.youtube.com/watch?v=nsbJh3SEZy0,nsbJh3SEZy0,Python Italia,@PythonItalia,https://www.youtube.com/@PythonItalia,20240630,1368,278,5,,"Architecture,CleanCode",Entertainment,"From Domain to Delivery: End-to-End Clean Architecture in Python - Ievgen Burdin - PyCon Italia 2024

Elevator Pitch:
As an applications in Python become increasingly complex, the need for a structured approach to manage this complexity becomes essential. Clean Architecture offers a solution by ensuring separation of concerns and adaptability.

Description:
Managing modularity and ensuring maintainability in Python applications can be challenging as projects grow. Clean Architecture addresses these issues by promoting separation of concerns and system independence. In this talk, we'll explore Clean Architecture's layered approach, starting with domain models to enforce business rules. We'll then integrate these models with use cases and repositories, showcasing effective layering and dependency management. Interface adapters and their role in connecting external requests to internal logic will also be discussed. The session concludes by demonstrating how to package these components for delivery, focusing on modularity and testability. Attendees will gain practical insights for applying Clean Architecture in Python to create scalable and maintainable applications.

Learn more: https://2024.pycon.it/event/from-domain-to-delivery-end-to-end-clean-architecture-in-python

#Architecture #CleanCode",https://i.ytimg.com/vi/nsbJh3SEZy0/maxresdefault.jpg,0,False,False,public,https://www.youtube.com/watch?v=nsbJh3SEZy0,https://www.youtube.com/watch?v=nsbJh3SEZy0
46,Nim for Pythonistas - Pietro Peterlongo,https://www.youtube.com/watch?v=yPMudqyKtLQ,yPMudqyKtLQ,Python Italia,@PythonItalia,https://www.youtube.com/@PythonItalia,20240630,1935,525,24,,"JavaScript,Performance",Entertainment,"Nim for Pythonistas - Pietro Peterlongo - PyCon Italia 2024

Elevator Pitch:
What if I could tell you that there is a language that looks like Python but achieves the performance of C? And that also has the power of metaprogramming of Lisp? Nim is a statically typed compiled language that does all the above and more. And it is easy to learn for Pythonistas.

Description:
Experienced Pythonistas are used to reach out to an alternative language when in need for higher performance. In the past this meant to reach out for C, C++ or Cython, more recently the trend is towards Rust. Nim is a relatively unexplored option as a language to learn as a second (or third or ...) language on top of Python, but it does provide some interesting benefits.
As Rust, Nim is a statically typed and compiled programming language that can be use to boost Python's performance. But Nim has different tradeoffs, in particular less emphasis on memory safety and a much easier learning curve, thanks to a indentation based syntax very much familiar to Python developers. 

In this talk we will give a brief presentation of Nim language particularly tailored to Pythonistas. We will cover the language from the ground up, making frequent remarks to the differences with Python. We will briefly cover metaprogramming, one of the most powerful parts of Nim. We will try to convert the philosophy of the language (the Zen of Nim) and we will also cover the part of the ecosystem that are relevant for interoperability with Python (nimpy, nimporter, ...).
We will also cover one of the most interesting aspects of Nim that represents a rather distinctive selling point: Nim can compile to Javascript and allows us to be able to work with frontend technologies directly.

At the end we will briefly cover Nimib, my open source project recently ported also to Python. This will showcase a way to use metaprogramming in a real project and how to create a Python package using Nim.

The goal of this talk is to make you curious to go and try out Nim (come for the performance, stay for the ergonomics!), but even if you just come out with a better appreciation and understanding of Python we would still be happy.

Learn more: https://2024.pycon.it/event/nim-for-pythonistas

#Performance #JavaScript",https://i.ytimg.com/vi/yPMudqyKtLQ/maxresdefault.jpg,0,False,False,public,https://www.youtube.com/watch?v=yPMudqyKtLQ,https://www.youtube.com/watch?v=yPMudqyKtLQ
47,"Importing Without ""import"": Behind the Scenes of importlib - Bryce Beagle",https://www.youtube.com/watch?v=Q5_KD9hgGRM,Q5_KD9hgGRM,Python Italia,@PythonItalia,https://www.youtube.com/@PythonItalia,20240630,1795,143,7,,"APIs,CompilerandInterpreters,Packaging",Entertainment,"Importing Without ""import"": Behind the Scenes of importlib - Bryce Beagle  - PyCon Italia 2024

Elevator Pitch:
You've typed `import x` or `from y import z` in your Python programs countless times. But you probably don't know what really goes on behind the scenes. When are import statements actually evaluated? How does Python know where to find packages? What does importing a package even do at runtime? 

Description:
The import system of Python is frequently used, but seldom fully understood. It's a black box of mysterious behavior‒symbols magically become available in your file, but how? This talk will go over the inner workings of `importlib`, the internal library responsible for all things importing.

You may be familiar with `sys.path` or even the `site-packages` directory, but have you heard of `finder`s, `loader`s, or `spec`s? We'll also discuss the `__import__` builtin, how to import packages without using the import statement, package and module lookup, caching, and more.

This talk will be a fast-paced crash course/demo as we tinker with the internals of the import process. We'll have a little fun along the way by messing with the internal library to break things in strange ways. We'll also do the dumb thing of building PyO3 bindings for a Rust library _at import time_, just to show that we can.

This talk is targeted towards an intermediate to advanced audience. An understanding of how to (normally) import packages is required, and being knowledgeable of system packages such as `sys` is beneficial. After this talk listeners should come away with a deeper understanding of what the language is doing every time the import statement is used.


Learn more: https://2024.pycon.it/event/importing-without-import-behind-the-scenes-of-importlib

#APIs #Packaging #CompilerandInterpreters",https://i.ytimg.com/vi/Q5_KD9hgGRM/maxresdefault.jpg,0,False,False,public,https://www.youtube.com/watch?v=Q5_KD9hgGRM,https://www.youtube.com/watch?v=Q5_KD9hgGRM
48,Python-friendly cloud infrastructure management - Roman Prykhodchenko,https://www.youtube.com/watch?v=AiuF3wlIUqA,AiuF3wlIUqA,Python Italia,@PythonItalia,https://www.youtube.com/@PythonItalia,20240630,1794,49,0,,"DeploymentContinuousIntegration,DevOps,Infrastructure,Tooling",Entertainment,"Python-friendly cloud infrastructure management - Roman Prykhodchenko - PyCon Italia 2024

Elevator Pitch:
For individual Python developers or small Python teams who want to stay up to date with industry standards while keeping their technology stack lightweight and familiar, we present a way for better application cloud infrastructure management using Python.

Description:
In this session, we'll explore why it's crucial to adopt IaC and other DevOps approaches even for individual developers and small teams.  We will emphasize that using technologies and following best-known practices by the book is not a goal but a way of solving problems. We will prove that sometimes making small deviations from those is beneficial for small teams.

For small teams, introducing any new technology stack means spending priceless time. It also causes a shift of focus of some team members while keeping the rest of the team in isolation. We will show several standard tools that allow managing application cloud infrastructure using the technology stack familiar to any Python developer.

We will give an overview of key principles of the Infrastructure as Code approach. Through a practical example featuring Terraform and Python, we'll showcase how even individual developers or resource-constrained teams can align with industry standards and implement DevOps practices for effective infrastructure management within the delivery pipeline.

You will be given a way to achieve many benefits of IaC and DevOps approaches such as better application reliability, improved security, and easier compliance while keeping the technology stack lightweight and familiar.

Learn more: https://2024.pycon.it/event/python-friendly-cloud-infrastructure-management

#Tooling #Infrastructure #DevOps #DeploymentContinuousIntegration",https://i.ytimg.com/vi/AiuF3wlIUqA/maxresdefault.jpg,0,False,False,public,https://www.youtube.com/watch?v=AiuF3wlIUqA,https://www.youtube.com/watch?v=AiuF3wlIUqA
49,Exploring Art with Python: Building an Italian Art Bot - Nicolò Giso,https://www.youtube.com/watch?v=onFSXtYnyX8,onFSXtYnyX8,Python Italia,@PythonItalia,https://www.youtube.com/@PythonItalia,20240630,1618,28,0,,"APIs,Flask",Entertainment,"Exploring Art with Python: Building an Italian Art Bot - Nicolò Giso - PyCon Italia 2024

Elevator Pitch:
Do you love art and Python?

This is the story of how I built a Python bot that publishes Italian paintings on BlueSky. 

What better city to present  it than Florence, one of the most artistic cities in the world?

Description:
As a side project, I built a bot that posts pictures of Italian paintings on BlueSky. What better city to present it than Florence, one of the most artistic cities in the world?

In this talk, I will demonstrate how I collected images from WikiArt using the requests library. I'll provide a brief overview of the countless hours spent selecting the best paintings from the collection of 16,000 artworks created between the 14th and 21st centuries. Additionally, I'll delve into the implementation details of the bot.

Specifically, I developed a Python bot based on Flask and deployed it on Render.com. The bot, at fixed times, randomly retrieves one of the shortlisted 1,750 images from a Postgres database on Vercel (containing information such as the title, artist name, and year of each artwork) and publishes it on BlueSky.

Learn more: https://2024.pycon.it/event/exploring-art-with-python-building-an-italian-art-bot

#Flask #APIs",https://i.ytimg.com/vi/onFSXtYnyX8/maxresdefault.jpg,0,False,False,public,https://www.youtube.com/watch?v=onFSXtYnyX8,https://www.youtube.com/watch?v=onFSXtYnyX8
50,A Journey through Generative AI's Frontier Python Libraries - Serena Palazzo,https://www.youtube.com/watch?v=5HyWzhuKCM0,5HyWzhuKCM0,Python Italia,@PythonItalia,https://www.youtube.com/@PythonItalia,20240630,1455,30,0,,"DeepLearning,MachineLearning,NaturalLanguageProcessing",Entertainment,"A Journey through Generative AI's Frontier Python Libraries - Serena Palazzo - PyCon Italia 2024

Elevator Pitch:
In my talk on generative AI with Python, I'll unravel the fascinating realm of AI that empowers machines to create art, music, and written content. We'll explore the cutting-edge techniques and learn how Python serves as a powerful tool in unleashing the potential of generative AI.

Description:
Generative Artificial Intelligence (Generative AI) stands as a dynamic catalyst, unlocking the vast potential of artificial creativity. This presentation embarks on a journey through the expansive realm of Python libraries that empower developers, researchers, and enthusiasts to immerse themselves in the intricate world of generative models. From the realms of text generation to the frontiers of image synthesis and beyond, this discourse illuminates the pivotal Python libraries that are shaping the future landscape of generative AI. Beginning with a foundational overview of generative models and their pivotal role in artificial creativity, attendees will delve into the fundamental concepts of Generative Adversarial Networks (GANs), Variational Autoencoders (VAEs), and their versatile applications across diverse domains. Navigating into the domain of natural language processing, the discussion spotlights the prowess of Hugging Face Transformers, a robust Python library that facilitates text generation using cutting-edge models. Attendees will gain practical insights into leveraging pre-trained models for creative writing, content generation, and streamlined code autocompletion. This presentation offers a comprehensive expedition into the Python libraries propelling the evolution of generative AI. Attendees will depart armed with practical knowledge, hands-on insights, and a profound understanding of Python's pivotal role in democratizing creativity through the lens of generative artificial intelligence.

Learn more: https://2024.pycon.it/event/a-journey-through-generative-ais-frontier-python-libraries

#MachineLearning #DeepLearning #NaturalLanguageProcessing",https://i.ytimg.com/vi/5HyWzhuKCM0/maxresdefault.jpg,0,False,False,public,https://www.youtube.com/watch?v=5HyWzhuKCM0,https://www.youtube.com/watch?v=5HyWzhuKCM0
51,Scraping the Dungeons. Find your perfect D&D game using Scrapy and Bokeh visualisation,https://www.youtube.com/watch?v=JCR290lJaVU,JCR290lJaVU,Python Italia,@PythonItalia,https://www.youtube.com/@PythonItalia,20240630,1769,43,1,,"Architecture,BestPractice,Bokeh,DistributedSystems,Scaling",Entertainment,"Scraping the Dungeons. Find your perfect D&D game using Scrapy and Bokeh visualisation - Viktor Zagranovskyy - PyCon Italia 2024

Elevator Pitch:
Together we will explore the new horisons of D&D world. Where the BBEG is not always a lich or a dragon, but a lack of good company and a stable schedule. In this sesstion we will create a simple data-driven app, that will use power of Scrapy to extract the data from open web and Bokeh visualisation

Description:
🐉 Introduction to the D&D Gaming Landscape:
Embark on a journey through the mystical world of Dungeons & Dragons (D&D). This introduction sets the stage 🎭 for understanding the challenge: navigating a sea 🌊 of game data to find the perfect match for each player. We'll discuss the need for an automated, user-friendly solution here.

🕸️ Scrapy: The Data Harvesting Powerhouse:
Dive deep into the capabilities of Scrapy, a leading open-source web crawling framework, perfect for extracting unstructured data. This segment covers the basics of setting up a crawler 🤖, navigating through web pages, and extracting key game information. We emphasize ethical scraping practices to responsibly collect data 🛡️.

🧹 Data Cleansing and Transformation:
After gathering raw data, we move to cleansing and transforming it. This crucial phase involves techniques for structuring and preparing data for visualization, ensuring that our data is clean and insightful 🌟.

🎨 Bokeh: Illuminating Data with Interactive Visuals:
The highlight of our tale is Bokeh, a Python library for creating interactive and engaging visualizations. Watch as we turn the D&D data into captivating, interactive plots and dashboards 📊, allowing users to explore and filter through games to find their ideal adventure. This part includes a live demonstration 🖥️ of a Bokeh application, brimming with interactive elements like graphs, sliders, and dropdowns.

🌍 Real-World Application and Outcomes:
Although we do a small amount of data harvesting, enrichment and visualisation - we will see the powerfull and scalable base for a production-ready batteries-included solution for data-oriented businesses

💬 Q&A and Interactive Session:
Concluding with a Q&A session, this segment invites audience engagement, offering a chance to discuss and envision future advancements in web scraping in Python.

Learn more: https://2024.pycon.it/event/scraping-the-dungeons-find-your-perfect-dd-game-using-scrapy-and-bokeh-visualisation

#Bokeh #BestPractice #DistributedSystems #Architecture #Scaling",https://i.ytimg.com/vi/JCR290lJaVU/maxresdefault.jpg,0,False,False,public,https://www.youtube.com/watch?v=JCR290lJaVU,https://www.youtube.com/watch?v=JCR290lJaVU
52,AI on a Microbudget - Methods of Machine Learning Miniaturization,https://www.youtube.com/watch?v=x_ul_U3Wz7U,x_ul_U3Wz7U,Python Italia,@PythonItalia,https://www.youtube.com/@PythonItalia,20240630,1770,69,2,,"Algorithms,DeepLearning,MachineLearning,NaturalLanguageProcessing,OpenSource",Entertainment,"AI on a Microbudget - Methods of Machine Learning Miniaturization - Katharina Rasch, Christian Staudt - PyCon Italia 2024

Elevator Pitch:
 In recent years, the AI field has pursued ever larger models, trained at “eye-watering” cost. In this talk we explore ideas for the rest of us, the GPU-poor. We’ll show you how to make do with less – less computing power, less person power, less data – while still building powerful models. 

Description:
Current progress in AI has seen remarkable capabilities emerging from simple prediction tasks – if we scale them massively. Surprisingly, we get sparks of reasoning and intelligence in a model that was trained to do little more than masked word prediction. Since that realization the AI field has pursued ever larger models, trained at “eye-watering” cost. If scaling is all you need – does it follow that, in practice, money is all you need?

In this talk we explore ideas for the rest of us, the GPU-poor. Taking examples from language processing and computer vision, we’ll show you how to make do with less – less computing power, less person power, less data – while still building powerful models. We will introduce a set of methods and open source tools for the efficient reuse and miniaturization of models, including transfer learning and fine-tuning, knowledge distillation, and model quantization. We will also discuss how to choose efficient model architectures, and investigate ways in which small and specialized models can outperform large models. Our talk aims to provide an overview for ML practitioners, draws from our combined project experience, and is accompanied by a repository of code examples to get you started with building AI on a microbudget.

Learn more: https://2024.pycon.it/event/ai-on-a-microbudget-methods-of-machine-learning-miniaturization

#MachineLearning #OpenSource #DeepLearning #NaturalLanguageProcessing #Algorithms",https://i.ytimg.com/vi/x_ul_U3Wz7U/maxresdefault.jpg,0,False,False,public,https://www.youtube.com/watch?v=x_ul_U3Wz7U,https://www.youtube.com/watch?v=x_ul_U3Wz7U
53,"Infiniti mondi da set finiti di tessere: un approccio ""quantum"" all'arte generativa - Juna Salviati",https://www.youtube.com/watch?v=86uZq-eC7g8,86uZq-eC7g8,Python Italia,@PythonItalia,https://www.youtube.com/@PythonItalia,20240630,1505,29,2,,"Algorithms,Science",Entertainment,"Infiniti mondi da set finiti di tessere: un approccio ""quantum"" all'arte generativa - Juna Salviati - PyCon Italia 2024

Elevator Pitch:
In questo talk scopriremo un semplice algoritmo che applica alcune idee ispirate alla meccanica quantistica per generare mappe con un set di tessere

Description:
Immaginate di avere a disposizione delle tessere che possono essere accostate su una superficie per comporre delle immagini: quale algoritmo potreste applicare per automatizzare questo processo e quali criteri determinerebbero l’effettiva possibilità di portare a termine questo task? E' possibile inoltre dare una interpretazione quantistica di questo problema?
In questo talk scopriremo questo e molto altro, generando immagini con le emoji ed in stile 8-bit.

Learn more: https://2024.pycon.it/event/infiniti-mondi-da-set-finiti-di-tessere-un-approccio-quantum-allarte-generativa

#Science #Algorithms",https://i.ytimg.com/vi/86uZq-eC7g8/maxresdefault.jpg,0,False,False,public,https://www.youtube.com/watch?v=86uZq-eC7g8,https://www.youtube.com/watch?v=86uZq-eC7g8
54,Demystifying Oauth2 Authorization framework - Jorge Martinez Gomez,https://www.youtube.com/watch?v=Uveu49DfC4o,Uveu49DfC4o,Python Italia,@PythonItalia,https://www.youtube.com/@PythonItalia,20240630,1756,100,2,,"APIs,Authentication",Entertainment,"Demystifying Oauth2 Authorization framework - Jorge Martinez Gomez - PyCon Italia 2024

Elevator Pitch:
Nowadays, Most applications have incorporated the Login with Facebook or Google button. This makes easy for users not to remember all the password for every platform. In this talk I will show you how this works internally and enable it within your future apps.

Description:
Oauth, and more specifically Oauth2, are enjoying interest as a result of increased popularity in a wide range of common web application. By providing authorization by users, for example, people can now send their CV to other services using linkedin information previously written on their profile. However, the source of the methodology and limitations of oauth remain poorly understood. With this talk, I aim to bridge the gap by providing an analysis involved with this protocol, using simple examples. Moreover, common jargon will be explained using the pre-defined oauth terms. Finally, a comparative analysis between Oauth and OpenID will supply insights to attendees to be used on their future applications.

With the wide adoption of collaborative platforms and social networks, many developers have had the opportunity to connect users with their data wherever they are on the web. Oauth provides the ability for different applications to access user’s data securely without requiring the user to take the scary step of handing over an account password. In other words, Oauth is a security protocol which allows users to grant delegate access of their web resources to third-party applications without sharing credentials.

Since its inception (and after certain revisions), many companies have adopted this protocol, such as Yahoo, Facebook or Google. Many users authorize applications to perform actions on their behalf. Nevertheless, the permission is scoped at a certain level. For instance, people can login and use the Spotify application using Facebook credentials. Spotify can read the user’s facebook profile, but it cannot read tagged photos.

Currently, many developers made use of the oauth2 authorization protocol with the purpose of avoiding the implementation of the app’s own login page. The ease of setting the required tokens and credentials to grant users access of the application using third-party databases, reduces the amount of time of developing and launching an app into production. In addition, relying on a third-party login application, lessens generated bugs within the application, such as database connection, security leaks, among others. However, the source of the methodology, terminology and implementation of Oauth2 remains poorly understood. This raises concerns of the lack of interpretability and limits our ability to design better architectures, or even, implementing the application own’s authorization server using oauth2.

Because of this, I made this proposal to bring to the attendees fully understanding of the oauth2 authorization framework in plain English (or spanish). The talk will provide a solid overview and be accessible to a target audience not already familiar with the Oauth and provide a much more detailed understanding of the framework. Digging more specifically into the authorization code flow, where I will explain each stage of the protocol and introducing important key terms within the relevant terminology.

The schedule of the talk will be the following:
- Definition of Oauth2 (5 min)
- Brief history of oauth (5 min)
- The oauth2 authorization framework protocol flow (15 min)
- Difference between authorization and authentication. Talk about OpenID connect (5 min)
- Question and answers (10 min)

Learn more: https://2024.pycon.it/event/demystifying-oauth2-authorization-framework

#APIs #Authentication",https://i.ytimg.com/vi/Uveu49DfC4o/maxresdefault.jpg,0,False,False,public,https://www.youtube.com/watch?v=Uveu49DfC4o,https://www.youtube.com/watch?v=Uveu49DfC4o
55,"Writing Beautiful, Simple, and Safe Operations Scripts with Python - Yossi Rozantsev",https://www.youtube.com/watch?v=VYlk1echRsM,VYlk1echRsM,Python Italia,@PythonItalia,https://www.youtube.com/@PythonItalia,20240630,1886,306,12,1.0,"DevOps,Linux,Tooling,Unix",Entertainment,"Writing Beautiful, Simple, and Safe Operations Scripts with Python - Yossi Rozantsev - PyCon Italia 2024

Elevator Pitch:
Every software project is only as good as it’s weakest piece of code.
Often that happens to be a crucial yet unreadable CI bash script, that is impossible to maintain.
In this talk we'll show how to write beautiful, safe and sane Bash-Python hybrid scripts to supercharge your operations scripts!

Description:
Every software project is only as good as it’s weakest piece of code.
In many projects, the core codebase is often developed with high standards, utilizing powerful tooling like linters, formatters and testing frameworks. On the other hand, utility scripts, used for simple, yet crucial, operations like building docker images, deploying the code or running some maintenance tasks, often fall short of the same  standards.
These scripts, typically written in Bash, are often very flaky and challenging to debug – especially when running on remote CI machines.
Python comes with the great (yet relatively low level) “subprocess” module, which provides an API for executing Bash commands via Python and interacting with the shell.
In this talk, we’ll show how a small utility library, which wraps the subprocess module and exposes an even simpler and more robust API, can be used to write beautiful, safe and sane Bash-Python hybrid scripts.
These scripts retain the raw power of Bash commands, and at the same time leverage the best of the Python ecosystem. The result is a much more flexible and reliable solution for project operations.

Learn more: https://2024.pycon.it/event/writing-beautiful-simple-and-safe-operations-scripts-with-python

#Linux #Tooling #Unix #DevOps",https://i.ytimg.com/vi/VYlk1echRsM/maxresdefault.jpg,0,False,False,public,https://www.youtube.com/watch?v=VYlk1echRsM,https://www.youtube.com/watch?v=VYlk1echRsM
56,A Retrieval Augmented Generation system to query the scikit-learn documentation - Lemaitre Guillaume,https://www.youtube.com/watch?v=A1zTDscHtsk,A1zTDscHtsk,Python Italia,@PythonItalia,https://www.youtube.com/@PythonItalia,20240630,1654,46,0,,"Documentation,MachineLearning,OpenSource",Entertainment,"A Retrieval Augmented Generation system to query the scikit-learn documentation - Lemaitre Guillaume - PyCon Italia 2024

Elevator Pitch:
Rubber ducks are used for many years to help Pythonistas in their everyday quest. At scikit-learn, we've elevated ducky to another level: come and meet the scikit-learn Ragger Duck, a RAG system designed to answer all your scikit-learn questions – at least as effectively as a duck can.

Description:
Currently, the scikit-learn website provides an ""exact"" search engine based on the tools provided by the Sphinx Python package (i.e., https://www.sphinx-doc.org/). The current search engine is implemented in JavaScript and runs locally using an index built when generating the documentation. This solution has the advantage of being lightweight and does not require any server to handle the query. However, the complexity of the query treated is weak: since the search is ""exact,"" it is not robust to spelling mistakes, and the search is intended for searches based on keywords.

As large language models (LLMs) are becoming more popular, we have been interested in experimenting with this technology, knowing that they could address some of the previously stated limitations. As an open-source project, we have limited resources in terms of compute and limited available datasets; therefore, we discarded the option of fine-tuning an LLM and leaned towards retrieval augmented generation (RAG) systems.

This talk presents an experimental RAG system developed to query the scikit-learn documentation. As constraints, we impose ourselves to use an open-source software stack and open-weight models to build our system. The talk is decomposed as follows:

First, we provide some background on the RAG system and the pipeline to follow to implement such a system.

Then, we go into details in the different stages of the RAG pipeline. We provide some insights regarding documentation scraping strategies that we developed by leveraging the `numpydoc` and `sphinx-gallery` parser. Then, we discuss the solution that we tested to perform lexical and semantic searches. Finally, we explain how the context found can be fed to the LLM to help generate an answer to the user query. We provide a small demo to compare queries performed on an LLM-only system and on the developed RAG system. All the code for the experiment is hosted at the following GitHub repository: https://github.com/glemaitre/sklearn-ragger-duck.

Finally, we put into perspective the gains and pains of such an RAG system when it comes to integrating it into an open-source project. Notably, we question the hosting and cost of such systems and compare it with other approaches that could tackle some of the original issues.

Learn more: https://2024.pycon.it/event/a-retrieval-augmented-generation-system-to-query-the-scikit-learn-documentation

#MachineLearning #Documentation #OpenSource",https://i.ytimg.com/vi/A1zTDscHtsk/maxresdefault.jpg,0,False,False,public,https://www.youtube.com/watch?v=A1zTDscHtsk,https://www.youtube.com/watch?v=A1zTDscHtsk
57,RAGtime with Haystack! How to build a RAG with Haystack 2.0?  - Tommaso Radicioni,https://www.youtube.com/watch?v=DxzA4DIqdNI,DxzA4DIqdNI,Python Italia,@PythonItalia,https://www.youtube.com/@PythonItalia,20240630,1836,899,15,,"BigData,NaturalLanguageProcessing",Entertainment,"RAGtime with Haystack! How to build a RAG with Haystack 2.0?  - Tommaso Radicioni - PyCon Italia 2024

Elevator Pitch:
Is your LLM hallucinating too? Let's build together a Retrieval Augmented Generation (RAG) algorithm with Haystack 2.0! We will explore the basic concepts and a practical example to delve into one of the most interesting developments in the field of automatic text generation.

Description:
Retrieval Augmented Generation (RAG) represents a significant step in improving the generative capabilities of Large Language Models (LLMs). Indeed, RAG is an innovative paradigm that is based on the integration of two crucial components: the extraction of relevant information from a knowledge base and the ability of a generative model to reframe this information into a coherent text. In the first stage, a search model, or Retriever, is used to index and extract fragments of text. These fragments are then provided to an LLM, which uses this information base to provide relevant and accurate answers.

The power of this approach allows an LLM to limit incorrect or misleading information, thereby reducing hallucinations, i.e., the tendency of generative models to produce false information supported by seemingly solid reasoning. While the internal knowledge of an LLM is extensive, it is necessarily generic or limited because of the slowness and cost of training. The use of an external knowledge base provides a more accurate guide to text generation, overall improving the reliability and consistency of the generated responses.

After an introduction on the basic concepts behind the RAG, the purpose of the presentation is to build a RAG through the use of Haystack, an open-source framework widely used in Natural Language Processing (NLP). Haystack has many features that make it an optimal choice for implementing a RAG, such as flexible document management, the ability to index heterogeneous data, and ease of integration with recent LLMs.

As of August 2023, Haystack has released a version still under development of a major update that will lead to the release of Haystack 2.0 or v2. During the presentation, we will see how new logic in building Pipelines for text retrieval and generation makes Haystack an even more robust tool for LLM-based applications.

Through a practical example, it will be shown how to implement a RAG with Haystack's methods and functions and what changes in the new v2 version. Pipeline architecture and configuration choices will be examined to understand how to translate the theoretical concepts exposed in the first part of the presentation into an efficient and reproducible scheme. The presentation will conclude with a discussion of the performance and limitations of RAG when put into production within a software product.

Learn more: https://2024.pycon.it/event/ragtime-with-haystack-how-to-build-a-rag-with-haystack-20

#BigData #NaturalLanguageProcessing",https://i.ytimg.com/vi/DxzA4DIqdNI/maxresdefault.jpg,0,False,False,public,https://www.youtube.com/watch?v=DxzA4DIqdNI,https://www.youtube.com/watch?v=DxzA4DIqdNI
58,Simplifying Python Code through the Lens of Functional Programming - Artem Kislovskiy,https://www.youtube.com/watch?v=l4_ti0S3LwA,l4_ti0S3LwA,Python Italia,@PythonItalia,https://www.youtube.com/@PythonItalia,20240630,1705,603,24,,"BestPractice,FunctionalProgramming,TestDrivenDevelopmentTDD",Entertainment,"Simplifying Python Code through the Lens of Functional Programming - Artem Kislovskiy - PyCon Italia 2024

Elevator Pitch:
Exploring functional languages taught me useful tricks to enhance Python code. The talk introduces essential concepts such as pure functions and immutable values, empowering developers to create more efficient and manageable Python code for large projects.

Description:
I have been writing Python programs for many years but had never been truly exposed to functional programming. I used to view functions as language constructs that facilitated the implementation of the ""don't repeat yourself"" (DRY) principle. Iterators and generators are excellent; I knew they were somewhat related to functional programming and inspired by Haskell, but is this all functional programming is about?

Taking a step into Scala helped me realize the power of functional programming and influenced to incorporate more functional code into my Python projects. To my surprise, the Python code became more readable and easier to test and maintain.

This talk focuses on writing simpler Python code, aiming to share a set of techniques for assembling a functional toolkit. You will learn about pure functions, immutable values, and how they contribute to keeping the code simple, even in large projects.

Learn more: https://2024.pycon.it/event/simplifying-python-code-through-the-lens-of-functional-programming

#TestDrivenDevelopmentTDD #BestPractice #FunctionalProgramming",https://i.ytimg.com/vi/l4_ti0S3LwA/maxresdefault.jpg,0,False,False,public,https://www.youtube.com/watch?v=l4_ti0S3LwA,https://www.youtube.com/watch?v=l4_ti0S3LwA
59,Solving Two Hard Problems in Computer Science Using Pandas - Miroslav Šedivý,https://www.youtube.com/watch?v=ICXzk6UlquQ,ICXzk6UlquQ,Python Italia,@PythonItalia,https://www.youtube.com/@PythonItalia,20240630,1379,30,2,,"Abstractions,DataStructures,Pandas,Science",Entertainment,"Solving Two Hard Problems in Computer Science Using Pandas - Miroslav Šedivý - PyCon Italia 2024

Elevator Pitch:
Actually you only wanted to build a simple pipeline to process incoming production data from power plants when you suddenly realized that you're solving the hardest problems in computer science.

Description:
There are 2 hard problems in computer science: cache invalidation, naming things, and off-by-1 errors. -- Leon Bambrick

When working with timeseries representing the production data of power plants, the fundamental step is to define a good data structure. The shape of the dataframes must be a good balance between speed and memory usage to work with the right and up-to-date amount of data (cache invalidation). The parameters must have good names for fast and unambiguous identification (naming things). The time intervals must be the correct fit for observed physics to prevent mismatches (off-by-1 errors).

I'll show you a few Python tricks and my experience with how I solved these problems in my projects.

Learn more: https://2024.pycon.it/event/solving-two-hard-problems-in-computer-science-using-pandas

#Pandas #Science #Abstractions #DataStructures",https://i.ytimg.com/vi/ICXzk6UlquQ/maxresdefault.jpg,0,False,False,public,https://www.youtube.com/watch?v=ICXzk6UlquQ,https://www.youtube.com/watch?v=ICXzk6UlquQ
60,Da 100 a 100M utenti: come scalare le tue architetture cloud!🚀 - Nicola Guglielmi,https://www.youtube.com/watch?v=BXC87MmimpQ,BXC87MmimpQ,Python Italia,@PythonItalia,https://www.youtube.com/@PythonItalia,20240630,1797,21,0,,"AWS,Architecture,GoogleCloud,Performance,Security",Entertainment,"Da 100 a 100M utenti: come scalare le tue architetture cloud!🚀 - Nicola Guglielmi - PyCon Italia 2024

Elevator Pitch:
La scalabilità è una  sfida fondamentale per le applicazioni cloud, in questo talk, vedremo come far evolvere un'architettura cloud  da 100 a 100M utenti globali.
Ad un design di base, andremo ad aggiungere differenti componenti cloud, che implementeranno funzionalità della nostra architettura.

Description:
La scalabilità è una delle sfide più importanti per le applicazioni cloud ed una delle motivazioni principali per migrare a questo paradigma.
Quando un'applicazione inizia a crescere, è necessario adottare design ed accorgimenti per garantire che possa continuare a funzionare in modo efficiente, sicuro ed affidabile.
Quando un'applicazione cresce oltre un livello nazionale, dovremo affrontare sfide su scala globale con un livello di complessità esponenziale.
Uno dei principali vantaggi del cloud è la possibilità di aggiungere risorse in modo elastico, ma questo è solo il primo step.
Esplorando in modo estesto le funzionalità presenti sui principali Cloud Provider (AWS, GCP) scopriremo come poter utilizzare tutta una serie di servizi gestiti, pronti all'uso, che aggiungeranno caratteristiche alla nostra infrastruttura, andando ad implementare di volta in volta uno specifico requisito, come ad esemprio la resizlienza, la sicurezza o supportare una modifica al modello di gestione del costo infrastrutturale.
Questo talk è il percorso di un'applicazione che da piccola POC diventa globale andando a far evolvere step by step il motore che la rende disponibile: la propria architettura.

Learn more: https://2024.pycon.it/event/da-100-a-100m-utenti-come-scalare-le-tue-architetture-cloud

#Security #Performance #Architecture #AWS #GoogleCloud",https://i.ytimg.com/vi/BXC87MmimpQ/maxresdefault.jpg,0,False,False,public,https://www.youtube.com/watch?v=BXC87MmimpQ,https://www.youtube.com/watch?v=BXC87MmimpQ
61,Oltre il Codice: Che Ruolo ha la Filosofia nella Programmazione? - Lorenzo Mele,https://www.youtube.com/watch?v=PhjojtfH7jc,PhjojtfH7jc,Python Italia,@PythonItalia,https://www.youtube.com/@PythonItalia,20240630,1934,45,4,,"BestPractice,Education,OpenSource,Science",Entertainment,"Oltre il Codice: Che Ruolo ha la Filosofia nella Programmazione? - Lorenzo Mele - PyCon Italia 2024

Elevator Pitch:
Dilemmi etici, processi di pensiero creativo e principi filosofici influenzano la programmazione. Metteremo in discussione le nostre convinzioni, capiremo l'arte e la scienza dietro il codice cercando di stimolare un dialogo sull'impatto significativo delle nostre decisioni.

Description:
Una riflessione stimolante sull'influenza della filosofia nel mondo della programmazione.
Spesso considerata una mera attività ingegneristica, la programmazione è in realtà un campo in continua evoluzione, dove si intersecano tecnica e pensiero critico.
In questa presentazione, esploreremo il percorso evolutivo della programmazione - imperativa, ad oggetti, funzionale - fino alle moderne frontiere con i Large Language Models (LLM) e l'Intelligenza Artificiale, dove il codice stesso sembra sfumare nell'ombra.

Affronteremo anche importanti questioni etiche: il significato e l'importanza dell'open source, ma anche l'usabilità e l'accessibilità del software. Queste riflessioni sono fondamentali per comprendere come le nostre scelte di programmazione influenzino direttamente l'esperienza dell'utente finale (e il mondo?).

Questo talk è pensato per essere accessibile a tutti: dal neofita appassionato di tecnologia al programmatore senior in cerca di nuove ispirazioni.
L'obiettivo è offrire una prospettiva fresca e approfondita su come la filosofia e la programmazione si intrecciano, portando a una comprensione più ricca di quello che facciamo. È un invito a esplorare non solo come scriviamo il codice, ma perché lo scriviamo in un certo modo.

Learn more: https://2024.pycon.it/event/oltre-il-codice-che-ruolo-ha-la-filosofia-nella-programmazione

#OpenSource #Education #BestPractice #Science",https://i.ytimg.com/vi/PhjojtfH7jc/maxresdefault.jpg,0,False,False,public,https://www.youtube.com/watch?v=PhjojtfH7jc,https://www.youtube.com/watch?v=PhjojtfH7jc
62,I have no clue what my model is doing... - Pietro Mascolo,https://www.youtube.com/watch?v=UBdCad0dT0M,UBdCad0dT0M,Python Italia,@PythonItalia,https://www.youtube.com/@PythonItalia,20240630,1610,23,0,,"MachineLearning,Pandas,Science",Entertainment,"I have no clue what my model is doing... - Pietro Mascolo - PyCon Italia 2024

Elevator Pitch:
Working in Data Science is already not simple when we are in controlled conditions with a fixed training and test dataset, but how can we cope with the real world? What if we have no control over the training data? What if there is no defined test set? What if we do not have ground truth? What if...

Description:
In this talk we will explore complex real world situations in which a model may be deployed. We will examine some common real world scenarios that make Data Science considerably more complex than the training/test split we often encounter in tutorials; we will analyse Python libraries and techniques that will allow us to estimate how the model is performing in the real world, when we may not have true labels, or when only a subset of errors are found, or when the problem is ill defined and we need to implement an approximate solution.

Learn more: https://2024.pycon.it/event/i-have-no-clue-what-my-model-is-doing

#Pandas #MachineLearning #Science",https://i.ytimg.com/vi/UBdCad0dT0M/maxresdefault.jpg,0,False,False,public,https://www.youtube.com/watch?v=UBdCad0dT0M,https://www.youtube.com/watch?v=UBdCad0dT0M
63,Many ways to be a Python contributor - Paolo Melchiorre,https://www.youtube.com/watch?v=9wnRvGqHVq8,9wnRvGqHVq8,Python Italia,@PythonItalia,https://www.youtube.com/@PythonItalia,20240630,1650,67,1,,"BestPractice,Community",Entertainment,"Many ways to be a Python contributor - Paolo Melchiorre - PyCon Italia 2024

Elevator Pitch:
There are many ways to contribute to Python, and in this talk, newcomers to the community will discover new ways to get involved in the Python community, and community members will get ideas for getting new people involved.

Description:
**Python** is an increasingly used language and the number of potential contributors is growing more and more.

**Newcomers** to the community have a lot of documentation to guide them to transform from mere users to contributors.

There are actually many ways to **contribute** to Python or one of its packages or frameworks, and we will try to see some of them together.

In this talk, new Python developers will discover new ways to get involved in the community, and **community members** will get ideas for getting new people involved.

Learn more: https://2024.pycon.it/event/many-ways-to-be-a-python-contributor

#Community #BestPractice",https://i.ytimg.com/vi/9wnRvGqHVq8/maxresdefault.jpg,0,False,False,public,https://www.youtube.com/watch?v=9wnRvGqHVq8,https://www.youtube.com/watch?v=9wnRvGqHVq8
64,🤑 Paying Off Technical Debt in the Development of Machine Learning Apps - William Arias,https://www.youtube.com/watch?v=EZ2Ruf2aE6s,EZ2Ruf2aE6s,Python Italia,@PythonItalia,https://www.youtube.com/@PythonItalia,20240630,1875,54,5,,"CaseStudy,DevOps,NaturalLanguageProcessing",Entertainment,"🤑 Paying Off Technical Debt in the Development of Machine Learning Apps - William Arias - PyCon Italia 2024

Elevator Pitch:
The MLOps ecosystem is saturated of point-to-point solutions that solve one specific problem. Creating software with ML is becoming increasingly and unnecessarily complex. This talk will show you how you can start building ML Apps keeping it simple

Description:
Creating software with ML is becoming increasingly and unnecessarily complex. The amount of tools, frameworks,  infrastructure, models and expertise can be overwhelming. This talk will show you how you can start building ML Apps keeping it simple, using DevOps principles that can help you transition and mature your MLOps strategy. We will list a bill of material and showcase an orchestrated pipeline to get data, transform it, allocate GPU infrastructure, train a model while enabling collaboration and deploying an application with ML Backend. This talk will close with a case-study of the Data science team at GitLab where the data science pipeline has been partially automated using DevOps

Learn more: https://2024.pycon.it/event/paying-off-technical-debt-in-the-development-of-machine-learning-apps

#CaseStudy #NaturalLanguageProcessing #DevOps",https://i.ytimg.com/vi/EZ2Ruf2aE6s/maxresdefault.jpg,0,False,False,public,https://www.youtube.com/watch?v=EZ2Ruf2aE6s,https://www.youtube.com/watch?v=EZ2Ruf2aE6s
65,Abstract tricks: how abstract base classes can help you to solve difficult challenges.,https://www.youtube.com/watch?v=1CIfGY45VfU,1CIfGY45VfU,Python Italia,@PythonItalia,https://www.youtube.com/@PythonItalia,20240630,1789,37,0,,"DataStructures,Performance",Entertainment,"Abstract tricks: how abstract base classes can help you to solve difficult challenges. - Davide Brunato - PyCon Italia 2024

Elevator Pitch:
Abstract Base Classes can be very useful for encapsulating code solutions for tricky problems in standard behaving objects. In this talk I will show the situations in which abstract base classes helped me to resolve some apparently unrealistic challenges.

Description:
Sometimes it happens, when you have to add a feature to your package, to facing difficult challenges. Often in these cases apparently the choice seems to be restricted between having an inefficient implementation or an enhancement of a base library. This can be true particularly in Python, which has many optimized modules implemented in C, but sometimes these modules are not fully compliant or efficient for what you have to develop.

Here comes to help you the abstract base classes, that can be used to create simple handling objects that wrap a not trivial implementation. In this talk I'll show some concrete cases of apparently difficult to solve limitations that were solved with the usage of Abstract Base Classes and their advantages over completely custom implementations.

The Abstract Base Classes have the option of register virtual subclasses  and this can be very useful when you have to implement a hierarchy of types without reinventing the wheel and reusing a mix of custom types and built-in datatypes.

Learn more: https://2024.pycon.it/event/abstract-tricks-how-abstract-base-classes-can-help-you-to-solve-difficult-challenges

#Performance #DataStructures",https://i.ytimg.com/vi/1CIfGY45VfU/maxresdefault.jpg,0,False,False,public,https://www.youtube.com/watch?v=1CIfGY45VfU,https://www.youtube.com/watch?v=1CIfGY45VfU
66,Optimising your Database for Analytics - Karen Jex,https://www.youtube.com/watch?v=2i3AiNt1UpI,2i3AiNt1UpI,Python Italia,@PythonItalia,https://www.youtube.com/@PythonItalia,20240630,1796,258,8,,"Analytics,Databases,PostgreSQL",Entertainment,"Optimising your Database for Analytics - Karen Jex - PyCon Italia 2024

Elevator Pitch:
Data analytics can be used to glean all sorts of business insights from your historic application data. We'll look at some different techniques to make sure your database and code are optimised for analytics without slowing down your application.

Description:
Your applications are probably constantly generating data, and this application data will gradually build up in your database. This historic application data is hugely valuable, and you can use data analytics to glean all sorts of business insights from it. 

However, if your database and code are optimised for your day-to-day application (OLTP) activity, they might not be optimised for analytics (OLAP). You'll typically be running more complex queries, joining data from multiple tables, and working on large data sets. 

How can you do this efficiently and make sure you don't slow down your application? Let's have a look at some of the tips and tricks you can use, from tweaking configuration parameters to implementing materialized views.

Learn more: https://2024.pycon.it/event/optimising-your-database-for-analytics

#Analytics #PostgreSQL #Databases",https://i.ytimg.com/vi/2i3AiNt1UpI/maxresdefault.jpg,0,False,False,public,https://www.youtube.com/watch?v=2i3AiNt1UpI,https://www.youtube.com/watch?v=2i3AiNt1UpI
67,"Logfire - Uncomplicated Observability - Marcelo Trylesinski, Adrian Garcia Badaracco",https://www.youtube.com/watch?v=on5RKukQzIg,on5RKukQzIg,Python Italia,@PythonItalia,https://www.youtube.com/@PythonItalia,20240630,1680,734,16,1.0,"Debugging,Performance",Entertainment,"Logfire - Uncomplicated Observability - Marcelo Trylesinski, Adrian Garcia Badaracco - PyCon Italia 2024

Elevator Pitch:
From the team behind Pydantic, Logfire is a new type of observability platform built on the same belief as our open source library — that the most powerful tools can be easy to use.

Description:
Born from the minds behind Pydantic, Logfire represents a groundbreaking leap in the realm of observability platforms. Rooted in the fundamental principle that powerful tools should also be user-friendly, Logfire emerges as a beacon of simplicity and efficacy in an increasingly complex landscape.

In this presentation, we unveil the essence of Logfire and unveil its capabilities. From seamless integration to effortless navigation, Logfire offers a holistic solution to the intricate demands of observability. Drawing inspiration from our open-source library, we have crafted Logfire to embody the spirit of accessibility without compromising on sophistication.

Learn more: https://2024.pycon.it/event/logfire-uncomplicated-observability

#Performance #Debugging",https://i.ytimg.com/vi/on5RKukQzIg/maxresdefault.jpg,0,False,False,public,https://www.youtube.com/watch?v=on5RKukQzIg,https://www.youtube.com/watch?v=on5RKukQzIg
68,How you can write a dataframe-agnostic library - Marco Gorelli,https://www.youtube.com/watch?v=3IqUli9XsmQ,3IqUli9XsmQ,Python Italia,@PythonItalia,https://www.youtube.com/@PythonItalia,20240630,2067,220,11,,"APIs,Abstractions,Pandas",Entertainment,"How you can write a dataframe-agnostic library - Marco Gorelli - PyCon Italia 2024

Elevator Pitch:
If you're writing a library which consumes dataframes, should you choose to support pandas, Polars, cuDF, modin, vaex, pyspark, dask, or something else?

Don't choose - learn how the DataFrame Interchange Protocol and/or Narwhals enable you support them all!

Description:
In 2023, we saw several libraries - which had previously only supported pandas - add support for other dataframe libraries such as Polars, Modin, and cuDF. They typically did this by keeping their existing code, and converting non-pandas inputs to pandas. They've usually been smart about only converting the parts of the dataframe which they need, but nonetheless, this approach has limitations.

Downsides of the ""just convert to pandas"" approach are:
- it requires users who otherwise weren't using pandas to have an extra, non-lightweight dependency
- transferring data between GPU and CPU can be expensive
- the pandas API is very flexible, and sometimes overly so, meaning that anyone developing on top of it may end up with code less robust than would be ideal

This talk will introduce you to the DataFrame Interchange Protocol and to Narwhals, which allow library developers to:
- support multiple dataframe libraries with just a single API
- minimise, or even eliminate, conversion costs
- use a strict, minimal API for maximal robustness

The format will roughly be:

- 2-3 mins: an overview of the dataframe landscape
- 2-3 mins: what happened in 2023, which libraries started supporting Polars instead of just pandas
- 5 mins: what are the limitations of just converting to pandas?
- 5 mins: what's the Dataframe Interchange Protocol?
- 7-8 mins: how can you use Narwhals to support multiple dataframes? How can get Narwhals to support your dataframe library?
- 2-3 mins: what comes next
- Q&A / awkward silence

By the end of the talk, attendees will have learned about the dataframe ecosystem, and those involved with dataframe-consuming libraries will know all they need in order to effectively support multiple dataframe libraries.
Library maintainers and contributors will get the most out of the talk, but anyone regularly using dataframes will also learn a lot about the tools they use.

Learn more: https://2024.pycon.it/event/how-you-can-write-a-dataframe-agnostic-library

#Pandas #APIs #Abstractions",https://i.ytimg.com/vi/3IqUli9XsmQ/maxresdefault.jpg,0,False,False,public,https://www.youtube.com/watch?v=3IqUli9XsmQ,https://www.youtube.com/watch?v=3IqUli9XsmQ
69,Large Language Models for Devs: from zero to your first LLM application - Stefano Fiorucci,https://www.youtube.com/watch?v=R_C0IJmAHrQ,R_C0IJmAHrQ,Python Italia,@PythonItalia,https://www.youtube.com/@PythonItalia,20240630,2589,103,1,,"DeepLearning,MachineLearning,NaturalLanguageProcessing,OpenSource",Entertainment,"Large Language Models for Devs: from zero to your first LLM application - Stefano Fiorucci - PyCon Italia 2024

Elevator Pitch:
LLMs are an exciting and complex technology.
Cut through the hype and learn how to build with them in this talk!

Join me for an exploration using Python open-source tools.
The examples will cover using different models, prompting, vector databases, RAG, and more.

Description:
The rise of ChatGPT and Large Language Models has revolutionized the tech landscape, leaving developers overwhelmed by the infinite opportunities and intrigued by the technical challenges posed by their complex nature.

This session provides a developer-centric introduction to LLMs, focused on practical applications.
No pre-existing knowledge of LLMs and NLP is required.

You will gain insights into:
- using closed and open-source models
- how to effectively prompt LLMs
- vector databases
- implementing Retrieval Augmented Generation applications (answer generation based on your data)
- building more complex applications

Through a hands-on approach, I will show code examples using open-source tools: Haystack LLM framework, Hugging Face Transformers, Ollama and more.

Learn more: https://2024.pycon.it/event/large-language-models-for-devs-from-zero-to-your-first-llm-application

#MachineLearning #OpenSource #DeepLearning #NaturalLanguageProcessing",https://i.ytimg.com/vi/R_C0IJmAHrQ/maxresdefault.jpg,0,False,False,public,https://www.youtube.com/watch?v=R_C0IJmAHrQ,https://www.youtube.com/watch?v=R_C0IJmAHrQ
70,Django 5.0: Elevating Experiences with Server-Sent Events – A Journey from Polling to Real-Time Vibe,https://www.youtube.com/watch?v=v-V3ze-k6Co,v-V3ze-k6Co,Python Italia,@PythonItalia,https://www.youtube.com/@PythonItalia,20240630,1537,800,21,1.0,"AsyncIO,DeploymentContinuousIntegration,Django",Entertainment,"Django 5.0: Elevating Experiences with Server-Sent Events – A Journey from Polling to Real-Time Vibe - Melhin Ahammad - PyCon Italia 2024

Elevator Pitch:
Navigate the transition from traditional polling to real-time functionality with Django SSE in version 5.0. This presentation reveals the seamless integration of real-time features, maintaining the structural integrity of applications. We'll leverage async Django's features.

Description:
Embarking on our exploration, we'll first examine the traditional polling system, unraveling its structure and limitations. Moving forward, we'll delve into the intricacies of structuring an asynchronous Django application that seamlessly complements its synchronous counterpart. Our journey encompasses a concise overview of Server-Sent Events (SSE) and their implementation within the Django framework.

Engaging in discussions, we'll tackle authentication and strategies for handling client disconnections, ensuring a comprehensive understanding of real-time communication in the Django ecosystem.

The session emphasizes a server-side approach, utilizing elementary JavaScript and htmx to augment real-time interactivity. Our aim is to showcase how you can offer real-time solutions without the need to rewrite your applications, leveraging the existing work you've already invested in your apps. Additionally, we'll explore Django Channels, appreciating some of the concepts implemented there to avoid reinventing the wheel and to import relevant ideas.

Furthermore, we'll discuss deployment options and how to seamlessly pair them with a synchronous app.

Moreover, the concepts discussed can be easily adapted to other frameworks, extending the session's applicability and insights beyond the Django ecosystem.

Additionally, we'll delve into load testing for our application, covering the how-to, key parameters, potential pitfalls, and the assumptions guiding our process.

As a bonus, witness a real-time Mastodon firehose-based system demonstration, adding an exciting layer to our exploration.

Learn more: https://2024.pycon.it/event/django-50-elevating-experiences-with-server-sent-events-a-journey-from-polling-to-real-time-vibe

#AsyncIO #Django #DeploymentContinuousIntegration",https://i.ytimg.com/vi/v-V3ze-k6Co/maxresdefault.jpg,0,False,False,public,https://www.youtube.com/watch?v=v-V3ze-k6Co,https://www.youtube.com/watch?v=v-V3ze-k6Co
71,Documenting Python Code - Christian Heitzmann,https://www.youtube.com/watch?v=22xALcyoo4A,22xALcyoo4A,Python Italia,@PythonItalia,https://www.youtube.com/@PythonItalia,20240630,2381,216,5,,"CleanCode,Documentation",Entertainment,"Documenting Python Code - Christian Heitzmann - PyCon Italia 2024

Elevator Pitch:
Unlock the power of well-documented code! Join me for a quick dive into Python documentation essentials—learn about Docstrings, Sphinx, reStructuredText, and embracing a docs-as-code approach with different markup languages. Keep your code usable and maintainable. Let’s document smarter, not harder!

Description:
Yes, folks, software documentation is important! So far, you’ve benefited from well-documented Python libraries, so it’s only natural to document your own code in order to keep your software usable and maintainable.

However, the first step is often the most difficult. Therefore, this talk will provide an introduction to documenting Python code effectively. You will learn about the basic concepts of Docstrings, the Sphinx documentation generator, and the standard lightweight markup language reStructuredText. You will also learn about the benefits of a docs-as-code approach in general, and find an answer to the question of whether Python can also be documented using other markup languages.

Learn more: https://2024.pycon.it/event/documenting-python-code

#Documentation #CleanCode",https://i.ytimg.com/vi/22xALcyoo4A/maxresdefault.jpg,0,False,False,public,https://www.youtube.com/watch?v=22xALcyoo4A,https://www.youtube.com/watch?v=22xALcyoo4A
72,Descriptors made easy - Rodrigo Girão Serrão,https://www.youtube.com/watch?v=YK6jgXJgFw4,YK6jgXJgFw4,Python Italia,@PythonItalia,https://www.youtube.com/@PythonItalia,20240630,2712,83,5,,Abstractions,Entertainment,"Descriptors made easy - Rodrigo Girão Serrão - PyCon Italia 2024

Elevator Pitch:
Descriptors used to confuse the heck out of time...

But then, one day, it clicked! 💡

As soon as they clicked, I started preparing this talk so that descriptors can also click for you!

And that's what I'll do: I'll make sure you understand descriptors for good.

Description:
Descriptors are one of those things that many don't even bother to learn because they look confusing.

Thankfully for you, I cracked the code and I can assure you they're not confusing!

In this talk I will provide an example that shows how descriptors work and that will also motivate why they are useful and needed.

By the time we are done, you will be able to implement descriptors in your code and use them for practical purposes.


## Outline

The talk will follow roughly these bullet points:

 - introduction
 - `@property` and getter methods
 - the dunder method `__get__`
 - a descriptor example
 - identify a similarity between `@property` and `__get__`
 - `@property.setter` and setter methods
 - the dunder method `__set__`
 - another descriptor example
 - how to create general descriptors & the dunder method `__set_name__`
 - explain why `@property` and descriptors look so similar
 - give examples of situations where descriptors are needed
 - if time permits, talk about some built-in descriptors

Learn more: https://2024.pycon.it/event/descriptors-made-easy

#Abstractions",https://i.ytimg.com/vi/YK6jgXJgFw4/maxresdefault.jpg,0,False,False,public,https://www.youtube.com/watch?v=YK6jgXJgFw4,https://www.youtube.com/watch?v=YK6jgXJgFw4
73,"Sit back, relax, and enjoy the talk: a journey through FlightRadar24 with Python - Fabio Lamanna",https://www.youtube.com/watch?v=Lo1Z3jwQykg,Lo1Z3jwQykg,Python Italia,@PythonItalia,https://www.youtube.com/@PythonItalia,20240630,1062,110,2,,"APIs,Analytics,DataStructures,JupyteriPythonNotebook,Pandas",Entertainment,"Sit back, relax, and enjoy the talk: a journey through FlightRadar24 with Python - Fabio Lamanna - PyCon Italia 2024

Elevator Pitch:
This is a funny and old-style talk, where we explore our skies with the help of FlightRadar24, probably the most famous web-based flight tracking platform. We use pure Python, notebooks and FlightRadarAPI SDK to scrape data and visualize aircrafts information (even in real time). Enjoy!

Description:
In recent years, FlightRadar24.com has gained popularity among both airline professionals and aviation enthusiasts. FlightRadar24 is a flight tracking platform that can capture, read, and analyze signals from various data sources, including transponders, satellite data, and radar. This allows users to track flights in real-time on maps and save historical data. Recently, FlightRadar24 has also supplied data related to altitude, speed, and trajectories to authorities, aiding in the investigation of the causes and dynamics of accidents or aircraft failures.

For non-commercial use, you can scrape data directly from the website using Python. In this talk, we will use the unofficial FlightRadar24API SDK to explore real-time data from the skies above PyCon or track our favorite flights, aircrafts, or airlines. You'll find that the data structures are relatively simple (mostly dictionaries and .json files) and navigating through the information is particularly easy and enjoyable.

So, sit back, relax and enjoy this journey over the skies with Python!

Learn more: https://2024.pycon.it/event/sit-back-relax-and-enjoy-the-talk-a-journey-through-flightradar24-with-python

#Analytics #Pandas #APIs #JupyteriPythonNotebook #DataStructures",https://i.ytimg.com/vi/Lo1Z3jwQykg/maxresdefault.jpg,0,False,False,public,https://www.youtube.com/watch?v=Lo1Z3jwQykg,https://www.youtube.com/watch?v=Lo1Z3jwQykg
74,Pythonic type hints with typing.Protocol - Luciano Ramalho,https://www.youtube.com/watch?v=mZqNEWaFItg,mZqNEWaFItg,Python Italia,@PythonItalia,https://www.youtube.com/@PythonItalia,20240630,2819,340,19,,"BestPractice,TypeHinting",Entertainment,"Pythonic type hints with typing.Protocol - Luciano Ramalho - PyCon Italia 2024

Elevator Pitch:
Duck typing is essential to idiomatic Python, but the first iterations of type hints did not support it. Eventually the typists gave us `typing.Protocol`. Using it is key to write well annotated Pythonic code.

Description:
Many Pythonistas, this author included, reacted in shock and disbelief to the introduction of type hints in Python 3.5. We knew that duck typing was essential to idiomatic Python, but type hints did not support it until Python 3.8, with *PEP 544 – Protocols: Structural subtyping (static duck typing)* and the `typing.Protocol` special class.

Static duck typing, first popularized in the Go programming language, allows programmers to leverage the essential idea that ""if it quacks like a duck then it is a duck"", when quacking behavior is required. In other words, it does not matter whether a class has the proper ""ancestry"" or DNA, as long as it implements the interface to play a role. With interfaces defined as `typing.Protocol`, the type checker can verify that an object's class implements the required methods.

Learn more: https://2024.pycon.it/event/pythonic-type-hints-with-typingprotocol

#BestPractice #TypeHinting",https://i.ytimg.com/vi/mZqNEWaFItg/maxresdefault.jpg,0,False,False,public,https://www.youtube.com/watch?v=mZqNEWaFItg,https://www.youtube.com/watch?v=mZqNEWaFItg
75,Speeding up Whisper for speech recognition by 10x - Optimisations and walkthrough,https://www.youtube.com/watch?v=Bkp6ogyhZ-E,Bkp6ogyhZ-E,Python Italia,@PythonItalia,https://www.youtube.com/@PythonItalia,20240630,2597,544,13,2.0,"DeepLearning,MachineLearning",Entertainment,"Speeding up Whisper for speech recognition by 10x - Optimisations and walkthrough - Vaibhav Srivastav - PyCon Italia 2024

Elevator Pitch:
Late last year, we sped up Whisper (https://github.com/Vaibhavs10/insanely-fast-whisper) by 10x. It involved a lot of hacking (like flash attention, batching, torch.compile, etc) and tricks that can be implemented in other models, too. Join me as I walk through those optimisations and tricks.

Description:
In this talk, we'll brush upon optimisations that can help you speed up your PyTorch models. We'll primarily look at the following optimisations:

1. Flash Attention - faster attention (1 & 2)
2. Torch.compile()
3. Chunking/ batching your inputs
4. Torchaudio pre-processing
5. half-precison inference

By the end of this talk you'd have learnt more about how to make your existing LLMs/ PyTorch models faster and better.

Learn more: https://2024.pycon.it/event/speeding-up-whisper-for-speech-recognition-by-10x-optimisations-and-walkthrough

#MachineLearning #DeepLearning",https://i.ytimg.com/vi/Bkp6ogyhZ-E/maxresdefault.jpg,0,False,False,public,https://www.youtube.com/watch?v=Bkp6ogyhZ-E,https://www.youtube.com/watch?v=Bkp6ogyhZ-E
76,Building a self-service kubernetes platform for python developers - Fagani Hajizada,https://www.youtube.com/watch?v=Z57UzSQfXis,Z57UzSQfXis,Python Italia,@PythonItalia,https://www.youtube.com/@PythonItalia,20240630,2217,278,16,1.0,"DeploymentContinuousIntegration,DevOps,Infrastructure",Entertainment,"Building a self-service kubernetes platform for python developers - Fagani Hajizada - PyCon Italia 2024

Elevator Pitch:
You are a Python developer and have seen great people trying to develop solutions to enable you to ship your code securely and easily. But still, you feel like another layer of complexity is added daily. Let's discuss how platform engineering teams can solve this with a self-service approach.

Description:
You are a Python developer and have seen great people trying to develop solutions to enable you to ship your code securely and easily. But still, you feel like another layer of complexity is added daily. Despite the commendable efforts to streamline code deployment, the complexity escalates continually. Let's discuss how platform engineering teams can solve this with a self-service approach. We'll delve into the intricacies developers face daily, examining how abstracting technical details and exposing only crucial decision points can mitigate complexity.

Our discussion begins by dissecting the specific challenges faced by Python developers in the current landscape, acknowledging the commendable efforts made to simplify code deployment. I will talk about the concept of a self-service Kubernetes platform—an approach that abstracts technical complexities, leaving developers with only the decisions essential to their craft.

We'll explore the key components of this self-service platform and provide actionable insights into its practical implementation. Through real-world examples and success stories, we'll demonstrate how this approach not only benefits Python developers by enhancing security and ease of deployment but also positively impacts platform engineering teams.

Learn more: https://2024.pycon.it/event/building-a-self-service-kubernetes-platform-for-python-developers

#Infrastructure #DevOps #DeploymentContinuousIntegration",https://i.ytimg.com/vi/Z57UzSQfXis/maxresdefault.jpg,0,False,False,public,https://www.youtube.com/watch?v=Z57UzSQfXis,https://www.youtube.com/watch?v=Z57UzSQfXis
77,Pythonic deployment of (Python) applications - Peter Bittner,https://www.youtube.com/watch?v=aa2Cs8PWzdM,aa2Cs8PWzdM,Python Italia,@PythonItalia,https://www.youtube.com/@PythonItalia,20240630,2524,75,1,,DeploymentContinuousIntegration,Entertainment,"Pythonic deployment of (Python) applications - Peter Bittner - PyCon Italia 2024

Elevator Pitch:
If you do Kubernetes your deployment is a lot of YAML code, isn't it? And of course you can't unit test it.—It's all YAML.

What if you could do everything in Python? What if you could ""associate"" workloads, using Python code?

Come and learn about Juju and Charmed operators. You'll love it!

Description:
How do you deploy your Python (Web) application? If your setup is container-based you're likely using Kubernetes. Is it fun? No. It's complex. It's a lot of YAML. Maybe it's okay-ish - if your setup is not too complex -, but it could be better. Less complex, more lightweight. And then again, how does your test suite look like for the deployment process? You don't have any? Sure, it's all YAML. Yak!

What if you could do everything in Python? What if you could ""associate"" workloads, e.g. a database, with your application in the cloud, using Python code? What if you could write tests with Pytest to ensure your *deployment* continues to work? Does that sound too good to be true?

Canonical has been developing this technology for years. It is proven and solid, yet still exciting to use! Let's dive into what could be the best you have seen in the last decade for deploying your Python Web application. Say hello to Python and test-driven deployments, ditch YAML and say yes to stability! See a live demo and take home working code to experiment with your own setup.

Learn more: https://2024.pycon.it/event/pythonic-deployment-of-python-applications

#DeploymentContinuousIntegration",https://i.ytimg.com/vi/aa2Cs8PWzdM/maxresdefault.jpg,0,False,False,public,https://www.youtube.com/watch?v=aa2Cs8PWzdM,https://www.youtube.com/watch?v=aa2Cs8PWzdM
78,Ten Years of Community Organizer - Alexander Hendorf,https://www.youtube.com/watch?v=0D-x8eJYHRM,0D-x8eJYHRM,Python Italia,@PythonItalia,https://www.youtube.com/@PythonItalia,20240630,2794,19,1,,Community,Entertainment,"Ten Years of Community Organizer - Alexander Hendorf - PyCon Italia 2024

Elevator Pitch:
A joyful journey through a decade in the 🐍 Python community! In this talk, I'll share my experiences of 10 years community events. We'll explore the magic of organizing, the art of leadership, and the impact of Python on personal and professional growth. Let's learn, laugh, and lead together! 🤗🚀

Description:
As a community organizer, I have had the privilege of being a part of the Python community for the past ten years.
In that time, I have seen the community grow and evolve in countless ways. Python evolved from a top 10 language to the top 1 language. Many new people joined the community, new topics as data & AI became part of Python. I'm super proud the preferred language to learn is Python nowadays.

I have also learned a great deal about what it takes to be an effective organizer and how to build and sustain a healthy community. I also experience how not to do it and pulling through in hard times.
I learned a lot about leadership. I learned a lot about myself, my strength and my weaknesses.This helped me also to grow professionally and had a very positive impact on how I work and lead in my day-job.

In this talk I will address:

**Experiences** made organising community conferences small and large.

**Leadership**: sharing insights when teams worked well or not. What are the ingredients for a good community team.

**Ideas, motivation and complexity**: All are driving factors for building enjoyable community conferences. Is more always better? When to say YES or sorry, but no.

How to **deal with the boring stuff**, admin, tax and legal.

**Outlook**: What the European Python Community should work on for a sustainable future. The community has grown - individuals lack time. We need a strategy to keep up our excellent community work for beginners and experts while facing structural obstacles as admin, processes, reinventing the wheel. In this part I want to present why I did join the EuroPython board again. Helping to make the future mission of EuroPython Society evolving into more than being a conference to a European umbrella for the community.

My community service ""CV"":
* 2013 local MongoDBB meetup
* 2014 joined EuroPython
* 2015-2020 core EuroPython organizer, 2 years board member
* 2017 -2018 PyCon DE organizer
*  2018 - today EuroSciPy organizer
* 2018 - today PyData Südwest meetup organizer
* 2019-2022 PyCon DE & PyData Berlin chair
* 2019 - today Python Software Verband chair (German Python association)
* 2023 PyCon DE & PyData Berlin organizer
* 2023 EuroPython board member

In this talk I will share the most valuable lessons I have learned and best practices over the past decade, with the goal of helping others who are interested in organizing and contributing to the Python community.

### The first section
 will focus on the importance of community organizing in the Python community. I will discuss the role that organizers play in building and sustaining a healthy community, and the benefits that organizers and community members alike can reap from effective organizing.

* Definition of how Python conf work 
* Outside references
* Amazing magic
* What do organizers actually do?
* What is needed to be done
* Organizers are dedicated
* Organizations that provide platforms for Orga/conf - NumFocus and Pioneers Hub

### The second section 
will explore the challenges and opportunities of organizing in the Python community. I will discuss some of the unique challenges that organizers face in the Python community, such as the diversity of the ecosystem and the rapid pace of change, and the opportunities that organizers have to make a real impact and create lasting change.
* Decentral
* Workload
* Admin
* Processes
* Pop up company style
* Too many ideas
* Managing ppl
* Project management
* Very agile

### The third section 
will focus on the specific skills and practices that are necessary for effective organizing in the Python community. I will cover topics such as building and leading teams, community engagement, and creating and executing on a strategic plan.
* Ppl skills 
* You can learn you just need to learn to listen to criticism 
* Community is helpful but not necessarily reliable long term, it‘s voluntary 
* Many levels of contribution
* Documentation and briefings structure

### The final section 
will look to the future, and discuss some of the directions that the Python community can take in the next ten years in terms of organizing. I will suggest some specific areas of focus, such as increasing diversity and inclusivity, and highlight some of the emerging trends and technologies that organizers should be aware of.

* Professionalizing 
* Governance 
* Platforms for organizers 
* Chaos and non cordination drives ppl out
* Staff/Setup not worthwhile for individual conferences 

Learn more: https://2024.pycon.it/event/ten-years-of-community-organizer

#Community",https://i.ytimg.com/vi/0D-x8eJYHRM/maxresdefault.jpg,0,False,False,public,https://www.youtube.com/watch?v=0D-x8eJYHRM,https://www.youtube.com/watch?v=0D-x8eJYHRM
79,Quit Simplifying! - Florian Haas,https://www.youtube.com/watch?v=KlE-VyUYLts,KlE-VyUYLts,Python Italia,@PythonItalia,https://www.youtube.com/@PythonItalia,20240630,2564,108,4,,"Abstractions,Architecture,DevOps,DistributedSystems,Education",Entertainment,"Quit Simplifying! - Florian Haas - PyCon Italia 2024

Elevator Pitch:
In this talk, I explain the concepts of complexity and entropy, and how they derail the idea of simplification. I delve into why it is that people, even if they have pure intentions and a great desire to simplify, usually end up doing the opposite. And I give suggestions on what to do about that.

Description:
In my 20+ years of working with open source software, I have seen lots of things go from simple to advanced to complicated, to then be replaced by something ostensibly radically simpler — which itself then predictably landed on the exact same path of ever-increasing complexity.

I have seen this in three different projects up close, of all of which I have been a heavy user and occasional contributor: Ansible, OpenStack, and Open edX. It just so happens that all these are Python codebases but that does not reflect negatively on Python, and it does not reflect negatively on those projects, their founders, or their developers either: the growth in complexity in software projects is a given. It is not the problem. The problem is that we think we can avoid it.

Now that I am a manager, I see much the same patterns: organizations seek to simplify their architecture, their deployments, even their organizational structure ever further, only to end up with more complex, more complicated, more Byzantine solutions than they ever had before. Managers, who should make it their goal to curb and slow the growth of complexity in their part of the organization, are frequently complexity accelerators, making things needlessly more complicated for everyone.

And even top-level decision-makers, with their quest of distilling everything down to a small number of ""simple"" metrics on which they can base long-term planning, end up building edifices built on entropic quicksand.

In this talk I highlight the core issue of ever-increasing complexity in non-trivial systems, and the fact that is as inexorable as the passage of time. I identify the special kind of hubris (or well-meaning ignorance) it takes to assume you can wind the clock backwards. And I explain how every one of us can identify things acting as complexity multipliers and people acting as complexity accelerators, and what to do about them.

Learn more: https://2024.pycon.it/event/quit-simplifying

#Education #DistributedSystems #Architecture #Abstractions #DevOps",https://i.ytimg.com/vi/KlE-VyUYLts/maxresdefault.jpg,0,False,False,public,https://www.youtube.com/watch?v=KlE-VyUYLts,https://www.youtube.com/watch?v=KlE-VyUYLts
80,Sii il cambiamento che vuoi vedere nel mondo  - Mara Marzocchi,https://www.youtube.com/watch?v=Jfx2iqWroRw,Jfx2iqWroRw,Python Italia,@PythonItalia,https://www.youtube.com/@PythonItalia,20240630,2444,22,1,,"CaseStudy,Communication,Community,Diversity",Entertainment,"Sii il cambiamento che vuoi vedere nel mondo  - Mara Marzocchi - PyCon Italia 2024

Elevator Pitch:
Come faccio la differenza? Da dove parto? Chi coinvolgo? Ecco delle linee guida sempre valide, nate dall’esperienza di un gruppo di persone indipendenti, che nemmeno si conoscono fra loro, ma che hanno dato vita al Manifesto italiano per l'uguaglianza femminile nella tecnologia, ispirandosi a Gandhi

Description:
Questo talk parte dell’esperienza di questi ultimi 3 mesi in cui con un gruppo di 20 persone* che non conoscevo precedentemente, ho lavorato alla creazione del Manifesto italiano per l'uguaglianza delle ragazze e delle donne nella tecnologia. Il progetto non riguarda solo la stesura del testo del manifesto, ma anche le attività di comunicazione correlate e programmi per il futuro.  Da questa esperienza sono emerse delle linee guida che possono essere applicate a tutti coloro che vogliono provare ad avere un impatto nel Mondo…anzi non provare, ma riuscire, come dice il maestro Yoda. 

* ognuno rappresenta se stesso, senza organizzazioni o associazioni alla spalle

Learn more: https://2024.pycon.it/event/sii-il-cambiamento-che-vuoi-vedere-nel-mondo

#Community #Communication #CaseStudy #Diversity",https://i.ytimg.com/vi/Jfx2iqWroRw/maxresdefault.jpg,0,False,False,public,https://www.youtube.com/watch?v=Jfx2iqWroRw,https://www.youtube.com/watch?v=Jfx2iqWroRw
81,Adding zero-downtime migrations strategy in SaaS project - Iga Karbowiak,https://www.youtube.com/watch?v=ew4ynqErlOU,ew4ynqErlOU,Python Italia,@PythonItalia,https://www.youtube.com/@PythonItalia,20240630,1952,42,2,,"Databases,DeploymentContinuousIntegration,Django,OpenSource,PostgreSQL",Entertainment,"Adding zero-downtime migrations strategy in SaaS project - Iga Karbowiak - PyCon Italia 2024

Elevator Pitch:
When operating a web-based SaaS application, it is important to provide software updates without any downtime In this talk, I will demonstrate how to accomplish this by introducing a zero-downtime migration strategy 🐍

Description:
When running a web-based SaaS application, it is important to provide software updates without causing downtime for users. However, these updates often require changing the database schema with migrations. In this talk, we will discuss a solution that allows the software to remain life and able to handle incoming traffic while performing migrations.

To ensure zero downtime during this process, the old code must be compatible with the new database schema. Although this may seem easy, it often isn't. In this talk, we will cover problematic operations such as:

- renaming tables or columns,
- deleting tables or columns,
- adding new columns,
- updating all records in a table with a large amount of data.

We will discuss potential problems that may arise due to certain changes and provide corresponding solutions. Additionally, I will describe the challenges we encountered when introducing this approach to Saleor, an open-source e-commerce platform powered by Django.

While the topic and examples are from the Django project, the issue is general and can be faced by any database-related project.

The structure of the talk:

1. Background of the problem
2. Examples of operations causing the downtime
3. Introducing the zero-downtime strategy
    1. Writing migrations that follow a zero downtime approach
    2. Proceeding the software update without any downtime

Learn more: https://2024.pycon.it/event/adding-zero-downtime-migrations-strategy-in-saas-project

#Django #PostgreSQL #OpenSource #Databases #DeploymentContinuousIntegration",https://i.ytimg.com/vi/ew4ynqErlOU/maxresdefault.jpg,0,False,False,public,https://www.youtube.com/watch?v=ew4ynqErlOU,https://www.youtube.com/watch?v=ew4ynqErlOU
82,Deinventing the Wheel - Loris Cro,https://www.youtube.com/watch?v=HPmefnqirHk,HPmefnqirHk,Python Italia,@PythonItalia,https://www.youtube.com/@PythonItalia,20240630,2632,1236,41,1.0,"Packaging,Performance,PyPi,Tooling",Entertainment,"Deinventing the Wheel - Loris Cro - PyCon Italia 2024

Elevator Pitch:
The ability to include pre-built binaries into Python packages has been crucial for Python but now 75% of PyPi's 66TB total data is occupied by binary blobs. 

What would happen if we didn't have to bundle binaries into Python packages anymore?

Description:
When a Python package depends on non-python code (usually C/C++ libraries), it's customary to include in the package also pre-built binary blobs of those external dependencies. This is done for good reasons as it's the only way to ensure that clients won't have problems when installing the package. Or, at least, it *used* to be the only way.

Bundling binary blobs into packages also comes with some downsides, the biggest of which is that, of the current 66TB of package data stored in PyPI, 50TB (75%) is just binary blobs (see https://py-code.org/stats), which is only going to get worse as the rise of new architectures will mean that even more pre-built blobs will have to be bundled in each package.

In this talk I will explain why building C/C++ projects can be problematic and will show how those problems are solved by the Zig compiler toolchain. After that I will explain the exciting things that could be achieved once building C/C++ code stops being a problem, from helping PyPI free some space, to creating maximally efficient builds for the target machine.

By the end of the talk attendees should have gained some insight into how Python tooling interacts with C/C++ dependencies, have gained some sympathy for PyPI (running a package index is expensive!), and be inspired by the positive effects that advances in the systems programming space can bring to Python.

Learn more: https://2024.pycon.it/event/deinventing-the-wheel

#Tooling #Packaging #Performance #PyPi",https://i.ytimg.com/vi/HPmefnqirHk/maxresdefault.jpg,0,False,False,public,https://www.youtube.com/watch?v=HPmefnqirHk,https://www.youtube.com/watch?v=HPmefnqirHk
83,Mastering Cryptography in Python: Best Practices and Myth-Busting - Ruslan Kiyanchuk,https://www.youtube.com/watch?v=Qqs-hqfNJbo,Qqs-hqfNJbo,Python Italia,@PythonItalia,https://www.youtube.com/@PythonItalia,20240630,1707,181,9,,Cryptography,Entertainment,"Mastering Cryptography in Python: Best Practices and Myth-Busting - Ruslan Kiyanchuk - PyCon Italia 2024

Elevator Pitch:
From cryptographers, you often hear not to roll your own crypto, and numerous warnings about what you should not do with cryptography. Wouldn't it be awesome if instead we shifted the focus to what *you should* do?

Learn safe and correct ways of using essential cryptographic algorithms in Python.

Description:
In the realm of software engineering, the adage ""don't roll your own crypto"" echoes loudly, cautioning developers against haphazard implementations. However, what if we shifted the focus from what not to do to what you should do?

In this engaging talk, we will delve into the world of cryptography in Python, explore recommended packages, and unveil the safe and correct methods of using essential cryptographic algorithms. We'll go through various use cases for encrypting and signing data, ensuring you adopt best practices for robust security.

As we navigate this cryptographic journey, we'll debunk prevalent myths, including the illusion of ""military-grade encryption."" Discover why this term is more marketing than substance, and gain a more profound understanding of the cryptographic landscape.  Let's demystify cryptography together and empower you to wield its power responsibly.

Learn more: https://2024.pycon.it/event/mastering-cryptography-in-python-best-practices-and-myth-busting

#Cryptography",https://i.ytimg.com/vi/Qqs-hqfNJbo/maxresdefault.jpg,0,False,False,public,https://www.youtube.com/watch?v=Qqs-hqfNJbo,https://www.youtube.com/watch?v=Qqs-hqfNJbo
84,Next Generation Authorisation using Cedar - Ricardo Sueiras,https://www.youtube.com/watch?v=YVqF3ECew6A,YVqF3ECew6A,Python Italia,@PythonItalia,https://www.youtube.com/@PythonItalia,20240630,2694,322,9,,"Flask,OpenSource,Security",Entertainment,"Next Generation Authorisation using Cedar - Ricardo Sueiras - PyCon Italia 2024

Elevator Pitch:
In this session I am going to cover a new open source project called Cedar that helps you decouple your authorisation logic from your application code. This is a hands on, code session, and will help you see how you can build next generation authorization into your applications.

Description:
Authorization is one of the foundational needs when building your applications and services. Making sure you are able to correctly and reliably grant or deny  access to your application resources is critical. Yet this is still one of the hardest things we have to do as developers.

Cedar is a new and very interesting open source project, developed with automated reasoning and differential testing - which I will briefly discuss, as it is important to understand this in the context of trust.

Learn more: https://2024.pycon.it/event/next-generation-authorisation-using-cedar

#Flask #Security #OpenSource",https://i.ytimg.com/vi/YVqF3ECew6A/maxresdefault.jpg,0,False,False,public,https://www.youtube.com/watch?v=YVqF3ECew6A,https://www.youtube.com/watch?v=YVqF3ECew6A
85,Don’t get lost in Vector Space - Nicola Procopio,https://www.youtube.com/watch?v=q8HSbhSqVrQ,q8HSbhSqVrQ,Python Italia,@PythonItalia,https://www.youtube.com/@PythonItalia,20240630,2019,129,3,,"Algorithms,Databases,MachineLearning,NaturalLanguageProcessing",Entertainment,"Don’t get lost in Vector Space - Nicola Procopio - PyCon Italia 2024

Elevator Pitch:
I VectroDB sono la memoria delle moderne applicazioni basate su LLM. In questo talk verrà descritto come viene sfruttato Qdrant per gestire le memorie di Cheshire Cat, framework open source di A.I. per Retrieval-Augmented Generation e molto altro. Vieni a scoprire come non perderti nel Vector Space!

Description:
Ad oggi l'hype maggiore nel mondo della A.I. ce l'hanno sicuramente i LLM, ogni settimana c'è un modello che supera tutti nei benchmark e nascono nuovi framework ma per sfruttare al massimo la potenza di questi giganti non ci si può limitare alla loro conoscenza intrinseca, bisogna liberarli e per far ciò esiste la RAG. Al centro di questa rivoluzione ci sono in VectorDB che fanno da memoria alle applicazioni, mettendo a disposizione i ""ricordi"" (documenti, conversazioni, ...). All'interno di queste applicazioni il ruolo del VectorDB è quello di una enorme biblioteca, dove vengono immagazzinati vettori, in questo spazio il retriever fa da bibliotecario consigliando al LLM le risorse che con più probabilità lo aiuteranno a darci una risposta.

Cheshire Cat è una di queste applicazioni, è open source, italiana, e usa come VectorDB Qdrant, anch'esso open source, per gestire le sue memorie. Qdrant viene utilizzato per:

- gestire tre memorie differenti: una per le conversazioni, una per i documenti e una per i tools
- viene usato in deverse versioni in-memory Qdrant per il testing, file-based per lo sviluppo, container-based in produzione
- gestire la dimensione dello spazio vettoriale al cambio di embedder
-  just in time backups grazie agli snapshots

In questo talk verranno descritte le sfide che la gestione di un prodotto così complesso comporta quando si parla di VectorDB e di come sono state risolte anche grazie alle funzionalità messe a disposizione da Qdrant.

Non mancheranno anche alcune novità ad arricchire il talk visto che gli sviluppi sono in corso in questo momento, insomma saranno 30 minuti utilissimi per non perdersi nel Vector Space!

Learn more: https://2024.pycon.it/event/dont-get-lost-in-vector-space

#MachineLearning #Databases #NaturalLanguageProcessing #Algorithms",https://i.ytimg.com/vi/q8HSbhSqVrQ/maxresdefault.jpg,0,False,False,public,https://www.youtube.com/watch?v=q8HSbhSqVrQ,https://www.youtube.com/watch?v=q8HSbhSqVrQ
86,"The AI Revolution Will Not Be Monopolized: How open-source beats economies of scale, even for LLMs",https://www.youtube.com/watch?v=QGd5FJBvMLQ,QGd5FJBvMLQ,Python Italia,@PythonItalia,https://www.youtube.com/@PythonItalia,20240630,1861,30,0,,"BestPractice,DeepLearning,MachineLearning,NaturalLanguageProcessing,OpenSource",Entertainment,"The AI Revolution Will Not Be Monopolized: How open-source beats economies of scale, even for LLMs - Ines Montani - PyCon Italia 2024

Elevator Pitch:
With the latest advancements in NLP and LLMs, and big companies like OpenAI dominating the space, many people wonder: Are we heading further into a black box era with larger and larger models, obscured behind APIs controlled by big tech? I don’t think so, and in this talk, I’ll show you why.

Description:
With the latest advancements in Natural Language Processing and Large Language Models (LLMs), and big companies like OpenAI dominating the space, many people wonder: Are we heading further into a black box era with larger and larger models, obscured behind APIs controlled by big tech monopolies?

I don’t think so, and in this talk, I’ll show you why. I’ll dive deeper into the open-source model ecosystem, some common misconceptions about use cases for LLMs in industry, practical real-world examples and how basic principles of software development such as modularity, testability and flexibility still apply. LLMs are a great new tool in our toolkits, but the end goal remains to create a system that does what you want it to do. Explicit is still better than implicit, and composable building blocks still beat huge black boxes.

Learn more: https://2024.pycon.it/event/the-ai-revolution-will-not-be-monopolized-how-open-source-beats-economies-of-scale-even-for-llms

#MachineLearning #OpenSource #BestPractice #DeepLearning #NaturalLanguageProcessing",https://i.ytimg.com/vi/QGd5FJBvMLQ/maxresdefault.jpg,0,False,False,public,https://www.youtube.com/watch?v=QGd5FJBvMLQ,https://www.youtube.com/watch?v=QGd5FJBvMLQ
87,Dynamically generated methods with a non-generic signature - Adrin Jalali,https://www.youtube.com/watch?v=uggM2S-Dzd8,uggM2S-Dzd8,Python Italia,@PythonItalia,https://www.youtube.com/@PythonItalia,20240630,1832,38,2,,CPython,Entertainment,"Dynamically generated methods with a non-generic signature - Adrin Jalali - PyCon Italia 2024

Elevator Pitch:
This talk teaches you how to use some python black magic to add methods to child classes of a parent class, based on certain properties of the child class. Introspection, descriptors, and `__init_subclass__` are going to be our friends.

Description:
In other words, Descriptors + PEP-362 (function signature object) and a seasoning of PEP-487 (simpler customization of class creation via `__init_subclass__`).

There are different ways to have generated methods and attributes attached to all classes in a library, and this talk presents the way we’re doing it in scikit-learn. Here you’ll understand the use-case, and see the details and challenges presented by it, and how we approached them.

This talk uses tools in the Python language which seem like black magic at first to most, but understanding them gives you very strong tools you can use in your daily work to customize your objects the way you need.

The use-case we study here goes as: we would like to add methods to all `Estimator`s, which are all subclasses of the `BaseEstimator`. The signature of the methods generated depends on the signature of other methods existing in those subclasses, but we also want to give the option of modifying generated methods without having to change the existing methods.

The solution we present involves a few concepts which we’ll explain during the talk:
Investigate the existing methods’ signature using `inspect`
Manually traverse MRO (method resolution order) and inspect class attributes allowing for modifications on what the `inspect` has concluded
Use a descriptor to generate methods accordingly
Use PEP-362 to attach a signature object to the generated methods
Dynamically generate docstrings for those methods
Use PEP-487, aka `__init_subclass__`, to attach those methods to child classes when appropriate

This is a hands-on talk, explaining each concept in isolation and then showing how they fit 
together, and we’ll be presenting and testing code during the talk. You will be able to use any of the components used in this talk in your own work and fit them to what you’re doing.

Learn more: https://2024.pycon.it/event/dynamically-generated-methods-with-a-non-generic-signature

#CPython",https://i.ytimg.com/vi/uggM2S-Dzd8/maxresdefault.jpg,0,False,False,public,https://www.youtube.com/watch?v=uggM2S-Dzd8,https://www.youtube.com/watch?v=uggM2S-Dzd8
88,Typing at scale: statically type-checking a large codebase - Alan Franzoni,https://www.youtube.com/watch?v=LyjhiHi9c70,LyjhiHi9c70,Python Italia,@PythonItalia,https://www.youtube.com/@PythonItalia,20240630,1827,47,0,,"CaseStudy,Scaling,TypeHinting",Entertainment,"Typing at scale: statically type-checking a large codebase - Alan Franzoni - PyCon Italia 2024

Elevator Pitch:
Once upon a type in Pythonland, we would say:
If it looks like a duck, swims like a duck, and quacks like a duck, then it probably is a duck.""

Then the type-checking team started scoring multiple goals.
Is type-checking useful in Python? What about existing codebases? Recommendations and pitfalls


Description:
Once upon a type in Pythonland, we would say:
If it looks like a duck, swims like a duck, and quacks like a duck, then it probably is a duck.""

Then the type-checking team started scoring multiple goals.
Is type-checking useful in Python? What about existing codebases? Recommendations and pitfalls.

In this talk, we'll take a look at:
* why should you typecheck your code? what are the benefits and drawbacks?
* how can you do that without stopping development, but without chasing an ever-changing target?
* what are the pitfalls from type checking - can it provide a false sense of security?
* How to interact with third party libraries?
* Is static type-checking enough, or do we need to runtime check as well?
* Is the type checker always right?

This is a case study about how it was done (and is still being done) on a real, large production codebase at Aiven. This is not a theoretical talk - I'll try explaining what are the major pitfalls, what problems were solved and what problems were introduced by type checking. 

And I'll finally answer The Big Question: would you do that again?

Learn more: https://2024.pycon.it/event/typing-at-scale-statically-type-checking-a-large-codebase

#CaseStudy #TypeHinting #Scaling",https://i.ytimg.com/vi/LyjhiHi9c70/maxresdefault.jpg,0,False,False,public,https://www.youtube.com/watch?v=LyjhiHi9c70,https://www.youtube.com/watch?v=LyjhiHi9c70
89,Modern observability for Python - Adrian Garcia Badaracco,https://www.youtube.com/watch?v=LafhxrhFhRY,LafhxrhFhRY,Python Italia,@PythonItalia,https://www.youtube.com/@PythonItalia,20240630,1757,112,0,,BestPractice,Entertainment,"Modern observability for Python - Adrian Garcia Badaracco - PyCon Italia 2024

Elevator Pitch:
Observability is changing! Gone are the days of plain text logs. We've now got traces, metrics, observability infrastructure, and multiple standards for all of them. Join us to learn what this all means and how you can use these new technologies to gain visibility into your project.

Description:
Once upon a time, all we had was plain text logs. You could change the formatting, and if you are lucky you have the observability infrastructure to be able to search through and understand these. Things are changing now! OpenTelemetry in particular is taking the observability space by storm. But with more power comes... more complexity. It can be hard to know where to get started. This talk will distill what you need to know from a developers perspective about the modern observability landscape. We'll focus on OpenTelemetry and cover how to configure and use the OpenTelemetry SDK, first breaking down the main concepts you need to know and then diving into some code examples.
Finally we'll talk about where and how you can export the data once you're collecting it.

Learn more: https://2024.pycon.it/event/modern-observability-for-python

#BestPractice",https://i.ytimg.com/vi/LafhxrhFhRY/maxresdefault.jpg,0,False,False,public,https://www.youtube.com/watch?v=LafhxrhFhRY,https://www.youtube.com/watch?v=LafhxrhFhRY
90,From Pydantic V1 to V2 - Hemangi Subodh Karchalkar,https://www.youtube.com/watch?v=kWheidg1pKo,kWheidg1pKo,Python Italia,@PythonItalia,https://www.youtube.com/@PythonItalia,20240630,1648,109,4,,"Django,FastAPI,Flask,Rust",Entertainment,"From Pydantic V1 to V2 - Hemangi Subodh Karchalkar - PyCon Italia 2024

Elevator Pitch:
Pydantic 2.0's release, featuring a 17x performance boost from partial rewriting in Rust, reshapes Python app development. This session explores the benefits and trade-offs of Pydantic in Rust, appealing to Python developers keen on Python-Rust integration.

Description:
A crucial element in many Python applications is Pydantic, and its significance has grown with version 2. The rebuild of internals, evidenced by benchmarks showing a remarkable 17x performance improvement, marks a wow-worthy milestone! Pydantic 2.0's release, coupled with partial rewriting in Rust and refactoring into Pydantic core and top-level Pydantic in Python, signifies major developments. In reality, the alpha release of Pydantic 2 is now available, and these changes could notably impact libraries like FastAPI and Beanie.

To understand the implications of these modifications, I take the opportunity to discuss the Pydantic library and the transition from V1 to V2. This talk will delve into how the adoption of Rust has entirely transformed Pydantic's architecture, making it more extendable, maintainable, and significantly boosting its performance. Before diving into Rust's impact, I'll provide a brief introduction to Pydantic and the new features in Pydantic V2. The core of the discussion will focus on highlighting the advantages and drawbacks of creating libraries like Pydantic in Rust, using examples from the Pydantic V2 codebase. I'll explore the trade-offs and design considerations encountered when using Rust to create logic rather than Python.

This session is relevant to any Python developer interested in integrating Python and Rust. No prior understanding of Rust or Pydantic is required. I'm confident that you'll find the talk lively and insightful.

Learn more: https://2024.pycon.it/event/from-pydantic-v1-to-v2

#Flask #Django #FastAPI #Rust",https://i.ytimg.com/vi/kWheidg1pKo/maxresdefault.jpg,0,False,False,public,https://www.youtube.com/watch?v=kWheidg1pKo,https://www.youtube.com/watch?v=kWheidg1pKo
91,"Pandas, Polars and the DataFrame Consortium. - Alessandro Romano",https://www.youtube.com/watch?v=UvxdZfdjVyI,UvxdZfdjVyI,Python Italia,@PythonItalia,https://www.youtube.com/@PythonItalia,20240630,1901,382,14,,"DataStructures,Pandas",Entertainment,"Pandas, Polars and the DataFrame Consortium. - Alessandro Romano - PyCon Italia 2024

Elevator Pitch:
Pandas transformed data manipulation, becoming essential for Data Scientists. It inspired similar tools, like Polars in Rust, each introducing unique DataFrames. This growth highlights the need for standardization, prompting the creation of a data consortium.

Description:
Pandas, a library in Python, has revolutionized the way we approach data manipulation and analysis, becoming an indispensable tool for Data Scientists worldwide. Initially created as a modest project, it has grown exponentially in functionality and popularity, forming the backbone of countless data science projects.

The success of Pandas has not gone unnoticed in the world of data science and programming. It has inspired a wave of similar tools and libraries, each aimed at refining, enhancing, or even revolutionizing how we work with data. These tools have introduced new functionalities, optimized existing processes, and addressed specific needs in various business contexts.

One of the most notable examples is Polars, developed in Rust. Polars is not just another data manipulation library; it's a testament to the evolving landscape of data science tools. Rust, known for its performance and safety, lends Polars an edge in handling large datasets more efficiently. This has allowed Polars to offer solutions to some of the challenges it took Pandas years to overcome, such as handling larger datasets with lower memory footprints and faster processing times.

Polars, however, is just one of many examples. The data science community has seen an expansion of libraries, each introducing their own DataFrame implementations. From Dask, which extends Pandas' capabilities for larger-than-memory computations, to Vaex, which excels in out-of-core dataframes for massive datasets, each library has its unique proposition.

This burgeoning of diverse libraries, while beneficial, has also introduced certain challenges. The primary concern is the lack of standardization across these tools. Each library, with its unique approach and implementation, can lead to fragmentation in practices and methodologies in data science. This fragmentation can hinder collaborative efforts, create compatibility issues, and slow down the progress in the field.

Recognizing these challenges, the data community has taken a significant step by establishing a data consortium. This consortium aims to guide developers and users through this diverse and rapidly changing landscape. Its objectives include the establishment of standards and best practices, promoting interoperability among different tools, and ensuring that advancements in the field are accessible and beneficial to a broader range of users.

Moreover, the consortium also focuses on fostering a collaborative environment. By bringing together developers of various tools, it aims to harmonize efforts, reduce redundant work, and encourage the sharing of ideas and innovations. This collective approach is crucial in a field as dynamic and impactful as data science.

In conclusion, while Pandas remains a cornerstone in data manipulation, the emergence of various other tools like Polars signifies a broader and more diverse ecosystem. This diversity, while presenting challenges in standardization and compatibility, also drives innovation and specialization, catering to a wider range of needs in the data science community. The establishment of the data consortium is a pivotal step towards harnessing this diversity, promoting collaboration, and guiding the future development of data manipulation tools.

Learn more: https://2024.pycon.it/event/pandas-polars-and-the-dataframe-consortium

#Pandas #DataStructures",https://i.ytimg.com/vi/UvxdZfdjVyI/maxresdefault.jpg,0,False,False,public,https://www.youtube.com/watch?v=UvxdZfdjVyI,https://www.youtube.com/watch?v=UvxdZfdjVyI
92,functime: a next generation ML forecasting library powered by Polars - Luca Baggi,https://www.youtube.com/watch?v=1ise06L3pDw,1ise06L3pDw,Python Italia,@PythonItalia,https://www.youtube.com/@PythonItalia,20240630,1835,305,6,,"BigData,DataStructures,Databases,MachineLearning",Entertainment,"functime: a next generation ML forecasting library powered by Polars - Luca Baggi - PyCon Italia 2024

Elevator Pitch:
Powered by this impressive query engine, functime enables **forecasting thousands of time series at once, from the comfort of your laptop**. With Polars, we can push the boundary for what ""reasonable scale"" means - and build a **new generation of tools for machine learning**.

Description:
Polars is mature, production ready, intuitive to write and pleasant to read. And it's fast. Thanks to Rust and Rayon, you can achieve speeds greater than numba's. If you combine it with top-of-the-class evaluation methods, not only can you get **speedups of about 1-2x order of magnitude** in feature engineering and cross-validation, but also dramatically **improve your development workflow**.

That's what we set out to demonstrate with functime. We chose to write a time-series library first, because forecasting can be a **costly undertaking, with significant problems of scale**. Making predictions with big panel datasets usually required fitting thousands of univariate models, one at a time, using distributed systems. On the other hand, functime unlocks an **efficient forecasting workflow, from your laptop**.

📍**Intended audience.** This talk is a hands-on demonstration for forecasting practitioners and data scientists alike. It will showcase how to build clean and performant forecasting pipelines with rich feature-engineering capabilities - enabling a seamless and more efficient modelling workflow.

Nevertheless, the principles behind functime can be grasped by every machine learning practitioner: forecasting is just a use-case to shows off Polars' potential. With Polars, we can improve the current state of machine learning modelling and raise the ceiling for what reasonable scales means.

🚩 **Talk outline**

• minutes 0-3. Problem setting: the current problem with forecasting.
• minutes 3-7. What is Polars and why it is so fast.
• minutes 7-10. What is global forecasting and why it is so effective.
• minutes 10-20. A simple fit-evaluate modelling workflow.
• minutes 20-25. An advanced workflow with blazingly fast feature extractors and cross-validation.
• minutes 25-30. Wrap up and QA.

Learn more: https://2024.pycon.it/event/functime-a-next-generation-ml-forecasting-library-powered-by-polars

#BigData #MachineLearning #Databases #DataStructures",https://i.ytimg.com/vi/1ise06L3pDw/maxresdefault.jpg,0,False,False,public,https://www.youtube.com/watch?v=1ise06L3pDw,https://www.youtube.com/watch?v=1ise06L3pDw
93,"Sviluppare operatori kubernetes ""Pythonicamente"" - Cesare Placanica",https://www.youtube.com/watch?v=O-FxF76Qql8,O-FxF76Qql8,Python Italia,@PythonItalia,https://www.youtube.com/@PythonItalia,20240630,1598,29,1,,"BestPractice,DeploymentContinuousIntegration,DevOps,Infrastructure,Operations",Entertainment,"Sviluppare operatori kubernetes ""Pythonicamente"" - Cesare Placanica - PyCon Italia 2024

Elevator Pitch:
Gli ""Operator"" sono un pattern per estendere le capacità di Kubernetes.
Di solito si sviluppano in Go, ma se vuoi quel tipo di esperienza in cui vuoi provare velocemente una tua idea, nello stile di Python, allora puoi provare con Kopf e Kwok.

Description:
Kopf è un framework Python per svilippare operatori di Kubernetes usando Python.
Sviluppare un operator in Go non è propriamente semplice.
Con Kopf invece puoi farlo semplicemente usando qualche Decoratore Python.

https://kopf.readthedocs.io/en/stable/

Kwok (Kubernetes Without Kubelet) è un emulatore di Kubernetes, praticamente puoi emulare Nodi oppure Pod a piacimento.
Usarlo in combinazione con Kopf è molto utile quando se si vogliono creare condizioni di test complicate da ottenere, per esempio emulare un nodo con 1000 CPU è piü semplice che comprarlo.

https://github.com/kubernetes-sigs/kwok

Learn more: https://2024.pycon.it/event/sviluppare-operatori-kubernetes-pythonicamente

#BestPractice #Infrastructure #Operations #DevOps #DeploymentContinuousIntegration",https://i.ytimg.com/vi/O-FxF76Qql8/maxresdefault.jpg,0,False,False,public,https://www.youtube.com/watch?v=O-FxF76Qql8,https://www.youtube.com/watch?v=O-FxF76Qql8
94,The attentive programmer - Daniele Procida,https://www.youtube.com/watch?v=_kKrKSfLj6E,_kKrKSfLj6E,Python Italia,@PythonItalia,https://www.youtube.com/@PythonItalia,20240630,3360,91,1,,,Entertainment,"The attentive programmer - Daniele Procida - PyCon Italia 2024

Description:
""I photograph to find out what something will look like photographed"", said the great photographer Garry Winogrand. The genius of his work lies in his phenomenal powers of attention, his ability to see. Seeing is a deliberate act.
What do programmers ""see""? How well do we do it? And are we so full of intention that we fail to pay attention?
I want to pursue this question, with the aid of philosophers, poets and photography, and I want to light up a potential dimension in programming that I haven't seen explored. For example: why is it that a story or photograph can be about something, but we never hear of a computer program that is about something? Is it not possible? Or have we just missed it? We're all familiar with love poems and love songs - could a love program exist? What would it look like?
I think we can answer all those questions in interesting ways, that connect our understanding and appreciation of the world and our arts with programming. I think that they can suggest new opportunities and ideas to us. And, I think that it can make a difference to us, even as practically-minded programmers doing practical work.

Learn more: https://2024.pycon.it/event/the-attentive-programmer",https://i.ytimg.com/vi/_kKrKSfLj6E/maxresdefault.jpg,0,False,False,public,https://www.youtube.com/watch?v=_kKrKSfLj6E,https://www.youtube.com/watch?v=_kKrKSfLj6E
95,Crabs in Snakes! - David Seddon,https://www.youtube.com/watch?v=L844NAJ24QI,L844NAJ24QI,Python Italia,@PythonItalia,https://www.youtube.com/@PythonItalia,20240630,1717,134,2,,Rust,Entertainment,"Crabs in Snakes! - David Seddon - PyCon Italia 2024

Elevator Pitch:
Python is great for productivity and readability. Rust is great if you want things to run really fast. Isn't it a shame we can't use both in the same program?

It turns out we can! Learn how, with the help of some clever libraries, we can write compiled Python modules in Rust.

Description:
In this talk, you'll learn how to get started with using Rust directly from Python.

We'll start by introducing Rust itself. It's a very different language to Python with a whole new way of thinking. Along the way, we'll meet Cargo, Rust's excellent package manager.

Then we'll see how we can plumb Rust code into Python as a native extension module, and distribute it as a wheel. We'll do this using Py03 and Maturin.

You don't need to know anything about Rust, extension modules or packaging - this will give you the fundamentals. By the end, you will know how to get started putting the power of Rust inside your Python programs.

Learn more: https://2024.pycon.it/event/crabs-in-snakes

#Rust",https://i.ytimg.com/vi/L844NAJ24QI/maxresdefault.jpg,0,False,False,public,https://www.youtube.com/watch?v=L844NAJ24QI,https://www.youtube.com/watch?v=L844NAJ24QI
96,Acknowledging Women’s Contributions in the Python Community Through Podcast - Cheuk Ho,https://www.youtube.com/watch?v=YAALyllQ7MA,YAALyllQ7MA,Python Italia,@PythonItalia,https://www.youtube.com/@PythonItalia,20240630,1687,9,1,,"Community,ConferencesandMeetUps,Diversity",Entertainment,"Acknowledging Women’s Contributions in the Python Community Through Podcast - Cheuk Ho - PyCon Italia 2024

Elevator Pitch:
Disheartened by the lack of representation by women on Python podcasts, we decided to start a podcast with a goal to highlight their voices so that they could receive the recognition they deserve. In this talk, learn about about our podcast series and what we have achieved.

Description:
The Python community has been making efforts in improving the diversity and representation among its members. There are examples of success stories such as PyCon US Charlas, PyLadies, Djangonaut, and Django Girls. Yet in the Python podcast community, women are still underrepresented, making up only 17% of invited guests among the popular podcast series. Being a guest in a podcast is a privilege, and an opportunity to influence the Python community. There are many women and underrepresented group members who have made impactful contributions to the Python community globally, and they deserve the recognition and to be heard by the rest of us. Disheartened by the lack of representation by women on Python podcasts, and inspired by others who have shown us how diversity in the community can be improved through intentionality, we decided to start a podcast with a goal to highlight their voices so that they could receive the recognition they deserve. In this talk,earn about them, and about our podcast series. We’ll also share how you can further help out cause in improving representation and diversity in the Python community. 

## Goal

To raise awareness of the underrepresentation of certain groups, especially women. To acknowledge the progress made by the Python community and what can be done further to continue the improvement.

## Target Audience 

Anyone who cares about the diversity and inclusion progression in the Python community. Community leaders who want to be allies.

## Outline

### Diversity in Python community, examples (5 minutes)

- PyCon US speakers: from 1% in 2011 to 40% in 2016
-Efforts in improving diversity in the Python community: Charlas, PyLadies, DjangoGirls, Djangonaut

### How are those efforts successful? (5 minutes)

- Intentionality: starts with recognizing the issue and clear intention and goal in improving the situation
- Outreach: targeted and direct outreach to underrepresented, explicit invitation asking underrepresented group members to participate in
- Opportunity: providing opportunities and tools for women to succeed

### In Podcast (3 minutes)

- Since there were no stats, we collected our own data by scraping three most popular Python Podcasts
Collected using Python, beautiful soup, and Datasette
- Our result shows that among the three podcasts that have been running for years, women made up only 17% of invited guests, whereas there were the same men who appeared more frequently on the same shows

### Why is ithis important (5 minutes)

- Podcast guest is influential
- Women and underrepresented group members deserve to be seen and heard
- Representation creates inspirations. Lack of representation = lost opportunity to inspire women to further participate in the community

### 6 months of our podcasts (4 minutes)

- Share public reactions and support from our launch
- Karolina Ladino: in Colombia, women has to be accompanied by husband, brothers to come to meetups, otherwise it's not safe for them to come alone. 
- Joanna Jablonski: making impact in Python community through documentation and developer education

### How you can help(3 minutes)

- Listen to their stories
- Actively promote and boost voices from women and underrepresented group members
- Suggest people to interview

Learn more: https://2024.pycon.it/event/acknowledging-womens-contributions-in-the-python-community-through-podcast

#Community #ConferencesandMeetUps #Diversity",https://i.ytimg.com/vi/YAALyllQ7MA/maxresdefault.jpg,0,False,False,public,https://www.youtube.com/watch?v=YAALyllQ7MA,https://www.youtube.com/watch?v=YAALyllQ7MA
97,Myths and fairy tales around Python performance - Antonio Cuni,https://www.youtube.com/watch?v=ir5ShHRi5lw,ir5ShHRi5lw,Python Italia,@PythonItalia,https://www.youtube.com/@PythonItalia,20240630,3530,189,8,,,Entertainment,"Myths and fairy tales around Python performance - Antonio Cuni - PyCon Italia 2024

Description:
Python is slow: why? Can we make it faster?

Over the years, various answers to these questions have been given, and
in my opinion, many of those are partial, imperfect, or just plainly wrong.

The truth is that there is no simple answer. We will examine some of the most
common ones, and explain why they aren't totally accurate. While doing so, we
will examine the current status of some of the techniques currently adopted
such as static typing, JIT, and AOT compilation, and explain why those alone
are not enough.

Finally, we will go deeper and try to understand what are the fundamental
issues to overcome, and what could be possible ways of moving forward.

Learn more: https://2024.pycon.it/event/python-is-slow-why-can-we-make-it-faster",https://i.ytimg.com/vi/ir5ShHRi5lw/maxresdefault.jpg,0,False,False,public,https://www.youtube.com/watch?v=ir5ShHRi5lw,https://www.youtube.com/watch?v=ir5ShHRi5lw
98,Getting Started with Open Source Contributions - Stefanie Molin,https://www.youtube.com/watch?v=AV-JVXDPXBk,AV-JVXDPXBk,Python Italia,@PythonItalia,https://www.youtube.com/@PythonItalia,20240630,1853,52,2,,OpenSource,Entertainment,"Getting Started with Open Source Contributions - Stefanie Molin - PyCon Italia 2024

Elevator Pitch:
This talk is for anyone that has wanted to contribute to open source, but didn't know where to start or thought they wouldn't be able to do it with their skill set or time. Come learn how to get started!

Description:
The open source community is all about giving back and learning from one another. No matter how small, every contribution is valuable. And everyone can contribute something with a little bit of help. The hardest part is finding something to work on that fits your interests and skills.

In this talk, I will provide five ways that I used to get started contributing to different open source projects. I also share some guidance on selecting projects to contribute to and how to set yourself up for success. Get ready to start your open source journey!

Learn more: https://2024.pycon.it/event/getting-started-with-open-source-contributions

#OpenSource",https://i.ytimg.com/vi/AV-JVXDPXBk/maxresdefault.jpg,0,False,False,public,https://www.youtube.com/watch?v=AV-JVXDPXBk,https://www.youtube.com/watch?v=AV-JVXDPXBk
99,"Release it like a pro! - Simone Pulcini, Luigi Giuseppe Corollo",https://www.youtube.com/watch?v=h7LDWyz-WM4,h7LDWyz-WM4,Python Italia,@PythonItalia,https://www.youtube.com/@PythonItalia,20240630,1874,57,0,,"BestPractice,Deployment/ContinuousIntegration,DevOps",Entertainment,"Release it like a pro! - Simone Pulcini, Luigi Giuseppe Corollo - PyCon Italia 2024

Elevator Pitch:
Have you ever gone crazy over a bad release? With our solution for a cutting-edge and fully automated total version control, leveraging the latest cutting edge technologies, you will be able to save time and manage multiple software releases to multiple environments with fun!

Description:
In a world dominated by chaos, release management activities could be a real nightmare; but we’ve got the solution to make the sun shine! No matter if you’re a small or a big development team dealing with microservices architecture, tracking the whole release process: we will show you how to auto generate a version tag that spans from your repo codebase to a package registry, a container registry, a helm chart with a CI/CD in a full DEVOPS style targeting multiple K8S environments. We will trigger this amazing process with the power of SEMANTIC COMMIT messages managed by Semantic Release and a platform agnostic workflow based on Tekton and ArgoCD

Learn more: https://2024.pycon.it/event/release-it-like-a-pro

#BestPractice #DevOps #DeploymentContinuousIntegration",https://i.ytimg.com/vi/h7LDWyz-WM4/maxresdefault.jpg,0,False,False,public,https://www.youtube.com/watch?v=h7LDWyz-WM4,https://www.youtube.com/watch?v=h7LDWyz-WM4
100,Scaling Machine Learning Training and Inference - Ilyas Chaoua,https://www.youtube.com/watch?v=nSmxFghL1_A,nSmxFghL1_A,Python Italia,@PythonItalia,https://www.youtube.com/@PythonItalia,20240630,1681,38,0,,"MachineLearning,Scaling",Entertainment,"Scaling Machine Learning Training and Inference - Ilyas Chaoua - PyCon Italia 2024

Elevator Pitch:
In this 30-minute talk, we will delve into the intricacies of managing the training and inference processes for thousands of machine learning models that we do at our company.

Description:
Join us for an insightful session on “Scaling Machine Learning Training and Inference at Vedrai.” In this 30-minute talk, we will delve into the intricacies of managing the training and inference processes for thousands of machine learning models at Vedrai, offering a glimpse into the innovative techniques and technologies employed. Discover the challenges and solutions involved in orchestrating large-scale machine learning operations, and gain valuable insights into how Vedrai optimizes its workflow to achieve efficiency and performance.

Learn more: https://2024.pycon.it/event/scaling-machine-learning-training-and-inference

#MachineLearning #Scaling",https://i.ytimg.com/vi/nSmxFghL1_A/maxresdefault.jpg,0,False,False,public,https://www.youtube.com/watch?v=nSmxFghL1_A,https://www.youtube.com/watch?v=nSmxFghL1_A
101,Preservare la Privacy dei Dati Personali nell'Era dell'IA: Un Approccio Pratico con Nerpii,https://www.youtube.com/watch?v=NaVUz4xrFbE,NaVUz4xrFbE,Python Italia,@PythonItalia,https://www.youtube.com/@PythonItalia,20240630,1190,35,1,,"NaturalLanguageProcessing,Privacy",Entertainment,"Preservare la Privacy dei Dati Personali nell'Era dell'IA: Un Approccio Pratico con Nerpii - Simona Mazzarino - PyCon Italia 2024

Elevator Pitch:
Preserva la privacy dei dati sensibili con Nerpii, libreria Python open source che usa i dati sintetici per proteggere la privacy delle informazioni personali e consentirti di allenare modelli di ML senza rischi. Un talk sull'IA e la privacy dei dati!

Description:
Nell'era digitale, dove la tecnologia permea ogni aspetto della nostra vita quotidiana, emerge in maniera cruciale la necessità di preservare le Informazioni Personali Identificabili (PII) per garantire la sicurezza e la tutela della privacy individuale.

L'ampio utilizzo dell'Intelligenza Artificiale (IA) e del Machine Learning (ML) introduce sfide sempre più complesse, soprattutto nei settori critici come quello sanitario, assicurativo e bancario. La pratica di impiegare dati sensibili per addestrare modelli di ML solleva notevoli interrogativi e rischi relativi alla privacy.

Per affrontare con successo tali rischi e agevolare un addestramento sicuro dei modelli di ML, è fondamentale adottare strategie avanzate, tra cui l'utilizzo dei dati sintetici. Questi dati, generati attraverso modelli di Intelligenza Artificiale Generativa, sono in grado di replicare fedelmente le stesse statistiche dei dati originali, consentendo l'addestramento dei modelli di ML senza compromettere la privacy individuale.

Con l'obiettivo di proteggere la riservatezza delle informazioni personali contenute nei dati strutturati, abbiamo sviluppato Nerpii, una libreria open source in Python. Questo strumento esegue la Named Entity Recognition sui dati strutturati, individuando e successivamente generando informazioni personali sintetiche.

Il talk proposto esplorerà, inizialmente, l'importanza di proteggere le PII, mettendo in luce i rischi associati al loro utilizzo in contesti di addestramento di modelli di ML. Successivamente, verrà presentata la libreria open source Python, Nerpii, per individuare e generare in modo sintetico le informazioni personali contenute nei dati strutturati.

Learn more: https://2024.pycon.it/event/preservare-la-privacy-dei-dati-personali-nellera-dellia-un-approccio-pratico-con-nerpii

#Privacy #NaturalLanguageProcessing",https://i.ytimg.com/vi/NaVUz4xrFbE/maxresdefault.jpg,0,False,False,public,https://www.youtube.com/watch?v=NaVUz4xrFbE,https://www.youtube.com/watch?v=NaVUz4xrFbE
102,Il software funzionante è il principale metro di misura di progresso - Raffaele Colace,https://www.youtube.com/watch?v=j1L7hphScbM,j1L7hphScbM,Python Italia,@PythonItalia,https://www.youtube.com/@PythonItalia,20240630,1778,88,1,,"Agile,BestPractice,CleanCode,TestDrivenDevelopment(TDD)",Entertainment,"Il software funzionante è il principale metro di misura di progresso - Raffaele Colace - PyCon Italia 2024

Elevator Pitch:
Pensa al software di un aereo. Oppure al software di un ecografo. O ancora, al software della tua banca. Ti sentiresti al sicuro sapendo che non sono stati creati dei test per verificarne la qualità?
Sembra assurdo ma ancora oggi siamo lontani dal sentirci a nostro agio quando utilizziamo alcuni sof

Description:
Immagina software in aerei o banche senza test di qualità. È inquietante, ma bug banali sono ancora comuni. In questa presentazione, discuto l'importanza dei test dalla prospettiva dell'utente, con esempi concreti per sottolineare il bisogno di software di qualità e risultati affidabili.

Learn more: https://2024.pycon.it/event/il-software-funzionante-e-il-principale-metro-di-misura-di-progresso

#Agile #TestDrivenDevelopmentTDD #BestPractice #CleanCode",https://i.ytimg.com/vi/j1L7hphScbM/maxresdefault.jpg,0,False,False,public,https://www.youtube.com/watch?v=j1L7hphScbM,https://www.youtube.com/watch?v=j1L7hphScbM
103,"Mirror, mirror: LLMs and the illusion of humanity - Jodie Burchell",https://www.youtube.com/watch?v=4jGwEOGunrU,4jGwEOGunrU,Python Italia,@PythonItalia,https://www.youtube.com/@PythonItalia,20240630,3464,346,9,1.0,,Entertainment,"Mirror, mirror: LLMs and the illusion of humanity - Jodie Burchell - PyCon Italia 2024

Description:
Large language models (LLMs) exploded into mainstream awareness in 2022, and have continued to fascinate us since. But what is it about LLMs, compared to other, similarly complex algorithms, that have so captured our imagination? And why is it that we are so ready to believe that these models have started to show signs of human behavior? In this talk, we’ll delve into some of the more extraordinary claims that have been made about LLMs in the past few years, including that these models are showing signs of sentience or intelligence. We’ll discuss why humans have a tendency to see such traits in these models, due to the way they mirror back a “lossy compression” of our humanity. And we’ll talk about how dispelling myths about LLMs being anything more than language models can help us apply them to their best current uses.

Learn more: https://2024.pycon.it/event/mirror-mirror-llms-and-the-illusion-of-humanity",https://i.ytimg.com/vi/4jGwEOGunrU/maxresdefault.jpg,0,False,False,public,https://www.youtube.com/watch?v=4jGwEOGunrU,https://www.youtube.com/watch?v=4jGwEOGunrU
104,Self hosting your side projects with Django and duct tape - Anže Pečar,https://www.youtube.com/watch?v=SnPVhT-5dMA,SnPVhT-5dMA,Python Italia,@PythonItalia,https://www.youtube.com/@PythonItalia,20240630,2765,254,9,,"Deployment/ContinuousIntegration,Django,Infrastructure,RaspberryPI",Entertainment,"Self hosting your side projects with Django and duct tape - Anže Pečar - PyCon Italia 2024

Elevator Pitch:
You can self-host multiple side projects using nothing but an old Raspberry Pi, your home wifi, Django, and actual duct tape. I'll show how to get around dynamic IP performance bottlenecks and achieve over three nines of uptime while handling thousands of daily requests on a budget of 0€ per month.

Description:
The talk will cover everything you need to know to host your projects on your hardware the old-fashioned way confidently. We won't use containers, virtualization, edge computing, or anything the cool kids use these days. Instead, we will rely on good old technology like Nginx and server-side rendered Django. We'll even have the database running on the same machine as if it's still the year 2009.

Even though the deployment will be old-fashioned, the way we deploy new code changes won't be, as I'll show how to leverage GitHub Actions to get the latest Python code changes to your site every time you push to the main branch. I'll also talk about how to configure observability tools and be alerted if there is an issue. 

We'll also cover some of the common gotchas, like buying the right SD card for your Raspberry Pi, dealing with your internet provider's dynamic IP addresses, compiling the latest version of Python, configuring your Nginx to run Django, configuring Postgres and dealing with backups. I'll even show you how to use duct tape to improve your site's uptime!

I'll make the case that any developer comfortable running Python on their laptop can be comfortable running a Python web application connected to the internet.

Learn more: https://2024.pycon.it/event/self-hosting-your-side-projects-with-django-and-duct-tape

#Django #RaspberryPI #Infrastructure #DeploymentContinuousIntegration",https://i.ytimg.com/vi/SnPVhT-5dMA/maxresdefault.jpg,0,False,False,public,https://www.youtube.com/watch?v=SnPVhT-5dMA,https://www.youtube.com/watch?v=SnPVhT-5dMA
