index,title,url,video_id,uploader,uploader_id,uploader_url,upload_date,duration,view_count,like_count,comment_count,tags,categories,description,thumbnail,age_limit,is_live,was_live,availability,webpage_url,original_url
1,Conference Opening and Welcome - PyCon Italia 2022,https://www.youtube.com/watch?v=YVau_Jy5Yd8,YVau_Jy5Yd8,Python Italia,@PythonItalia,https://www.youtube.com/@PythonItalia,20220722,1268,983,2,,,Entertainment,Conference Opening and Welcome - PyCon Italia 2022,https://i.ytimg.com/vi/YVau_Jy5Yd8/maxresdefault.jpg,0,False,False,public,https://www.youtube.com/watch?v=YVau_Jy5Yd8,https://www.youtube.com/watch?v=YVau_Jy5Yd8
2,Fuzzing Python code with Atheris - Federico Scrinzi,https://www.youtube.com/watch?v=OE3PTAvVIPU,OE3PTAvVIPU,Python Italia,@PythonItalia,https://www.youtube.com/@PythonItalia,20220723,1657,2025,25,1.0,"codeanalysis,open-source,security,testing",Entertainment,"Fuzzing Python code with Atheris - PyCon Italia 2022

Fuzz testing is a well-known technique for uncovering programming errors. Atheris is an open-source fuzzing engine for finding bugs in Python code and native extensions, released by the Google Information Security team. With this talk we'll learn how Atheris works and how it can be used in practice.
Fuzz testing is a well-known technique for uncovering programming errors. Many of these detectable errors have serious security implications. Atheris ( is an open-source fuzzing engine for automatically finding bugs in Python code and native extensions. Atheris is a “coverage-guided” fuzzer, which means that Atheris will repeatedly try various inputs to your program while watching how it executes, and try to find interesting execution paths.
In the past, Atheris was used to find bugs in Pillow's native code (CVE-2020-35653) or to find differences in JSON parsing between Python's standard library and Ultrajson, or between Python's idna package and the native libidn2 library.

In this talk you can learn the basics of fuzzing, how Atheris works internally, and how it can be used for bug hunting.


Speaker: Federico Scrinzi",https://i.ytimg.com/vi/OE3PTAvVIPU/maxresdefault.jpg,0,False,False,public,https://www.youtube.com/watch?v=OE3PTAvVIPU,https://www.youtube.com/watch?v=OE3PTAvVIPU
3,Data Engineering and Python - Prakhar Srivastava,https://www.youtube.com/watch?v=2LLfODYCaRw,2LLfODYCaRw,Python Italia,@PythonItalia,https://www.youtube.com/@PythonItalia,20220723,1737,362,4,,"architecture,bigdata,databases,distributedsystems",Entertainment,"Data Engineering and Python - PyCon Italia 2022

Data Engineering is the backbone of all analytics that happens in any organization. This marks data engineering as the central role in any data-driven organization. This talk aims to introduce the fundamentals of data engineering with python apps driving the core concepts.
The aim of this talk is to introduce the audience to the world of big data analytics with pythonic tools and libraries at its core. One can expect the talk to cover the basics of Extract, Transform and Load(ETL) pipelines using python scripts and then Airflow with PySpark. These ETL pipelines are core to any data infrastructure. There will be a discourse on how we can use cloud providers and design an entire system that is responsible for analytics and ML in an organization. Finally a short outro into how one can start their journey to become a data engineer.


Speaker: Prakhar Srivastava",https://i.ytimg.com/vi_webp/2LLfODYCaRw/maxresdefault.webp,0,False,False,public,https://www.youtube.com/watch?v=2LLfODYCaRw,https://www.youtube.com/watch?v=2LLfODYCaRw
4,How to imprison a minotaur: mazes building methodologies - Juna Salviati,https://www.youtube.com/watch?v=-RlVU5O86bM,-RlVU5O86bM,Python Italia,@PythonItalia,https://www.youtube.com/@PythonItalia,20220723,1510,290,6,,"machine-learning,science",Entertainment,"How to imprison a minotaur: mazes building methodologies - PyCon Italia 2022

Maze solving algorithms are very popular: we seldom talk about about how to create them.
We will explore maze generation with  Python, keeping a multidisciplinary approach.
[EN]
Talking about mazes, we usually think about algorithms to find an exit: we seldom think about algorithms and methods to *create* them.
In this talk we will use Python to ""imprison the minotaur"": starting from an algorithmic approach, we will generate mazes with cellular automata, formal systems, genetic algorithms and machine learning.

[IT]
Quando parliamo di labirinti, pensiamo subito ad algoritmi di pathfinding: molto meno trattate sono invece le metodologie per la loro costruzione.
In questo talk utilizzeremo Python per ""imprigionare il minotauro"": partendo da un approccio prettamente algoritmico, genereremo poi labirinti con automi cellulari e sistemi formali, per arrivare ad utilizzare infine algoritmi genetici ed il machine learning.

[SLIDES LINK]



Speaker: Juna Salviati",https://i.ytimg.com/vi/-RlVU5O86bM/maxresdefault.jpg,0,False,False,public,https://www.youtube.com/watch?v=-RlVU5O86bM,https://www.youtube.com/watch?v=-RlVU5O86bM
5,Don't rely on discipline - Nejc Zupan,https://www.youtube.com/watch?v=DOivZctKoYo,DOivZctKoYo,Python Italia,@PythonItalia,https://www.youtube.com/@PythonItalia,20220723,1869,216,4,,"cleancode,staticanalysis,testing",Entertainment,"Don't rely on discipline - PyCon Italia 2022

In the programming field we often rely on discipline. We expect from ourselves and from others that we will not introduce bugs and cause problems. That we will use the libraries and APIs as they are intended. That we will not cut corners.

Sadly, tales from the industry tell us otherwise.
This talk explores why we should not rely on discipline as a bouncer against bugs, and what to rely on instead.

Slides: 


Speaker: Nejc Zupan",https://i.ytimg.com/vi/DOivZctKoYo/maxresdefault.jpg,0,False,False,public,https://www.youtube.com/watch?v=DOivZctKoYo,https://www.youtube.com/watch?v=DOivZctKoYo
6,DALL·E Flow: when neural search meets generative art - Dr. Han Xiao,https://www.youtube.com/watch?v=giyGGrMw6a8,giyGGrMw6a8,Python Italia,@PythonItalia,https://www.youtube.com/@PythonItalia,20220723,1860,141,3,,,Entertainment,"DALL·E Flow: when neural search meets generative art - PyCon Italia 2022



Speaker: Dr. Han Xiao",https://i.ytimg.com/vi/giyGGrMw6a8/maxresdefault.jpg,0,False,False,public,https://www.youtube.com/watch?v=giyGGrMw6a8,https://www.youtube.com/watch?v=giyGGrMw6a8
7,Test sana in codice sano - PyCon Italia 2022,https://www.youtube.com/watch?v=JgrewHP45j8,JgrewHP45j8,Python Italia,@PythonItalia,https://www.youtube.com/@PythonItalia,20220723,1880,322,7,,"apis,django,testdrivendevelopment(tdd),testing",Entertainment,"Test sana in codice sano - PyCon Italia 2022

Hai mai avuto voglia o necessità di scrivere test ma non conosci le best practices?
Hai difficoltà a trovare esempi pratici online?
Vuoi capire quanto i test migliorino la qualità del codice?
Questo talk, partendo dalle best practices, ti darà le risposte che cerchi tramite esempi pratici.
Le slide sono disponibili a questo link: 

Ad oggi i software sono parte integrante della nostra vita, abbiamo un software per tutto, come sviluppatori vogliamo renderli privi di bug.
“Se il tuo codice non è testabile non è stato ben progettato” e si presenta agli occhi degli altri come un teorema senza dimostrazione, ma scrivere test è diverso dallo scrivere codice ed è bene, quindi, seguire delle best practices.  
Scrivere codice testato non è soltanto un modo per dormire sonni più sereni, ma anche un atto etico, perché un bug, nei casi peggiori, può anche portare ad eventi catastrofici.

Hai mai avuto voglia di scrivere codice testato ma non conosci le best practices?
Scrivi già test ma ti chiedi come mai in fase di refactoring ti ritrovi a perdere più tempo nel fixare i test piuttosto che il tuo codice?
Mentre scrivi i test ti sembra di perdere il focus rispetto ai requisiti del cliente?
Vuoi capire quanto i test migliorino la qualità del codice?
Hai difficoltà a trovare esempi pratici online?

Nel caso tu abbia risposto sì almeno una volta, segui questo talk: scoprirai, con esempi pratici, come meglio approcciarsi alla scrittura di codice testabile e testato.
Il talk, presentato da chi ne aveva davvero bisogno, ti darà spunti di riflessione partendo dai suggerimenti e dalle linee guida più condivise in letteratura, passando per lo sviluppo di logiche di business tramite test unit e comportamentali, fino ad arrivare ai tools e alle librerie disponibili in Django mostrando esempi pratici di utilizzo.


Speakers: Antonio Mustich, Davide Ria",https://i.ytimg.com/vi/JgrewHP45j8/maxresdefault.jpg,0,False,False,public,https://www.youtube.com/watch?v=JgrewHP45j8,https://www.youtube.com/watch?v=JgrewHP45j8
8,Best practices for good(ish) and clean(ish) code - Ernesto Arbitrio,https://www.youtube.com/watch?v=6ZsAmUh8Vj4,6ZsAmUh8Vj4,Python Italia,@PythonItalia,https://www.youtube.com/@PythonItalia,20220723,1921,431,7,,"cleancode,deployment/continuousintegration,development,testing",Entertainment,"Best practices for good(ish) and clean(ish) code - PyCon Italia 2022

A famous book introduction says: `The only valid measurement of code quality: WTFs/minute`.
In this talk I'd like to share my past and current experience on how to write good and clean code and what to do and not to do to achieve good shape programs.
Sounds interesting uh?
Have you ever thought what is the cost vs revenue of a well written code and of an ugly code?
Nowadays, in most companies, code bases are huge (in terms of lines of code and complexity) and the number of contributors is also high; this means that a well shaped code could benefit the company finance and the mental health of the employees (AKA software engineers).

Writing clean (and/or good) code requires discipline. This discipline can be acquired and increased during your job and doing experience with messy code, but more important is that using discipline, respecting and following some rules you can achieve elegant and efficient code.

In this talk I will cover some principles of clean code (they are too much for 30 minutes):
 - Meaningful Names
 - Formatting
 - Tests and their importance
 - Continuous Integration
 - Code Refactoring
 - Code Review
 - Boundaries

All the work contained in this talk is mostly inspired by the book `Clean Code - Robert C. Martin (AKA Uncle Bob)` and the experience I have made during my current job and the previous one.


Speaker: Ernesto Arbitrio",https://i.ytimg.com/vi/6ZsAmUh8Vj4/maxresdefault.jpg,0,False,False,public,https://www.youtube.com/watch?v=6ZsAmUh8Vj4,https://www.youtube.com/watch?v=6ZsAmUh8Vj4
9,Write Any Python Program in One Line and Only Using Lambdas! - Niccolò «Veggero» Venerandi,https://www.youtube.com/watch?v=0by86nMo7OI,0by86nMo7OI,Python Italia,@PythonItalia,https://www.youtube.com/@PythonItalia,20220723,1860,260,3,1.0,functionalprogramming,Entertainment,"Write Any Python Program in One Line and Only Using Lambdas! - PyCon Italia 2022

Any program can be written in just one statement and only using lambda.

Sounds weird? The first claim will bring us into what functional programming is (+ map, functools...); the second one will dig into λ calculus.

But why? You will learn the power of λ and how to be concise: a better pythonist!
This talk will cover:

- Recursion!
Recursion enables to write simple and concise python code. We will bring many examples of recursion, how to make it fast with memoizing and what tail call optimization is.

- Mutable vs Immutable objects!
Since FP uses a completely immutable approach, this might be the right time to learn about tuples, frozendicts, and all immutable data structures.

- Higher order functions!
You can pass functions as arguments and return them in functions. There are many functions in python that use this feature: sort, min, max, map, filter etc.

- Functools!
Functools is the standard python library containing many useful functional tools. The library functions will be all explained properly, such as partial and reduce, often used in FP. 

- Lambda calculus!
λ calculus is the first functional language! In fact, a λ calculus interpreter could be written using exclusively the lambda statement (no loops, numbers, standard functions, libraries, anything).


Speaker: Niccolò «Veggero» Venerandi",https://i.ytimg.com/vi/0by86nMo7OI/maxresdefault.jpg,0,False,False,public,https://www.youtube.com/watch?v=0by86nMo7OI,https://www.youtube.com/watch?v=0by86nMo7OI
10,Leaflet on steroids with Django - Valentino Gagliardi,https://www.youtube.com/watch?v=p3_SFfl2ibg,p3_SFfl2ibg,Python Italia,@PythonItalia,https://www.youtube.com/@PythonItalia,20220723,913,174,4,,"apis,django,geoandgis,javascript,rest",Entertainment,"Leaflet on steroids with Django - PyCon Italia 2022

Django fornisce potenti strumenti per costruire applicazioni geospaziali. Ma cosa succede quando i dati da visualizzare diventano troppi, e gli strumenti di base non bastano più? Basato su un caso reale, in questo talk vedremo come rendere fruibile una mappa inizialmente lentissima da caricare.
L'obiettivo del talk è quello di fornire spunti e strumenti per affrontare ottimizzazioni lato backend e frontend su Leaflet e Django, molto utili nel caso di grandi quantità di dati geospaziali. In particolare vedremo nel dettaglio:

Il problema, ovvero, una grande quantità di dati geospaziali da visualizzare in mappa, che prima dell'ottimizzazione sono praticamente inutilizzabili.

La soluzione lato backend. Vedremo l'impiego di:

- filtri geospaziali intelligenti.
- stream per servire grandi quantità di dati.

La soluzione lato frontend. Vedremo l'impiego di:

- tecniche di ottimizzazione per il caricamento dinamico dei livelli Leaflet.
- stream per il rendering progressivo dei dati geospaziali.
- filtri intelligenti e relative librerie per ottimizzare le richieste verso il backend.
- test unitari e funzionali per verificare tutte le feature della mappa.


Speaker: Valentino Gagliardi",https://i.ytimg.com/vi/p3_SFfl2ibg/maxresdefault.jpg,0,False,False,public,https://www.youtube.com/watch?v=p3_SFfl2ibg,https://www.youtube.com/watch?v=p3_SFfl2ibg
11,Transformer e Meccanismi di Attenzione: modelli che rivoluzionano l'AI - Vincenzo Maritati,https://www.youtube.com/watch?v=P0pqyK5UO2Y,P0pqyK5UO2Y,Python Italia,@PythonItalia,https://www.youtube.com/@PythonItalia,20220723,1877,2459,55,2.0,"deeplearning,machine-learning",Entertainment,"Transformer e Meccanismi di Attenzione: modelli che stanno rivoluzionando l'Intelligenza Artificiale - PyCon Italia 2022

Analizziamo le caratteristiche che permettono alle architetture di reti neurali artificiali basate sui Transformer di diventare i nuovi modelli SotA in tutti i domini applicativi. Descriveremo dalle tecniche seq-2-seq ai meccanismi di attenzione, dai vettori posizionali al Perceiver-IO.
Le architetture di rete neurale artificiale basate sui Transformer stanno rivoluzionando il mondo del Deep Learning, permettendo ai relativi nuovi modelli di surclassare tutte le precedenti soluzioni allo stato dell'arte.
Oltre che in ambito Natural Language Processing, dove i Transformer sono nati e sono stati fatti evolvere, oggi possiamo sfruttare lo stesso approccio in qualsiasi altro ambito, come in Computer Vision o per l'analisi di segnali industriali.
Lo scopo del talk è di spiegare in maniera comprensibile il funzionamento dei principali componenti di queste architetture per scoprirne i segreti e capirne il funzionamento.
Slide: 


Speaker: Vincenzo Maritati",https://i.ytimg.com/vi/P0pqyK5UO2Y/maxresdefault.jpg,0,False,False,public,https://www.youtube.com/watch?v=P0pqyK5UO2Y,https://www.youtube.com/watch?v=P0pqyK5UO2Y
12,"/metrics, a must have - Luiz Marques",https://www.youtube.com/watch?v=zc0Ljq4JhLQ,zc0Ljq4JhLQ,Python Italia,@PythonItalia,https://www.youtube.com/@PythonItalia,20220723,1776,165,4,1.0,"apis,asyncio,debugging,docker,open-source,performance,tooling",Entertainment,"/metrics, a must have - PyCon Italia 2022

With modern applications being distributed, only testing is enough to ensure your apps are healthy? 
The web is wild and users are unpredictable. Having a good strategy of observability in place is essential.
In this talk, I'll demo how to setup extensible metrics in your app using open-source tools
With the advent of microservices and all that jazz, the complexity of monitoring applications increased quite a lot.
How many instances of my app do I have running?
Are they all healthy?
How is it performing under heavy load?
Questions like that can not be answered by guesses only, but you need data to be more assertive. 

In this talk, we will create a sample web application and instrument it using Prometheus (and potentially other tools such as Grafana, Jaeger, Alert Manager, etc) and see in practice how we can monitor web applications in real-time.


Speaker: Luiz Marques",https://i.ytimg.com/vi/zc0Ljq4JhLQ/maxresdefault.jpg,0,False,False,public,https://www.youtube.com/watch?v=zc0Ljq4JhLQ,https://www.youtube.com/watch?v=zc0Ljq4JhLQ
13,Automate cleaning code in few easy steps! - Ester Beltrami,https://www.youtube.com/watch?v=YHEaPloOaSA,YHEaPloOaSA,Python Italia,@PythonItalia,https://www.youtube.com/@PythonItalia,20220723,1425,173,0,,"cleancode,development",Entertainment,"Automate cleaning code in few easy steps! - PyCon Italia 2022

How annoying is to find out that everything went to hell on the pipeline because you forgot to run the formatters? Be smart and learn how to set up automations!
Have you ever been in the situation where you check the pipeline to see if it has finished and you discover it didn't even start because you forgot to run formatters and linters locally?
or when the code you’re reading isn’t formatted properly and you’re dying to stop doing everything you’re doing and fix it once for all this crap?
There are wonderful tools out there to avoid this problem, that runs every commit or push so you don't forget anymore! Learn how to configure them for your needs and more importantly learn why you need them now!!

Slides available [here](


Speaker: Ester Beltrami",https://i.ytimg.com/vi/YHEaPloOaSA/maxresdefault.jpg,0,False,False,public,https://www.youtube.com/watch?v=YHEaPloOaSA,https://www.youtube.com/watch?v=YHEaPloOaSA
14,Continuous Documentation for your Python code - Anastasiia Tymoshchuk,https://www.youtube.com/watch?v=xlzultL8gno,xlzultL8gno,Python Italia,@PythonItalia,https://www.youtube.com/@PythonItalia,20220723,1382,215,1,,"bestpractice,documentation",Entertainment,"Continuous Documentation for your Python code - PyCon Italia 2022

Do you document your code? Do you think it is important?
Imagine that you need to get back to your code in 6 month after you wrote it, there is always a big possibility that you will have to spend some time to find out how this code works. 
This talk will tell you a secret trick about documentation.
Do you document your code? Do you think it is important?

Imagine that you need to get back to your code in 6 month after you wrote it, there is always a big possibility that you will have to spend some time to find out how this code works. Or if someone else wrote some code, which is already in production and your task is to fix a bug in it and there is no documentation and no one actually knows what this code does.

There are more benefits of implementing continuous documentation for the code:

- easy to onboard new team members,
- easy to share knowledge,
- if this code is open source - easy to start contributing,
- easy to see purpose and motivation of each piece of code,
- easy to keep versioning for each new release of the code.

It this talk I will show the difference between documentation types and will show a demo in the end of the talk.


Speaker: Anastasiia Tymoshchuk",https://i.ytimg.com/vi/xlzultL8gno/maxresdefault.jpg,0,False,False,public,https://www.youtube.com/watch?v=xlzultL8gno,https://www.youtube.com/watch?v=xlzultL8gno
15,"Python, you can drive my car. Yes, I'm gonna be a star. - Fabio Lamanna",https://www.youtube.com/watch?v=ls27d5tgAJ0,ls27d5tgAJ0,Python Italia,@PythonItalia,https://www.youtube.com/@PythonItalia,20220723,1792,108,0,,"open-source,tooling,visualization",Entertainment,"Python, you can drive my car. Yes, I'm gonna be a star. - PyCon Italia 2022

We know that our beloved Python can do everything, and today we are learning how to use it to build a micro-simulation model of mobility! Thanks to SUMO, a microscopic traffic simulation package written in C++ and Python, we discover how to analyze vehicle, pedestrian and train flows very easily!
In this talk I present SUMO, an open source, highly portable, microscopic and continuous traffic simulation package designed to handle large networks. Within SUMO, you can build multi-modal transportation networks, including demand (flows of vehicles, pedestrians, buses, trains) and network characteristics (traffic lights, junctions, bike lanes etc.), running simulations over large urban networks.

Written in C++, it comprises several functions and tools written in Python, as well a complete package called sumolib, a set of Python modules for working with SUMO networks.

We will learn how to import a network from OpenStreetMap in one click thanks to a Python script, set some traffic flows and run a simulation within the SUMO-GUI, a perfect interface to see your cars, bicycles, buses flowing on the network. Typical outputs that we can get and visualize with Python include vehicle information data, trajectories, speed, delays and emissions.

If you are a mobility passioner or a professional engineer dealing with traffic problems, tired of spending tons of money on commercial software, you should definitely give SUMO a try.

Please download the slides of the talk here:



Speaker: Fabio Lamanna",https://i.ytimg.com/vi/ls27d5tgAJ0/maxresdefault.jpg,0,False,False,public,https://www.youtube.com/watch?v=ls27d5tgAJ0,https://www.youtube.com/watch?v=ls27d5tgAJ0
16,Oops ho sovrascritto le tue modifiche - Riccardo Magliocchetti,https://www.youtube.com/watch?v=bGeOtbdZAJg,bGeOtbdZAJg,Python Italia,@PythonItalia,https://www.youtube.com/@PythonItalia,20220723,1527,140,2,,"django,postgresql",Entertainment,"Oops ho sovrascritto le tue modifiche - PyCon Italia 2022

Mai capitato di sovrascrivere dati involontariamente tramite una interfaccia web o tramite un pannello di amministrazione? 😅 Vediamo cosa possiamo fare per limitare i danni 🎉
Mai capitato di sovrascrivere dati involontariamente dall'interfaccia web o tramite il pannello di amministrazione di una applicazione Django? In questo talk vedremo qualche strategia per ovviare al problema.

Vedremo delle strategie generiche come salvare un log delle nostre modifiche, fare il locking delle righe del database oppure usare la concorrenza ottimistica. Quindi vedremo una strategia specifica di PostgreSQL implementando un sistema di concorrenza ottimistica per le modifiche fatte da utenti tramite il pannello di amministrazione di Django.

[Slides](


Speaker: Riccardo Magliocchetti",https://i.ytimg.com/vi/bGeOtbdZAJg/maxresdefault.jpg,0,False,False,public,https://www.youtube.com/watch?v=bGeOtbdZAJg,https://www.youtube.com/watch?v=bGeOtbdZAJg
17,What do you want to be known for? - Angela Parker,https://www.youtube.com/watch?v=qxzbQCEFvn8,qxzbQCEFvn8,Python Italia,@PythonItalia,https://www.youtube.com/@PythonItalia,20220723,1961,267,16,2.0,"communication,community,education,scaling,teaching",Entertainment,"What do you want to be known for? - PyCon Italia 2022

If you feel professionally unsatisfied, struggle to make decisions, or have a burning desire to leave behind an epic legacy – this session is for you!

In this fun + interactive session you'll discover your Top 2 Personal Values that are the secret to creating impact through your work.
You work hard. 
You are great at your job.

But hard work is not what creates FULFILLMENT. 

If you feel professionally unsatisfied, struggle to make decisions, want to feel more creative, or desire to leave behind an epic legacy – this session is for you!

In this fun + interactive session you'll discover the secret to creating impact through your work. 

When you get clear about what you value – finding your purpose, choosing a direction, and making important career decisions becomes easy.

In this session you'll discover:
- Your top two personal values 
- How to quickly make career decisions that feel right 
- How to use creativity to get clarity 
- Who you are now by modernizing your value system

Join certified coach, master workshop facilitator, community creator, and international entrepreneur Angela Parker for this unique session that will help you get clear and inspire you to take action. 

Although Angela is American she lives half the year in Trentino Italy and is a big supporter of the Python Community. 






Official Bio: Angela Parker is an international entrepreneur, CPCC Certified Coach, ICF Coach Member, and AJ&Smart Master Workshop Facilitator who teaches deep-feeling leaders & entrepreneurs how to use creativity, values, self-compassion, and radical self-care – to create deeply fulfilling work.

Angela designs and facilitates impactful in-person and on-line workshops, masterminds, and experiences for leaders and teams.

Angela founded the largest and longest running outdoor fitness program in Santa Monica CA. After her exit in 2018 she began coaching and offering workshop facilitation. She’s known for her empathy, intuition, directness, humor, and ability to thread the most impactful details into all her sessions.  

Angela and her work has been featured on CBS, The LA Times, ESPN, MTV, ABC, The Hallmark Channel, Carson Magazine, and Self Magazine.

When Covid possible, Angela splits her time between the Italian Alps, Los Angeles, Chicago, and Japan.


Speaker: Angela Parker",https://i.ytimg.com/vi/qxzbQCEFvn8/maxresdefault.jpg,0,False,False,public,https://www.youtube.com/watch?v=qxzbQCEFvn8,https://www.youtube.com/watch?v=qxzbQCEFvn8
18,Writing Faster Python 3 - Sebastian Witowski,https://www.youtube.com/watch?v=LPpf7k3Cqoo,LPpf7k3Cqoo,Python Italia,@PythonItalia,https://www.youtube.com/@PythonItalia,20220723,1795,277,8,,"bestpractice,cpython,development",Entertainment,"Writing Faster Python 3 - PyCon Italia 2022

Source code level optimization is often neglected - people don’t bother, because getting a faster server often gives better results. But if you - like me - always wonder what is the most efficient way to write some code, then this talk is for you!
Did you know that Python preallocates integers from -5 to 257? Reusing them 1000 times, instead of allocating memory for a bigger integer, can save you a couple milliseconds of code’s execution time. If you want to learn more about this kind of optimizations then, … well, probably this presentation is not for you :) Instead of going into such small details, I will talk about more “sane” ideas for writing faster code.

After a brief overview of different levels of optimization and how they work in Python, I will show you simple and fast ways of measuring the execution time of your code and finally, discuss examples of how some code structures could be improved.

You will see:
* The fastest way of removing duplicates from a list
* How much faster your code is when you reuse the built-in functions instead of trying to reinvent the wheel
* What is faster than the “for loop”
* If the lookup is faster in a list or a set
* When it’s better to beg for forgiveness than to ask for permission


Speaker: Sebastian Witowski",https://i.ytimg.com/vi/LPpf7k3Cqoo/maxresdefault.jpg,0,False,False,public,https://www.youtube.com/watch?v=LPpf7k3Cqoo,https://www.youtube.com/watch?v=LPpf7k3Cqoo
19,Protecting hardcoded credentials in public source code - Marco Rosa,https://www.youtube.com/watch?v=NgQGwYXiB3A,NgQGwYXiB3A,Python Italia,@PythonItalia,https://www.youtube.com/@PythonItalia,20220723,1579,306,6,,"open-source,security",Entertainment,"Protecting hardcoded credentials in public source code - PyCon Italia 2022

Hardcoding credentials in source code is a known bad practice, but it is still happening every day, even on public platforms like GitHub. Credential Digger is an open source scanning tool that can help developers find and remediate to their exposed credentials with a low false positive rate.
Github is now widely adopted in the software development industry as internal and external code hosting, sharing and versioning platform. Even if this platform offers advanced code control features it remains exposed to security weaknesses.
In this talk we will discuss about Github security concepts and introduce an SAP Open Source tool called Credential Digger used to scan Git platforms (GitHub, GitLab, BitBucket, etc.) in order to identify hardcoded credentials (Passwords, API Keys, Secret Keys, Tokens, personal information, internal domains, etc.). Compared to other secret scanners in the market, Credential Digger is able to identify passwords with a low false positive rate. Thanks to a NLP model we trained for this purpose, we can identify when passwords are fake and when they are real. Together with Credential Digger, we also work on a real time Github Organization monitor that analyzes permanently the new commits on the projects of a team, and alerts the owner when a potential secret is shared.

Slides: 


Speaker: Marco Rosa",https://i.ytimg.com/vi/NgQGwYXiB3A/maxresdefault.jpg,0,False,False,public,https://www.youtube.com/watch?v=NgQGwYXiB3A,https://www.youtube.com/watch?v=NgQGwYXiB3A
20,Soo many ingredients in the webapp kitchen! - Jacopo Nespolo,https://www.youtube.com/watch?v=EBTf-AObxag,EBTf-AObxag,Python Italia,@PythonItalia,https://www.youtube.com/@PythonItalia,20220723,1872,93,1,,"databases,microservices,rest",Entertainment,"Soo many ingredients in the webapp kitchen! - PyCon Italia 2022

Flask or FastAPI? Sql or NoSql? Pydantic or Marshmallow? Docker or K8s?

Building a webapp is like coming up with a new recipe: you have many ingredients available, some add sweetness, some add sourness. Not all of them taste good together! 

Above all, de gustibus non disputandum!
Writing your first webapp, the paradox of choice can overwhelm you. You need to choose among several (micro)frameworks, choose how you persist data, how you deploy your app, etc.

Here are my personal gourmand views to those and other choices related to the development and deployment in production of small to mid-size web applications. 

This talk wants to be somewhat of a tasting session for all the different ingredients I tasted over the past two years, a talk I wish I had received two years back to make more informed decisions myself. As such, the core of the talk will consist of comparing what I liked and disliked of two projects I worked on: one based on Flask + Postgres (Sqlalchemy) + Marshmallow-sqlalchemy + static files, the other based on FastAPI + Mongodb (Motor) + S3 (Boto3) + Pydantic. I will review the differences of these choices, both technical and related to documentation and community.

Of course, this talk does not aim to provide answers, but merely give the audience a very blurry map to an extremely diverse environment where each one can build his own personal taste.

EDIT 2022-06-10: You can find a summary and an edited versions of the slides used during the talk at the following link




Speaker: Jacopo Nespolo",https://i.ytimg.com/vi/EBTf-AObxag/maxresdefault.jpg,0,False,False,public,https://www.youtube.com/watch?v=EBTf-AObxag,https://www.youtube.com/watch?v=EBTf-AObxag
21,Da crontab a Celery senza rimpianti - Marco Pavanelli,https://www.youtube.com/watch?v=xBBpdbsD6qU,xBBpdbsD6qU,Python Italia,@PythonItalia,https://www.youtube.com/@PythonItalia,20220723,1828,201,6,1.0,"django,docker,infrastructure",Entertainment,"Da crontab a Celery senza rimpianti - PyCon Italia 2022

Eseguire i backup, controllare le email, cancellare i log .. ci sono un sacco di cose utili che si possono automatizzare con i cron jobs ma dopo un po' di tempo i vostri file di crontab diventano ingestibili.
In questo caso Celery può diventare il vostro migliore amico.
I cont jobs sono fantastici, possono salvarti la vita e il matrimonio, lavorano di giorno e di notte con qualsiasi tempo e non sbagliano mai orario. Ma quando diventano troppi diventa davvero difficile gestirli e poi avete mai provato ad eseguire un cron job in un container? 

la prima volta che ho provato Celery è stato abbastanza frustrante, il setup iniziale non è semplice ma se non ci si arrende il risultato è sorprendente e il potere che ti può dare Celery una volta installato è gigantesco.


Speaker: Marco Pavanelli",https://i.ytimg.com/vi/xBBpdbsD6qU/maxresdefault.jpg,0,False,False,public,https://www.youtube.com/watch?v=xBBpdbsD6qU,https://www.youtube.com/watch?v=xBBpdbsD6qU
22,REST In Peace - producing REST services for Odoo by code or just backend - FILIPPO IOVINE,https://www.youtube.com/watch?v=q890rbZsDJM,q890rbZsDJM,Python Italia,@PythonItalia,https://www.youtube.com/@PythonItalia,20220723,1606,116,2,,"apis,odoo,rest",Entertainment,"REST In Peace - producing REST services for Odoo by code or just backend - PyCon Italia 2022

REST In Peace (RIP) is an Odoo module to ease the development/implementantion of REST services into Odoo using the RIP API framework library or, without a single line of code, just thru the Odoo RIP backend settings interface
RIP has two easy approaches in producing a REST server exposing Odoo models data structure and Odoo models method as REST API services:
you can do that by code (the RIP API framework library) or using Odoo RIP backend configuration interface where you can define access rules (which models are exposed, who users can access what and how, which http methods, specific blocking rules, etc.), set models schema IN and OUT being parsed and validated when invoking the request or being rendered in the HTTP responses, write your own fuction and expose that as a REST API service, choose custom HTTP responses data layouts, requests and responses logs, auth token handlers, etc, potentially whithout developing one single line of code.


Speaker: FILIPPO IOVINE",https://i.ytimg.com/vi/q890rbZsDJM/maxresdefault.jpg,0,False,False,public,https://www.youtube.com/watch?v=q890rbZsDJM,https://www.youtube.com/watch?v=q890rbZsDJM
23,Data Visualization con Streamlit - Luca Corbucci,https://www.youtube.com/watch?v=hRPt4r_xVIg,hRPt4r_xVIg,Python Italia,@PythonItalia,https://www.youtube.com/@PythonItalia,20220723,1665,696,7,,visualization,Entertainment,"Data Visualization con Streamlit - PyCon Italia 2022

Streamlit è un progetto open source che permette di creare in pochi minuti delle data-web-app (e non solo) scrivendo solamente codice Python senza necessità di avere esperienza di front-end.
In questa sessione scopriremo il suo funzionamento, come deployare un’app e vedremo un possibile caso d’uso.
Vi è mai capitato di dover mostrare e spiegare i risultati di un progetto di analisi di dati? Non c'è sempre tempo e modo di sviluppare da zero una dashboard per l’occasione e presentare direttamente un jupyter notebook potrebbe non essere la soluzione ideale.

E qui arriva in soccorso Streamlit:  si tratta di un progetto open source che permette di creare in pochissimi minuti una data-web-app (e non solo) scrivendo solamente codice Python senza necessità di avere esperienza di front-end.

In questa sessione scopriremo come funziona Streamlit, come deployare un’app e vedremo un possibile caso d’uso.

Slides:
IT: 
EN: 


Speaker: Luca Corbucci",https://i.ytimg.com/vi/hRPt4r_xVIg/maxresdefault.jpg,0,False,False,public,https://www.youtube.com/watch?v=hRPt4r_xVIg,https://www.youtube.com/watch?v=hRPt4r_xVIg
24,Can Unsupevised ML Be Overfitted? - Dana Racah,https://www.youtube.com/watch?v=37rxQw8VHbE,37rxQw8VHbE,Python Italia,@PythonItalia,https://www.youtube.com/@PythonItalia,20220723,1713,81,2,,machine-learning,Entertainment,"Can Unsupevised ML Be Overfitted? - PyCon Italia 2022

Overfitting is a widely discussed pitfall in ML. In ML 101 class, we are taught how to identify and mitigate it in a Supervised ML setting. 
But wait, how about the Unsupervised setting? Can we overfit there as well? In my talk, I will show that we sure can, and we will discuss what to do about it.
Throughout my career as a data scientist, I had the opportunity to work on many diverse Machine Learning (ML) projects. Some of my favourite projects deal with an unsupervised learning setting. At first glance, an unsupervised model may seem simpler to execute, and with less potential for pitfalls along the way. For example, it does not require to split the data into training, test and validation datasets, and on the face of it, there is no risk of overfitting: we just run our ML model on the dataset, and voila!

Subsequently however, from my experience, when the model is deployed to production, we often measure poor performance. How can this be? 
In this talk, I will present how, if we are not careful enough, unsupervised ML models can be overfitted. I will demonstrate overfitting on a clustering problem, by simulating a clustering model selection. We will run several clustering models on the learning set and select the best model. Then, we will see that it may be overfitted.
But don’t worry! We will also discuss some ways to mitigate the overfitting peril in an unsupervised setting. I will provide a toolset to help you identify and avoid this situation, and will show how each mitigation impacts our simulation results.


Speaker: Dana Racah",https://i.ytimg.com/vi/37rxQw8VHbE/maxresdefault.jpg,0,False,False,public,https://www.youtube.com/watch?v=37rxQw8VHbE,https://www.youtube.com/watch?v=37rxQw8VHbE
25,Mutabilità e side effect non sono tuoi amici - Claudio Stamile,https://www.youtube.com/watch?v=m0L8NIA4LAU,m0L8NIA4LAU,Python Italia,@PythonItalia,https://www.youtube.com/@PythonItalia,20220723,1848,108,2,,"bestpractice,datastructures,functionalprogramming",Entertainment,"Mutabilità e side effect non sono tuoi amici - PyCon Italia 2022

La mutabilità di classi ed oggetti in python è croce e delizia degli sviluppatori. L’utilizzo di operatori di modifica può generare problemi nella consistenza delle strutture dati. In questo talk analizzeremo il concetto di mutabilità mostrando alcuni metodi per evitare side effect indesiderati.
Python lascia agli sviluppatori un’enorme libertà di utilizzo quando si tratta di modificare strutture dati o classi. E’ dunque necessario procedere in modo strutturato e rigoroso quando vengono effettuate delle modifiche al fine di evitare che strutture dati mutabili possano essere modificate in modo impropio generando dei side effect che si ripercuotono all’interno di tutto il codice. Questo problema è di particolare importanza quando si scrivono delle pipeline di machine learning. In questi casi, infatti, a mutazione di una struttura dati può portare ad un errato processing dei dati che, di conseguenza, porterà al training di algoritmi di machine learning errati.
Scopo di questo talk è quello di investigare il concetto di mutabilità nelle strutture dati e nelle classi e di quali effetti dannosi essi possono generare all’interno del codice ed in particolar modo in pipeline di machine learning. Verranno inoltre proposte alcune buone norme (che prendono spunto dalla programmazione funzionale) utili per poter scrivere codice robusto e privo di effetti indesiderati dati dalla mutazione di eventuali strutture dati o classi.


Speaker: Claudio Stamile",https://i.ytimg.com/vi/m0L8NIA4LAU/maxresdefault.jpg,0,False,False,public,https://www.youtube.com/watch?v=m0L8NIA4LAU,https://www.youtube.com/watch?v=m0L8NIA4LAU
26,From XML to JSON and beyond - Davide Brunato,https://www.youtube.com/watch?v=dhFWrnXfg-g,dhFWrnXfg-g,Python Italia,@PythonItalia,https://www.youtube.com/@PythonItalia,20220723,1844,66,0,,"compilerandinterpreters,datastructures,open-source",Entertainment,"From XML to JSON and beyond - PyCon Italia 2022

I want to share my experience on converting XML data to JSON, talking about the existing conventions, some that expect a loss of information and others that are lossless, with a focus on conversion methods defined by XPath 3.1.
JSON has been often described as an XML alternative or even a replacement. This can be true in several applications, but many often XML persists due to its more richer characteristics and pretty different architectural scopes. So crucial is the build of conversion tools and mapping conventions, to let the data communication effective between the different formats. Despite many defined conventions also XPath 3.1 put a step in this direction. So don't trash old XML data, but use them for what is better suited and convert them to send chunks of JSON data to other systems or to submit to other applications.


Speaker: Davide Brunato",https://i.ytimg.com/vi/dhFWrnXfg-g/maxresdefault.jpg,0,False,False,public,https://www.youtube.com/watch?v=dhFWrnXfg-g,https://www.youtube.com/watch?v=dhFWrnXfg-g
27,Psycopg from 2 to 3: designing and living Free Software - Daniele Varrazzo,https://www.youtube.com/watch?v=w41jxB37n8M,w41jxB37n8M,Python Italia,@PythonItalia,https://www.youtube.com/@PythonItalia,20220723,3516,1245,27,,,Entertainment,"Psycopg from 2 to 3: designing and living Free Software - PyCon Italia 2022

Since it is inception, psycopg2 allowed seamless communication between Python and PostgreSQL. But after 15 years and numerous evolutions of both PostgreSQL and Python, a new challenge approached the project: How do we embrace the new ways of doing things while maintaining a stable codebase?

The answer? psycopg3. A unique occasion to rewrite the library without having to worry about backward compatibility.

This talk will go over all the hard design decisions that came with it:

- What do we keep the same or radically change?
- How do we make the migration from 2 to 3 as painless as possible?

Speaker: Daniele Varrazzo",https://i.ytimg.com/vi/w41jxB37n8M/maxresdefault.jpg,0,False,False,public,https://www.youtube.com/watch?v=w41jxB37n8M,https://www.youtube.com/watch?v=w41jxB37n8M
28,Librerie Python per Explainable Artificial Intelligence - Roberto Marmo,https://www.youtube.com/watch?v=O3cgbIaRn8M,O3cgbIaRn8M,Python Italia,@PythonItalia,https://www.youtube.com/@PythonItalia,20220723,1607,183,4,,"abstractions,machine-learning,performance,predictions",Entertainment,"Librerie Python per Explainable Artificial Intelligence - PyCon Italia 2022

Alcuni modelli di Intelligenza Artificiale creano black-box in cui è difficile capire come decidono. IA spiegabile (XAI) descrive il funzionamento con modelli di spiegazione e visualizzazione dei dati, per creare fiducia nei risultati. Il talk presenta librerie XAI, righe di codice ed esempi di uso.
Alcuni modelli di Intelligenza Artificiale creano black-box in cui si può conoscere input e output, ma è difficile capire come generano le decisioni al loro interno, tanto da renderli inutili per risolvere certi problemi. IA spiegabile (XAI) descrive il funzionamento con modelli di spiegazione e visualizzazione dei dati, per creare fiducia nei risultati e gestire il rischio di malfunzionamento. Perciò, XAI è una importante linea di ricerca e sviluppo. Il talk presenta librerie XAI, righe di codice ed esempi di uso riguardanti: Shap, Lime, Shapash, ExplainerDashboard, Dalex, ELI5.
Link dove scaricare le slide 


Speaker: Roberto Marmo",https://i.ytimg.com/vi/O3cgbIaRn8M/maxresdefault.jpg,0,False,False,public,https://www.youtube.com/watch?v=O3cgbIaRn8M,https://www.youtube.com/watch?v=O3cgbIaRn8M
29,Seek Answers on Oncology with Machine Learning - Nicola Procopio,https://www.youtube.com/watch?v=zZyfQ4Pc-ek,zZyfQ4Pc-ek,Python Italia,@PythonItalia,https://www.youtube.com/@PythonItalia,20220723,1393,143,2,,"machine-learning,naturallanguageprocessing,open-source,science",Entertainment,"Seek Answers on Oncology with Machine Learning - PyCon Italia 2022

Imagine having to do a very important online search and receive billions of irrelevant results. Our oncology search engine only offers answers from professionals, this reduces spam and limit the phenomenon of cybercondria. Simple queries in natural language. Come and try it!
We will talk about how semantic search engines can be fundamental in the health field. In particular, Healthware has developed a service concerning oncology that uses various Machine Learning algorithms and its medical consultation database to reduce information spam and limit the phenomenon of cybercondria.
Slides: 


Speaker: Nicola Procopio",https://i.ytimg.com/vi/zZyfQ4Pc-ek/maxresdefault.jpg,0,False,False,public,https://www.youtube.com/watch?v=zZyfQ4Pc-ek,https://www.youtube.com/watch?v=zZyfQ4Pc-ek
30,How the internet could be healthier - Solana Larsen,https://www.youtube.com/watch?v=D0_FvQ1i5UY,D0_FvQ1i5UY,Python Italia,@PythonItalia,https://www.youtube.com/@PythonItalia,20220723,3366,44,1,,,Entertainment,"How the internet could be healthier - PyCon Italia 2022

Beyond the headlines, what does it mean for the internet and AI to be more trustworthy around the world? Let’s chart the path to a healthier internet.

Speaker: Solana Larsen",https://i.ytimg.com/vi/D0_FvQ1i5UY/maxresdefault.jpg,0,False,False,public,https://www.youtube.com/watch?v=D0_FvQ1i5UY,https://www.youtube.com/watch?v=D0_FvQ1i5UY
31,Back to Basics: Revisiting Basics with few Tips and Tricks in Python3.10v! - Gaurav Pandey,https://www.youtube.com/watch?v=p-EQ4atPGRg,p-EQ4atPGRg,Python Italia,@PythonItalia,https://www.youtube.com/@PythonItalia,20220723,987,273,7,1.0,"bestpractice,cleancode,debugging,documentation,education",Entertainment,"Back to Basics: Revisiting Basics with few Tips and Tricks in Python3.10v! - PyCon Italia 2022

This talk is aimed at NewBie Python Programmers as well as Professional Python Programmers to revise Python Basics and make fundamentals strong for NewBie. During this talk, I'll be revisiting Python Basics with a few Tips and Tricks and what's new in Python3.10v.
This talk is aimed at NewBie Python Programmers as well as Professional Python Programmers to revise Python Basics and make fundamentals strong for NewBie with new end exciting features in Python3.10v. During this talk, I'll be revisiting Python Basics with a few Tips and Tricks. The talk is for little experienced Python 3 programmers who have written a few lines of code: Python experience is required. You can consider this talk as a teaser of Python 3 features that you may have never used yet.


After this talk, I hope you'll be inspired to use these Tips and Tricks in Python3.10v and make your fundamentals strong.

Python3.10v comes with a few new features and for that Python3 fundamentals need to be strong, and in this talk, I'll be covering Important Basics on Python, you will learn everything about Python3.10v!

Python3.10 is pretty simple to understand, but it also comes with a lot of different code syntax options you can use. In this talk, I'll be going to have a look at all of them. We start with the basic syntax and then move on to all the different syntaxes.


Speaker: Gaurav Pandey",https://i.ytimg.com/vi/p-EQ4atPGRg/maxresdefault.jpg,0,False,False,public,https://www.youtube.com/watch?v=p-EQ4atPGRg,https://www.youtube.com/watch?v=p-EQ4atPGRg
32,RegEx Strikes Back: Regular Expressions for Text Mining - Daniel Mesejo,https://www.youtube.com/watch?v=VXvUcYq4cSw,VXvUcYq4cSw,Python Italia,@PythonItalia,https://www.youtube.com/@PythonItalia,20220723,1113,281,11,,"datastructures,naturallanguageprocessing,open-source,textmining",Entertainment,"RegEx Strikes Back: Regular Expressions for Text Mining - PyCon Italia 2022

A short time ago in a galaxy not so far away a regular expression was taking 5 days to run. In this talk you will learn why regular expressions can be slow, how to make them fast using a trie regex data structure and the many uses a good old regular expression can have.
Regular Expressions have a bad reputation, and they are slow (or so they say) for text mining tasks. In this talk you'll learn why regex can be slow and how to use a Trie Regex to craft blazingly fast regular expressions with no effort. How regular expressions integrate smoothly with many libraries (pandas, spacy, etc) and how to use the regex module for common text cleaning tasks such as: prefix finding, fuzzy matching and many more.

Slides: 


Speaker: Daniel Mesejo",https://i.ytimg.com/vi/VXvUcYq4cSw/maxresdefault.jpg,0,False,False,public,https://www.youtube.com/watch?v=VXvUcYq4cSw,https://www.youtube.com/watch?v=VXvUcYq4cSw
33,Supercharge Your Shell — Command-Line Power-Ups and Dotfile Automation - Justin Mayer,https://www.youtube.com/watch?v=W8imzQhI-WM,W8imzQhI-WM,Python Italia,@PythonItalia,https://www.youtube.com/@PythonItalia,20220723,1686,153,1,,"bestpractice,development,open-source",Entertainment,"Supercharge Your Shell — Command-Line Power-Ups and Dotfile Automation - PyCon Italia 2022

We spend hours each day in a terminal console, so let’s make the most of that time by enhancing our command-line productivity. We will automate dotfile configuration, facilitate Python interpreter and virtual environment management, and supercharge our terminals with powerful command-line tools.
We spend hours each day in a terminal console, so let’s make the most of that time by enhancing our command-line productivity. Together we will automate dotfile configuration, facilitate Python interpreter and virtual environment management, and supercharge our terminals with powerful command-line tools.

Managing our shell configuration, commonly referred to collectively as “dotfiles”, can be an onerous task. Thankfully there are tools like Ansible and Chezmoi that we will use to more effectively automate dotfile management in versioned repositories, which we can then easily deploy to both personal workstations and remote servers.

Given the pitfalls inherent in distro-packaged Python interpreters [1], building and managing our own Python interpreters efficiently has never been more important. Thankfully, we will use tools like ASDF to make this incredibly easy, as well as examine its similar benefits for Node.js/NPM and *hundreds* of other languages and tools, all via extensible plugins. For Fish shell users, we will see how VirtualFish makes it easy to create, upgrade, and activate virtual environments in ways that have never been available before.

Finally, we will explore how powerful command-line tools like Zoxide, Bat, RipGrep-All + fzf, and others can be used to dramatically increase our terminal console productivity.

Attendees of this talk will take home the following knowledge and skills:

* how to automate dotfile configuration management and deployment
* how to build and manage multiple Python interpreter versions
* how to more efficiently manage Python virtual environments
* how to use powerful command-line tools to increase terminal console productivity

[1]: 


Speaker: Justin Mayer",https://i.ytimg.com/vi/W8imzQhI-WM/maxresdefault.jpg,0,False,False,public,https://www.youtube.com/watch?v=W8imzQhI-WM,https://www.youtube.com/watch?v=W8imzQhI-WM
34,Modern Python: Alla scoperta delle ultime novità di (C)Python - Mattia Giambirtone,https://www.youtube.com/watch?v=LKpLvBfvRwE,LKpLvBfvRwE,Python Italia,@PythonItalia,https://www.youtube.com/@PythonItalia,20220723,960,341,11,,"abstractions,bestpractice,cleancode,cpython,performance,type-hinting",Entertainment,"Modern Python: Alla scoperta delle ultime novità di (C)Python - PyCon Italia 2022

Vi siete mai chiesti se ci fosse un modo migliore di scrivere il vostro codice? Una qualche feature di Python oscura di cui eravate all'oscuro? Sì? Ebbene, insieme demistificheremo alcune delle ultime feature più interessanti e più sottovalutate del vecchio serpentone: sarà uno spasso, promesso!
 Modern Python: Alla scoperta delle ultime novità di (C)Python

 Pubblico Consigliato

Questa presentazione è diretta a sviluppatori Python con almeno qualche anno di esperienza sulle spalle e che siano interessati a rendere il proprio codice più leggibile, idiomatico e magari anche più _veloce_.

 Introduzione
Vi siete mai trovati a dover scrivere codice simile a questo:
```python
some_var = some_function()
if some_var:
    ...    Code Here
```
e aver pensato: _”Cavolo, quell’assegnamento sembra proprio di troppo!”_? Se la risposta è sì, allora questa presentazione fa per voi! Vi mostrerò come migliorare l’estetica, e magari anche la performance, del vostro codice, mantenendo la medesima funzionalità. Imparerete concetti avanzati quali i generatori asincroni, introdotti nel lontano Python 3.6, il mitico operatore “tricheco”, la nuova e scintillante istruzione `match`, per un efficiente ed elegante pattern matching, ed altro ancora: Sarà una figata, promesso!

 Abstract

Immagino già che qualcuno di voi si stia chiedendo, _”Ma, Matt, Python 3.6? É vecchissimo! Perchè sei venuto a parlarci di una feature introdotta nel 2016?”_: Okay, diciamo che ho mentito (giusto un pochino).

Non tutte le funzionalità di cui parlerò in questa presentazione sono _esattamente_ nuove di zecca, ma ho sempre avuto la sensazione che alcune— specialmente i generatori asincroni— non abbiano mai ricevuto l’attenzione che meritavano e che siano andate piuttosto in sordina: ciò è stato probabilmente dovuto dal rilascio di Python 3.5 (che per rinfrescarvi la memoria ha finalmente standardizzato la programmazione asincrona, introducendo il concetto di coroutine e vari altri nuovi oggetti), e con questa presentazione vorrei rendere loro giustizia e al tempo stesso far notare alcune delle (spesso ben nascoste!) trappole in cui si può cadere facendone uso. Giusto per dare un’assaggio degli argomenti che voglio trattare, ecco cosa spero impariate dalla presentazione:
- Migliorare le performance del vostro codice, parallelizzando le operazioni di I/O basata su file, utilizzando un solo thread grazie all’aiuto dei generatori asincroni
- Risparmiare prezioso spazio e tempo sostituendo `typing.Union[A, B, C]` con il suo (magnificamente idiomatico) equivalente `A | B | C`
- Imparare la maniera _”Pythonica”_ di effettuare pattern matching grazie all’uso della nuova istruzione `match` introdotta in Python 3.10. Potete dire finalmente addio a codice del tipo
 ```python
 cases = {1: ""one"", 2: ""two"", 3: ""three""}
 one_two_three = cases.get(some_var, default_value)
 ```
- Altro ancora! Ma vi toccherà venire alla presentazione per scoprirlo :)


Speaker: Mattia Giambirtone",https://i.ytimg.com/vi/LKpLvBfvRwE/maxresdefault.jpg,0,False,False,public,https://www.youtube.com/watch?v=LKpLvBfvRwE,https://www.youtube.com/watch?v=LKpLvBfvRwE
35,Predictive maintenance: from data collection to ML key approaches - KHVATOVA KRISTINA,https://www.youtube.com/watch?v=NrI6AOekSKA,NrI6AOekSKA,Python Italia,@PythonItalia,https://www.youtube.com/@PythonItalia,20220723,1794,9664,263,3.0,"casestudy,education,internetofthings(iot),machine-learning,predictions",Entertainment,"Predictive maintenance: from data collection to ML key approaches - PyCon Italia 2022

Predictive Maintenance (PM) prevents future system failures and helps to reduce the maintenance costs. Machine Learning with the use of IoT Sensors is the most efficient approach. Come to see some case study solved by Vedrai - one of the top AI startups in Europe - and how it addresses the topic.
PROBLEM.

The world we live in today is highly dependent on the functioning of machines and systems. Breakdown of machinery and tools should never come as a surprise. When predictive maintenance is working effectively, maintenance is only performed on machines when it is required. That is, just before failure is likely to occur. This brings reduction of the downtime and cost, maximizes component utilization and residual useful life.

SOLUTION.

Machine learning-based PdM is one of the best-known data-based analytical approaches for monitoring industrial systems to maximize reliability and efficiency. It is the most efficient method as it allows the maintenance team to anticipate failure predictions, reduce equipment downtime, increase reliability and improve performance by reducing operations and maintenance expenses. The talk will outline the methodologies applied by Vedrai Team - one of the top AI startups in Europe -  that allow it to overcome the most common obstacles of ML-based PdM.

TALK OUTLINE.

The main purpose of this presentation is to show how to build and use PdM models in their entirety, and it will be  based on the following steps: 

1. collect OT (operational technology), IT (informational technology) data and other information about manufacturing processes
2. search patterns and detect anomalies
3. train ML model to provide early warning notifications and diagnosis of equipment problems days, weeks or months in advance of the fault
4. present key studies that show how ML algorithms can effectively estimate the maintenance plan


Speaker: KHVATOVA KRISTINA",https://i.ytimg.com/vi/NrI6AOekSKA/maxresdefault.jpg,0,False,False,public,https://www.youtube.com/watch?v=NrI6AOekSKA,https://www.youtube.com/watch?v=NrI6AOekSKA
36,Web Accessibility in mind - Bernabei,https://www.youtube.com/watch?v=b-TRPucN9ho,b-TRPucN9ho,Python Italia,@PythonItalia,https://www.youtube.com/@PythonItalia,20220723,1842,39,0,,,Entertainment,"Web Accessibility in mind - PyCon Italia 2022



Speaker: Bernabei",https://i.ytimg.com/vi/b-TRPucN9ho/maxresdefault.jpg,0,False,False,public,https://www.youtube.com/watch?v=b-TRPucN9ho,https://www.youtube.com/watch?v=b-TRPucN9ho
37,Django with PostgreSQL superpowers - Paolo Melchiorre,https://www.youtube.com/watch?v=M9oTrJqKT0o,M9oTrJqKT0o,Python Italia,@PythonItalia,https://www.youtube.com/@PythonItalia,20220723,1727,136,4,,"bestpractice,django,postgresql",Entertainment,"Django with PostgreSQL superpowers - PyCon Italia 2022

**Django** per se is a _database-agnostic_ web framework, but _real-world projects_ based on it are not. **PostgreSQL** has the _richest feature set_ of any supported databases and we'll see how to use these **superpowers** in _Django_.
Every time we’re going to create a new project with **Django** we make assessments on its requirements to choose the best architecture, of which, the **database** is usually the core.

Django is a _database-agnostic_ web framework but natively supports only 4 **Open Source databases**: PostgreSQL, SQLite, MariaDB and MySQL.

**PostgreSQL** has the _richest feature set_ of any supported database and some of these features are natively supported directly in Django via its contrib module.

In this talk we’ll see how to use to our _advantage_ the features of PostgreSQL as a database in Django, its exclusive features present in its _contrib module_ and also other superpowers that can be exploited through the use of _third-party packages_.

 More info

**Slide** and more **information** on the talk on [


Speaker: Paolo Melchiorre",https://i.ytimg.com/vi/M9oTrJqKT0o/maxresdefault.jpg,0,False,False,public,https://www.youtube.com/watch?v=M9oTrJqKT0o,https://www.youtube.com/watch?v=M9oTrJqKT0o
38,Processing and analysing streaming data with Python and Apache Flink - Javier Ramirez,https://www.youtube.com/watch?v=75RHzxuhLOk,75RHzxuhLOk,Python Italia,@PythonItalia,https://www.youtube.com/@PythonItalia,20220723,2035,1400,12,1.0,"analytics,bigdata,databases,distributedsystems,open-source",Entertainment,"Processing and analysing streaming data with Python and Apache Flink - PyCon Italia 2022

Data used to be a batch thing, but more and more we get unbounded streams of data, fast or slow, that we need to process and analyse in near real time. 

In this talk I'll show you how you can use Apache Flink  and QuestDB to build reliable streaming data pipelines that can grow as much as you need.
Data used to be a batch thing, but more and more we get unbounded streams of data, fast or slow, that we need to process and analyse in near real time. 

In this talk I'll show you how you can use Apache Flink  and QuestDB to build reliable streaming data pipelines that can grow as much as your Python application needs.


Speaker: Javier Ramirez",https://i.ytimg.com/vi/75RHzxuhLOk/maxresdefault.jpg,0,False,False,public,https://www.youtube.com/watch?v=75RHzxuhLOk,https://www.youtube.com/watch?v=75RHzxuhLOk
39,Efficient ML pipelines using Parquet and PyArrow -  Ingargiola,https://www.youtube.com/watch?v=_jYX1o-hsr0,_jYX1o-hsr0,Python Italia,@PythonItalia,https://www.youtube.com/@PythonItalia,20220723,1691,2149,49,2.0,"aws,bestpractice,infrastructure,machine-learning,pandas,performance,scaling",Entertainment,"Efficient ML pipelines using Parquet and PyArrow - PyCon Italia 2022

Parquet is an high-performance columnar data format that has become the de facto standard in the ML world. By leveraging the powerful PyArrow API, I’ll show how to manage parquet datasets, ranging from a single local file to a partitioned cloud-based dataset updated in real time.
Advanced analytics and Machine Learning (ML) are increasingly used to drive business decisions or provide real-time services for end-users in virtually every industry. Tabular data is the most ubiquitous type of data. Therefore, efficient processing of handle tabular datasets is a critical requirement to deliver performant products or services.

In a proto-typical production ML workflow, an “ingestion pipeline” needs to store large datasets on the cloud and continuously update them as new data becomes available. An “analytics pipeline” usually needs to process the entire dataset by reading it in batches, because the full dataset would be too large to fit in RAM. An “inference pipeline” provides real-time results (i.e. model predictions or other online statistics) and needs to process small batches of data in quasi-realtime. Finally, the presentation of analytics results requires not only to show the output from the models but also to provide context through “historical data” for an arbitrary set of features. Therefore, low-latency access to a small group of columns from a large dataset represents an additional requirement.

In the Python ecosystem, we can leverage tools such as Parquet and PyArrow to address such complex workflow.

Apache Parquet is a columnar storage format initially created to address similar storage challenges in the Hadoop ecosystem. It has since become a standard for efficient storage of large datasets in all the major languages, including Python.

The Apache Arrow project provides a cross-language in-memory representation and query engine for tabular datasets and has a performant IO interface for Parquet datasets. Its Python interface, PyArrow, allows to query and process large partitioned datasets distributed across multiple files and folders on local and cloud storage.

In this talk, combining PyArrow and Parquet datasets, we will explore several techniques to address the use-cases of the typical production ML workflows delineated above.


Speaker:  Ingargiola",https://i.ytimg.com/vi/_jYX1o-hsr0/maxresdefault.jpg,0,False,False,public,https://www.youtube.com/watch?v=_jYX1o-hsr0,https://www.youtube.com/watch?v=_jYX1o-hsr0
40,HPy: the future of Python C extensions - Antonio Cuni,https://www.youtube.com/watch?v=wkB5qxqg_D8,wkB5qxqg_D8,Python Italia,@PythonItalia,https://www.youtube.com/@PythonItalia,20220723,1768,303,9,,"apis,compilerandinterpreters,cpython,pypy",Entertainment,"HPy: the future of Python C extensions - PyCon Italia 2022

C extensions plays a big role in the Python ecosystem, but the existing Python/C API has become a burden for alternative implementations and for innovation of CPython itself. HPy is a joint project by PyPy, CPython, Cython, Numpy and GraalPython developers to design a new future proof API.
HPy provides a new API for extending Python in C. In other words, you use include hpy.h instead of include Python.h.
The talk will explain:
1. Why the current Python/C API is problematic for alternative implementations such as PyPy and for CPython itself
2. How HPy plans to solve the problem, and what is the migration path for existing extensions
3. Why HPy is appealing for extension developers: in particular, higher performance on PyPy and GraalPython, and the ""debug mode"" which automatically catches many mistakes at runtime instead of hitting painful segfaults and/or memory leaks.


Speaker: Antonio Cuni",https://i.ytimg.com/vi/wkB5qxqg_D8/maxresdefault.jpg,0,False,False,public,https://www.youtube.com/watch?v=wkB5qxqg_D8,https://www.youtube.com/watch?v=wkB5qxqg_D8
41,Introduction to Property-Based testing using Hypothesis - PyCon Italia 2022,https://www.youtube.com/watch?v=WBMfwr9Tu24,WBMfwr9Tu24,Python Italia,@PythonItalia,https://www.youtube.com/@PythonItalia,20220723,1722,163,2,,"testdrivendevelopment(tdd),testing",Entertainment,"Introduction to Property-Based testing using Hypothesis - PyCon Italia 2022

Has testing got you down? Ever spent a day writing tests, only to discover that you missed a bug because of some edge case you didn’t know about? Does it ever feel like writing tests is just a formality - that you already know your test cases will pass? Hyphothesis might be just what you need!
Property based testing relies on properties. It checks that a function, program or whatever system under test abides by a property. Most of the time, properties do not have to go into too much details about the output. They just have to check for useful characteristics that must be seen in the output. Benefits are numerous:

1. Cover the scope of all possible inputs: by construct, it does not restrict the generated inputs if not asked to do so. Consequently it can theorically generate all possible inputs and cover the whole range of strings, integers or whatever type required by the system under test.
2. Shrink the input in case of failure: whenever it fails, the framework tries to reduce the input to a smaller input. For instance: if the condition of the failure is the existence of a given character in a string it should return the one-character string having only this character. This is certainly one of the most interesting features of such approach as most of the time the failure can be summarized by a very small case.
3. Reproducible and replayable: each time it runs a property test, a seed is produced in order to be able to re-run the test again on the same datasets. Any run failure causes the framework to print both the failing case and the seed in order to be able to fully reproduce the run.

In this talk i'll present, the teorethical aspects behind the approach and the benefits of using Hypothesis with schemathesis, a modern API testing tool for web applications built with Open API and GraphQL specifications.


Speakers: Alessandro Molina, Aniello Barletta",https://i.ytimg.com/vi/WBMfwr9Tu24/maxresdefault.jpg,0,False,False,public,https://www.youtube.com/watch?v=WBMfwr9Tu24,https://www.youtube.com/watch?v=WBMfwr9Tu24
42,Sviluppare e progettare consapevolmente: occhio all'inclusività,https://www.youtube.com/watch?v=5OeaugbvTDo,5OeaugbvTDo,Python Italia,@PythonItalia,https://www.youtube.com/@PythonItalia,20220723,2086,53,3,,,Entertainment,"Sviluppare e progettare consapevolmente: occhio all'inclusività - PyCon Italia 2022



Speakers: Fiorella De Luca, Sabrina Scoma, Ambra Tonon",https://i.ytimg.com/vi/5OeaugbvTDo/maxresdefault.jpg,0,False,False,public,https://www.youtube.com/watch?v=5OeaugbvTDo,https://www.youtube.com/watch?v=5OeaugbvTDo
43,"Automate creation and deployment using Python, Terraform and GitLab - Filippo Morelli",https://www.youtube.com/watch?v=9ZrGFt5fnhU,9ZrGFt5fnhU,Python Italia,@PythonItalia,https://www.youtube.com/@PythonItalia,20220723,1807,952,4,,"aws,deployment/continuousintegration,devops,django",Entertainment,"Automate web projects creation, development, test and deployment using Python, Terraform and GitLab - PyCon Italia 2022

An overview of how, in 20tab, a bunch of intrepid web developers, acting as consummate DevOps, accomplished the ten year long dream of automating the creation, test and deployment of their projects, by integrating the latest CI/CD solutions and technologies into Talos: the almighty company tool.
For over a decade, in 20tab, we worked on improving our company tool for web projects scaffolding and continuous delivery flow management. We integrated the latest solutions and technologies to automate, speed up and strengthen the creation, development, testing and deployment procedures. In this talk I am going to present in detail Talos, the result of our latest challenge, and how we managed to harness Python scripts, cookiecutter templates, Terraform configurations, GitLab pipelines and Cloud resources.


Speaker: Filippo Morelli",https://i.ytimg.com/vi/9ZrGFt5fnhU/maxresdefault.jpg,0,False,False,public,https://www.youtube.com/watch?v=9ZrGFt5fnhU,https://www.youtube.com/watch?v=9ZrGFt5fnhU
44,Creating Python services using cookiecutter - Sian Lennon,https://www.youtube.com/watch?v=44K8AuVnaiw,44K8AuVnaiw,Python Italia,@PythonItalia,https://www.youtube.com/@PythonItalia,20220723,1253,1651,14,1.0,,Entertainment,"Creating Python services using cookiecutter - PyCon Italia 2022



Speaker: Sian Lennon",https://i.ytimg.com/vi/44K8AuVnaiw/maxresdefault.jpg,0,False,False,public,https://www.youtube.com/watch?v=44K8AuVnaiw,https://www.youtube.com/watch?v=44K8AuVnaiw
45,Viaggio nel mondo delle librerie python - Danilo Abbasciano,https://www.youtube.com/watch?v=-W5ZX9KoE3Q,-W5ZX9KoE3Q,Python Italia,@PythonItalia,https://www.youtube.com/@PythonItalia,20220723,1720,1103,25,,"bestpractice,cleancode,development",Entertainment,"Viaggio nel mondo delle librerie python - PyCon Italia 2022

25 utili librerie in 30 minuti
Attraverso un affascinate viaggio tra le librerie python, tratteremo rapidamente quelle più utili e semplici da utilizzare che ci faranno risparmiare tempo e linee di codice. Farò una rapida presentazione per ognuna di esse facendone risaltare i benefici e le principali funzionalità. Da non perdere!

Slides: 


Speaker: Danilo Abbasciano",https://i.ytimg.com/vi/-W5ZX9KoE3Q/maxresdefault.jpg,0,False,False,public,https://www.youtube.com/watch?v=-W5ZX9KoE3Q,https://www.youtube.com/watch?v=-W5ZX9KoE3Q
46,When gRPC Met Python - Sanket Singh,https://www.youtube.com/watch?v=1PdugGTPE20,1PdugGTPE20,Python Italia,@PythonItalia,https://www.youtube.com/@PythonItalia,20220723,1892,715,18,,"distributedsystems,scaling",Entertainment,"When gRPC Met Python - PyCon Italia 2022

What if we can have a tool that helps us to do intelligent load balancing or What if we can do selective compression of the data and extremely fast and light weight transfer of data? Then let me introduce gRPC, the technology that helps us to do all of this and how can we integrate gRPC with Python.
gRPC is one of the most new breakthroughs in the world of client server interaction. Using gRPC our client can directly make a call to a server on a different machine as if it were a local object. gRPC has low latency, high scalability and supports multiple use cases for distributed system. We can even build mobile clients which can communicate to a cloud server. gRPC uses Protocol Buffers which is an open source mechanism for serialising structured data, which makes payloads faster, smaller and simpler.
In this talk we will try to understand how can we get started with gRPC in Python. grpcio package of python will be used for the demonstration of the examples and we will cover basics of gRPC as well. 
We will build a basic gRPC service and define protocol buffers for it. Demonstration of how a client and a server can be made through gRPC and how can they communicate.


Speaker: Sanket Singh",https://i.ytimg.com/vi/1PdugGTPE20/maxresdefault.jpg,0,False,False,public,https://www.youtube.com/watch?v=1PdugGTPE20,https://www.youtube.com/watch?v=1PdugGTPE20
47,Lightning talks - PyCon Italia 2022,https://www.youtube.com/watch?v=ahFAPmXsxvE,ahFAPmXsxvE,Python Italia,@PythonItalia,https://www.youtube.com/@PythonItalia,20220723,3918,65,1,,,Entertainment,Lightning talks - PyCon Italia 2022,https://i.ytimg.com/vi/ahFAPmXsxvE/maxresdefault.jpg,0,False,False,public,https://www.youtube.com/watch?v=ahFAPmXsxvE,https://www.youtube.com/watch?v=ahFAPmXsxvE
48,"Teaching Python: who, how and what - GIANFRANCO DURIN",https://www.youtube.com/watch?v=h2YsMzWi-0g,h2YsMzWi-0g,Python Italia,@PythonItalia,https://www.youtube.com/@PythonItalia,20220723,1692,39,0,,"education,teaching",Entertainment,"Teaching Python: who, how and what - PyCon Italia 2022

People consider Python the easiest languange to learn, and they are right, likely. Many students in (non-scientific) Universities think that learning Python is a nightmare, expecially if is mandatory.  
So, do we have the right strategies to bring our language to all? (I do not, but I am learning)
After a few years of courses I realized I (we?) need a strategy to teach Python properly.  While it is really exiting to teach PhD students how to make use of a script language in their own projects, it is really hard to show its beauty and opportunities  to second year students when they hardly have the concept of a folder, a variable, and if they have them, they are usually quite confused.
I would like to share my (little) experience, the good and the bad, so to make a few suggestions for a general and shared approach to teaching: should we introduce levels (A, B, C?), what are the best books to use, how to make exams?


Speaker: GIANFRANCO DURIN",https://i.ytimg.com/vi/h2YsMzWi-0g/maxresdefault.jpg,0,False,False,public,https://www.youtube.com/watch?v=h2YsMzWi-0g,https://www.youtube.com/watch?v=h2YsMzWi-0g
49,The Design of Everyday APIs - Lynn Root,https://www.youtube.com/watch?v=0qYDmm1O7hc,0qYDmm1O7hc,Python Italia,@PythonItalia,https://www.youtube.com/@PythonItalia,20220723,1687,1212,37,1.0,"abstractions,apis,bestpractice",Entertainment,"The Design of Everyday APIs - PyCon Italia 2022

What makes a good API for a library? Or more importantly, what makes it bad? This talk will discuss the principles of what goes into user-centered design, and how best to apply those principles when writing a Python library for fellow developers.
What makes a good API for a library? Or more importantly, what makes it bad? 

Implementing an API is an art. It's the connection between the user and the library itself. How can we optimize that connection to make the experience more pleasing? What makes a user reach for one library over another? What goes into an ergonomic API?

This talk will first discuss what makes an API good: documentation, simplicity, consistency, completeness, and flexibility. We will apply those elements by looking at developing and iterating on our own library.


Speaker: Lynn Root",https://i.ytimg.com/vi/0qYDmm1O7hc/maxresdefault.jpg,0,False,False,public,https://www.youtube.com/watch?v=0qYDmm1O7hc,https://www.youtube.com/watch?v=0qYDmm1O7hc
50,Standardising MLOps in a start-up with Dagster and PyTorch - PyCon Italia 2022,https://www.youtube.com/watch?v=MIhF6Fh0AXw,MIhF6Fh0AXw,Python Italia,@PythonItalia,https://www.youtube.com/@PythonItalia,20220723,1846,945,15,,"deeplearning,deployment/continuousintegration,machine-learning",Entertainment,"standardising MLOps in a start-up: an example using Dagster and PyTorch - PyCon Italia 2022

Good processes and toolings allow companies to adapt and strive with changing business requirements and short development cycles. Using Dagster, a new workflow engine, and PyTorch, we found the perfect match to guarantee reliable deployments with fast-changing models. Join us and find out how!
Extending a deep learning model beyond your dataset to make it available to multiple use-cases and stakeholders requires a structured workflow. Finding the proper workflow and tooling depends on your use case, but what happens when your use case is dynamic?

In a start-up, changing business requirements are standard, so change the inputs, outputs, and model types: the pipeline may be outdated by the time you have put a “model in production”.

With this talk, we want to show a pipeline based on Dagster, deployed on Kubernetes, and PyTorch, that adds little overhead when making models available to colleagues and projects with minimal requirements, making it flexible to handle very customized workflows if needed.


Speakers: Andrea Giardini, Lorenzo Riches",https://i.ytimg.com/vi/MIhF6Fh0AXw/maxresdefault.jpg,0,False,False,public,https://www.youtube.com/watch?v=MIhF6Fh0AXw,https://www.youtube.com/watch?v=MIhF6Fh0AXw
51,Genetic Algorithm from Scratch in Python - Davide Anghileri,https://www.youtube.com/watch?v=c-B5mIq04bg,c-B5mIq04bg,Python Italia,@PythonItalia,https://www.youtube.com/@PythonItalia,20220723,1737,3698,71,,"machine-learning,science",Entertainment,"Genetic Algorithm from Scratch in Python - PyCon Italia 2022

The Genetic Algorithm is an evolutionary algorithm inspired by Charles Darwin’s theory of natural selection. It may be one of the most popular biologically inspired algorithms. In this talk, you will discover how a genetic optimization algorithm works and how to implement it from scratch in Python.
Genetic Algorithm (GA) is a stochastic global search optimization algorithm inspired by the biological theory of evolution. It is commonly used to find solutions to search and optimization problems.

In this talk I will explain how GAs work going through a Python example implemented from scratch. I will show how the genetic algorithm, starting from a population of candidate solutions repeatedly evolves them toward better solutions trying to solve an optimization problem. I will illustrate a Python implementation of the main biologically inspired operators of GAs such as selection, crossover and mutation. Finally, I will mention limitations and variants of genetic algorithms.

After the talk, you will be able to implement your own genetic algorithm and apply it to solve a large variety of optimization problems, especially those that are not well suited for standard optimization techniques, like problems in which the objective function is non-differentiable or highly non-linear.


Speaker: Davide Anghileri",https://i.ytimg.com/vi/c-B5mIq04bg/maxresdefault.jpg,0,False,False,public,https://www.youtube.com/watch?v=c-B5mIq04bg,https://www.youtube.com/watch?v=c-B5mIq04bg
52,Sustainable Code Panel,https://www.youtube.com/watch?v=EzqEatqvF2A,EzqEatqvF2A,Python Italia,@PythonItalia,https://www.youtube.com/@PythonItalia,20220723,2927,47,0,,,Entertainment,"Sustainable Code Panel - PyCon Italia 2022



Speakers: Jessica Greene, Chris Adams, Uljan Sharka",https://i.ytimg.com/vi/EzqEatqvF2A/maxresdefault.jpg,0,False,False,public,https://www.youtube.com/watch?v=EzqEatqvF2A,https://www.youtube.com/watch?v=EzqEatqvF2A
53,Emmett: the web framework for inventors - Giovanni Barillari,https://www.youtube.com/watch?v=iyPkU0kZBSI,iyPkU0kZBSI,Python Italia,@PythonItalia,https://www.youtube.com/@PythonItalia,20220723,1567,315,12,1.0,"asyncio,open-source,rest",Entertainment,"Emmett: the web framework for inventors - PyCon Italia 2022

Great Scott! Is this 2022? But wait, did I wrongly set the temporal circuits of the DeLorean and went to 2012, or Python web developers are still stuck with Django and Flask? Martin! We ended up in a timeline without AsyncIO! Let's get back and fix it! And remember the plutonium!
An overview of Emmett's capabilities and features, and a few demonstrations on how the web framwork for inventors can help developers writing awesome applications in the AsyncIO era.


Speaker: Giovanni Barillari",https://i.ytimg.com/vi/iyPkU0kZBSI/maxresdefault.jpg,0,False,False,public,https://www.youtube.com/watch?v=iyPkU0kZBSI,https://www.youtube.com/watch?v=iyPkU0kZBSI
54,Self-explaining APIs - Roberto Polli,https://www.youtube.com/watch?v=gkMlzAal-tk,gkMlzAal-tk,Python Italia,@PythonItalia,https://www.youtube.com/@PythonItalia,20220723,1815,67,1,,"apis,bestpractice,datastructures,rest",Entertainment,"Self-explaining APIs - PyCon Italia 2022

To mash up various APIs you need data to have a well defined meaning: imagine meshing up healthcare APIs using different units for human temperature, or financial APIs using different currencies.

This talk describes strategies and python tools to overcome these problems in large API ecosystems.
This talk will present strategies and python tools to create semantically interoperable REST APIs.
After the problem statement, various solutions will be presented, including:
- contract-first api development with OpenAPI 3, ontologies, controlled vocabularies;
- the rdflib and pyld python libraries;
- the use of centralized catalogs.

[Very draft slides here](


Speaker: Roberto Polli",https://i.ytimg.com/vi/gkMlzAal-tk/maxresdefault.jpg,0,False,False,public,https://www.youtube.com/watch?v=gkMlzAal-tk,https://www.youtube.com/watch?v=gkMlzAal-tk
55,Trojan Source - Can we trust open-source anymore? - Cheuk Ho,https://www.youtube.com/watch?v=OuXxWYPBxW4,OuXxWYPBxW4,Python Italia,@PythonItalia,https://www.youtube.com/@PythonItalia,20220723,1604,36,0,,"bestpractice,community,open-source,security",Entertainment,"Trojan Source - Can we trust open-source anymore? - PyCon Italia 2022

Recently, a paper is published to demonstrate how a visibly valid contribution can contain malicious code by exporting the Unicode control characters. Some of these attacks has been tested on Python and it works. Shall the Python and open-source communities be concerned?
Background:

After researchers at the University of Cambridge published a paper( about a malicious attack named Trojan Source, which exploited the fact that some program interpreters, like CPython, can handle Unicode. This has caused concerns in the open-source community about the malicious contribution that looks totally legitimate in human eyes but contain invisible attacks. As a member of the Python community, we should all be aware of that and understand how we can prevent this attack to happen.

About this talk:

In this talk, Cheuk will decode the finding in this paper to a level that can be understood by everyone. She will start with a joke example who you can mess up someone by using Unicode. She will then explain what is Unicode and why it causes trouble. Afterwards, she will explain the Python examples( in the paper and why it can be dangerous. Lastly, she will open up a discussion on how we should defend ourselves from those attacks and what we can do as a community.

Outline (30 mins talk):

**5 minutes - Introduction, the opening of the talk

In this session, Cheuk will ask audiences to debug a code snippet that looks absolutely fine but will not work as code. She will explain that this is the same concept used in Trojan Source.

**10 mins - What is Unicode

In this session, Cheuk will give an introduction about what is Unicode, what it is to a computer and why we need Unicode in computers. She will also explain how the benefit of having Unicode can also be a downfall to make us vulnerable to the Trojan Source attack.

**10 mins - How Trojan Source works in Python

In this session, Cheuk will show a few examples using the Trojan Source in legitimate Python code. She will point out how the attack is hiding in the source code and in what cases it can be dangerous.

**5 mins - How to protect ourselves

In this session, Cheuk will open the discussion and make a few suggestions of how we can protect ourselves as a community. This will lead to the Q&A session where the audience can weigh in on their own thought.

Target audiences

From those who are curious to maintainers of open-source libraries. This is the knowledge we should all know and be aware of. Cheuk will explain in a way that expects no prior knowledge is needed.

What will audiences learn

About Trojan Source attacks and how it works. They may also learn about how interpreters, especially Python interpreters, works with Unicode. Plus, they may have increased awareness about security in the open-source world.


Speaker: Cheuk Ho",https://i.ytimg.com/vi/OuXxWYPBxW4/maxresdefault.jpg,0,False,False,public,https://www.youtube.com/watch?v=OuXxWYPBxW4,https://www.youtube.com/watch?v=OuXxWYPBxW4
56,Nowcasting financial crisis with deep learning techniques - Pelucchi Mauro,https://www.youtube.com/watch?v=EN1Pm_cJ3ao,EN1Pm_cJ3ao,Python Italia,@PythonItalia,https://www.youtube.com/@PythonItalia,20220723,1871,478,5,,"bigdata,machine-learning",Entertainment,"Nowcasting financial crisis with deep learning techniques - PyCon Italia 2022

In this tutorial, I'll show how train machine learning models to predict a financial crisis event in the next 20 days.
Specifically, we'll speak about:
- preparation of the dataset
- selection of variables with RandonForest  and Boruta
- training and the predictions
- measure of our performances
This tutorial shows how apply Regression Models and Deep Learning Models to 
nowcasting stock markets crisis events.
Specifically, we'll how the transmission mechanisms across stock markets can 
be used to train machine learning models to predict crisis events. The tutorial'll show 
the entire pipeline: from the preparation of the dataset,
how balance observations and how measure our performances. Here the git repo of the talk: 


Speaker: Pelucchi Mauro",https://i.ytimg.com/vi/EN1Pm_cJ3ao/maxresdefault.jpg,0,False,False,public,https://www.youtube.com/watch?v=EN1Pm_cJ3ao,https://www.youtube.com/watch?v=EN1Pm_cJ3ao
57,"Ideas, Visions and Reality: Looking back on 20 years of community work - Marc-André Lemburg",https://www.youtube.com/watch?v=5Wi27mKXw3Y,5Wi27mKXw3Y,Python Italia,@PythonItalia,https://www.youtube.com/@PythonItalia,20220723,1876,27,0,,"bestpractice,community,conferencesandmeet-ups,education",Entertainment,"Ideas, Visions and Reality: Looking back on 20 years of community work - PyCon Italia 2022

Python has become very important for many of us - as the basis for making a living, as a way to enjoy programming, or to bring people together.

I'd like to take you on a tour through my two decades of community work and hopefully inspire some of you to contribute to the community as well.
Python has become a very important part of life for many of us - as the basis for making a living, as a way to enjoy programming, or as a project which brings together people. I've had the opportunity to work in all these fields in the last two decades and have learned a lot.
 
In this talk I'd like to take you on a tour, share some of the insights I have gained and hopefully inspire some of you to contribute to the community as well.

PDF of the talk slides: 


Speaker: Marc-André Lemburg",https://i.ytimg.com/vi/5Wi27mKXw3Y/maxresdefault.jpg,0,False,False,public,https://www.youtube.com/watch?v=5Wi27mKXw3Y,https://www.youtube.com/watch?v=5Wi27mKXw3Y
58,Python Italia Yearly Meeting - PyCon Italia 2022,https://www.youtube.com/watch?v=a1x7Q6yQRtY,a1x7Q6yQRtY,Python Italia,@PythonItalia,https://www.youtube.com/@PythonItalia,20220723,2340,47,2,,,Entertainment,Python Italia Yearly Meeting - PyCon Italia 2022,https://i.ytimg.com/vi/a1x7Q6yQRtY/maxresdefault.jpg,0,False,False,public,https://www.youtube.com/watch?v=a1x7Q6yQRtY,https://www.youtube.com/watch?v=a1x7Q6yQRtY
59,Python has a macro language: it's Python - Tin Tvrtkovic,https://www.youtube.com/watch?v=UYRSixikUTo,UYRSixikUTo,Python Italia,@PythonItalia,https://www.youtube.com/@PythonItalia,20220723,1427,736,10,1.0,"compilerandinterpreters,performance",Entertainment,"Python has a macro language: it's Python - PyCon Italia 2022

A small but growing number of Python projects, including `attrs`, `cattrs` and `incant`, use Python to generate Python.

We will example concrete cases of code generation in these libraries and go over the 'how' and the 'why'.
Macros in mainstream languages are generally a tool for metaprogramming, probably the most famous examples being preprocessor directives in C and C++, and Rust macros.

Python has rich metaprogramming capabilities baked in through the compile and eval built-in functions, although a little care needs to be taken for the generated code to be debuggable and properly shown in track staces.

We will examine one concrete example of metaprogramming in each of the attrs, cattrs and incant libraries.


Speaker: Tin Tvrtkovic",https://i.ytimg.com/vi/UYRSixikUTo/maxresdefault.jpg,0,False,False,public,https://www.youtube.com/watch?v=UYRSixikUTo,https://www.youtube.com/watch?v=UYRSixikUTo
60,Efficient computer vision on edge devices: How we guide blind people using Python - Vollmer,https://www.youtube.com/watch?v=YrkqAbR8oNM,YrkqAbR8oNM,Python Italia,@PythonItalia,https://www.youtube.com/@PythonItalia,20220723,1730,188,4,,"cpython,multi-processing,numpy,performance",Entertainment,"Efficient computer vision on edge devices: How we guide blind people using Python - PyCon Italia 2022

In real-life environments, performance and delay of algorithms matter. biped is an AI copilot that guides blind people with limited computation capabilities. In this talk we show how we dropped computation time by a factor of four relying on profiling, algorithmic design, multi-threading and Cython.
biped aims to bring autonomous driving capabilities to the human level, to safely guide blind and visually impaired people in the street. The device acquires 3D images and then detects, tracks and predicts trajectories of all surrounding elements, before warning the user via spatial sounds. In the process of working on this project we realized that for most problems that we encountered there is already an existing algorithm that roughly fits our requirements. The majority of the existing solutions though only work well on very powerful machines with dedicated GPUs. This is especially true for algorithms from the domain of Computer Vision.  

Making the same algorithm work on computationally limited devices, like a Raspberry Pi, opens up a new set of interesting and non-trivial problems. In this talk we want to explore some options to adjust new or existing algorithms to computationally constrained environments to make them work in the real world. We want to show some common pitfalls as well as best practices to optimize algorithms build with Numpy, OpenCV and Python. Furthermore we want to give a swift overview over system and algorithmic design decisions as well as what options exist to profile Python code. 

To make it easier to understand the ideas and concepts and to follow along we will showcase some examples of our work at biped during the presentation. By presenting some algorithms of our perception pipeline, we can showcase some of the key aspects for the modelling and implementation of algorithms. In particular, we present how we implement the detection of ground in an image and how we optimized the algorithm to go from roughly two FPS to nearly real-time. We conclude the talk with a brief demonstration of the capabilities of our whole perception pipeline and discuss the performance we achieved by applying the ideas introduced in this talk.


Speaker: Vollmer",https://i.ytimg.com/vi/YrkqAbR8oNM/maxresdefault.jpg,0,False,False,public,https://www.youtube.com/watch?v=YrkqAbR8oNM,https://www.youtube.com/watch?v=YrkqAbR8oNM
61,Everything You Always Wanted to Know About Async But Were Afraid to Ask (cit.) - Deusebio,https://www.youtube.com/watch?v=QOY1VVUN0IM,QOY1VVUN0IM,Python Italia,@PythonItalia,https://www.youtube.com/@PythonItalia,20220723,1796,175,2,,"asyncio,cleancode,functionalprogramming",Entertainment,"Everything You Always Wanted to Know About Async But Were Afraid to Ask (cit.) - PyCon Italia 2022

In this talk, we will dig in the marvelous world of sync/async/parallel computation. And show you how to define abstract computation upfront lazily using Promises, deferring execution subsequently and throttling the computation as you please. After this, async processing won't have any secret to you
I still remember when during an interview for a Junior Data Scientist position, I was asked about async and when to use it. I was buffled. And - I must say - after learning about these concepts, they are not that hard. Nevertheless, still mysterious to some. In this talk, after explaining some basic concepts about asynchronous processing and reviewing the most important Pythonic packages to be used in the async context, we will gently introduce some notions of functional programming and - most of all - one of its most useful tool for async operations: the Promise monad. Thanks to this, we will then be able to create, compose and chain abstract computations together, therefore defining what we want to do, without actually doing it yet. Acting lazily, its execution will rather be deferred to a second moment, where we will make use of async and parallel framework to speed up and parallelise execution. We will also show you how to throttle the execution, a need that often arises when dealing with rate-limited services and/or avoid overloading external component or resources. The talk will be accompanied by the help of a simple Github repo that will have examples and (hopefully) useful utility functions that will allow you to approach the asynchronous world more easily and seamlessly.


Speaker: Deusebio",https://i.ytimg.com/vi/QOY1VVUN0IM/maxresdefault.jpg,0,False,False,public,https://www.youtube.com/watch?v=QOY1VVUN0IM,https://www.youtube.com/watch?v=QOY1VVUN0IM
62,Rilasciare software di valore e in maniera continua. Si può!,https://www.youtube.com/watch?v=t2izX1vf-Dg,t2izX1vf-Dg,Python Italia,@PythonItalia,https://www.youtube.com/@PythonItalia,20220723,2777,136,3,,,Entertainment,"Rilasciare software di valore e in maniera continua. Si può! - PyCon Italia 2022



Speakers: Fabio Mora, Serena Sensini, Raffaele Colace, Filippo Morelli",https://i.ytimg.com/vi/t2izX1vf-Dg/maxresdefault.jpg,0,False,False,public,https://www.youtube.com/watch?v=t2izX1vf-Dg,https://www.youtube.com/watch?v=t2izX1vf-Dg
63,Writing async microservices in Python - Iacopo Spalletti,https://www.youtube.com/watch?v=lvh3dMtviwQ,lvh3dMtviwQ,Python Italia,@PythonItalia,https://www.youtube.com/@PythonItalia,20220723,2102,382,3,,"asyncio,microservices",Entertainment,"Writing async microservices in Python - PyCon Italia 2022

Writing an async microservice is a good way to improve the concurrency of your platform and decouple the different components of a web platform, Python provides excellent tools to write them and we're going to introduce some of them for you to immediately start creating your own.
While not exactly new, async programming has arrived quite recently in the Python core. This enabled to create a wide ecosystem of async-first or async-enabled libraries and frameworks that makes async programming more available to the everyday developer.
Writing an async microservice is a good way to get your hands dirty with async programming: we are going to see how to build it using FastAPI and its ecosystem to show tecniques and pitfalls.

Slides: 


Speaker: Iacopo Spalletti",https://i.ytimg.com/vi/lvh3dMtviwQ/maxresdefault.jpg,0,False,False,public,https://www.youtube.com/watch?v=lvh3dMtviwQ,https://www.youtube.com/watch?v=lvh3dMtviwQ
64,Optimal design & control of a telecommunications network - Andi Dulla,https://www.youtube.com/watch?v=6koN5uxKx1U,6koN5uxKx1U,Python Italia,@PythonItalia,https://www.youtube.com/@PythonItalia,20220723,1427,34,0,,"abstractions,architecture,casestudy,communication",Entertainment,"Optimal design & control of a telecommunications network - PyCon Italia 2022

Everyone wants to go faster on the Internet, or design faster networks. You can throw a lot of money to it or you can squeeze every bit from it.
I'll show through a research project how can we do the latter and create better networks.
These two years have shown big weaknesses in the design and usage of the Internet and many other important enterprise networks. A good Quality of Experience and cost-effectiveness are paramount for network operators and designers. Enter optimal design and control... Through the use of optimal control it's possibile to double the performance with respect to how it's operated today, furthermore it allows us to better organize the network in order to minimally distrupt the users in the event of a failure. I'll show through two examples the algorithms, the theory behind them and the code.


Speaker: Andi Dulla",https://i.ytimg.com/vi/6koN5uxKx1U/maxresdefault.jpg,0,False,False,public,https://www.youtube.com/watch?v=6koN5uxKx1U,https://www.youtube.com/watch?v=6koN5uxKx1U
65,Introduction to Network Analysis by Analyzing Characters in Harry Potter Fanfiction - Sara Jakša,https://www.youtube.com/watch?v=UYxX4c97iAc,UYxX4c97iAc,Python Italia,@PythonItalia,https://www.youtube.com/@PythonItalia,20220723,1526,122,2,,analytics,Entertainment,"Introduction to Network Analysis by Analyzing Characters in Harry Potter Fanfiction - PyCon Italia 2022

Is Ginny considered the best girl for Harry? Do Hermione and Snape really go well together? In this talk, I will go through the process of analyzing the tags data from the fanfiction website, which might help answer these and some similar questions.
In the more and more globalized world, network analysis is becoming more and more prominent in helping us realize how different people and things are connected. Let it be how the power grid will need to change, to accommodate the move to renewable sources or how the different political and corporate actors are connected, explaining why some changes can happen as some do not.

Or it can be done to answer some other, in some way just as interesting. Is Ginny considered the best girl for Harry? Do Hermione and Snape really go well together? And many more.

In this talk, I will go through the process of analyzing the tags data from the fanfiction website. I will go through the formatting of the data for analysis with the networkx library, some simple analysis and the visualization of the data.

I will not assume any network analysis knowledge, but I will assume that you are comfortable programming in Python on a level, that if you need to create a quick script, you could do it easily.

Slides: 


Speaker: Sara Jakša",https://i.ytimg.com/vi/UYxX4c97iAc/maxresdefault.jpg,0,False,False,public,https://www.youtube.com/watch?v=UYxX4c97iAc,https://www.youtube.com/watch?v=UYxX4c97iAc
66,Testing Documentation - Alessandro Molina,https://www.youtube.com/watch?v=mzTLccpsw30,mzTLccpsw30,Python Italia,@PythonItalia,https://www.youtube.com/@PythonItalia,20220723,1859,171,1,,,Entertainment,"Testing Documentation - PyCon Italia 2022



Speaker: Alessandro Molina",https://i.ytimg.com/vi/mzTLccpsw30/maxresdefault.jpg,0,False,False,public,https://www.youtube.com/watch?v=mzTLccpsw30,https://www.youtube.com/watch?v=mzTLccpsw30
67,"MongoDB and Python, a Perfect Match - Joel Lord",https://www.youtube.com/watch?v=fZG0Jif5bLQ,fZG0Jif5bLQ,Python Italia,@PythonItalia,https://www.youtube.com/@PythonItalia,20220723,1760,88,1,,"apis,databases,mongodb",Entertainment,"MongoDB and Python, a Perfect Match - PyCon Italia 2022

Any modern web application needs a database. Why hassle with an old database when you can easily use modern technology? MongoDB works perfectly well with Python. Learn how in this talk.
Is your application looking for a database to hang out with? Search no more! MongoDB and Python are a perfect match. By leveraging the native Python driver, accessing a MongoDB database is easier than ever. In this presentation, the attendees will learn what a document database is and how to use it.


Speaker: Joel Lord",https://i.ytimg.com/vi/fZG0Jif5bLQ/maxresdefault.jpg,0,False,False,public,https://www.youtube.com/watch?v=fZG0Jif5bLQ,https://www.youtube.com/watch?v=fZG0Jif5bLQ
68,"Patti chiari, amicizia lunga. Disaccoppiamo lo sviluppo con test di contratto - Daniele Pompa",https://www.youtube.com/watch?v=uPNTrTZM_Y8,uPNTrTZM_Y8,Python Italia,@PythonItalia,https://www.youtube.com/@PythonItalia,20220723,1786,27,1,,"apis,django,docker,javascript,testing",Entertainment,"Patti chiari amicizia lunga. Come disaccoppiamo lo sviluppo tramite i test di contratto - PyCon Italia 2022

Front-end, vi è mai capitato che nonostante vi siate messi d’accordo con il back-end l’endpoint non vi espone qualcosa? Noi abbiamo risolto utilizzando il Contract testing, vi mostrerò i vantaggi e alcuni casi reali di come scrivere un patto aiuta a rendere più semplice lo sviluppo per tutti.
Quando sono entrato in 20tab l’azienda seguiva già le metodologie Lean e Agile ed era composta principalmente da sviluppatori Python/Django. 
Quando abbiamo deciso di disaccoppiare i servizi (back-end in Django e front-end in React JS) siamo andati incontro a difficoltà dovute ai differenti tempi di sviluppo o limiti tecnici.
Come prima soluzione avevamo provato con alternare lo sviluppo dei due servizi prima iniziava il back-end, una volta completato partiva lo sviluppo front-end.
Questo ci rendeva inefficienti a volte i dati che arrivavano al front-end erano insufficienti o eccessivi rispetto all’interfaccia che doveva costruire.
Quindi abbiamo provato a dettagliare con maggior rigore tutti i requisiti tecnici necessari per partire in parallelo, ma lato front-end dovevamo sempre costruirci un server finto per procedere con lo sviluppo.
In questo ci è venuto incontro il contract testing, entrambi i rappresentanti dei servizi si riuniscono prendono il design lo analizzano insieme e il front-end scrive un test di contratto dopo di che entrambi i servizi possono procedere con i rispettivi sviluppi in maniera svincolata tra di loro.
Il front-end può sfruttare il pact-stub-server per scrivere test funzionali con cypress e per lavorare senza neanche tirare su il servizio back-end.
Questo ha portato il front-end a riorganizzare il proprio template, ora abbiamo 3 tipi di test diversi, quelli unitari sui componenti, quelli funzionali con cypress e quelli di contratto con Pact JS. Tutti questi test tramite Docker vengono eseguiti nelle nostre pipeline e bloccano il nostro processo di deploy in caso di fallimento.

Slide: 


Speaker: Daniele Pompa",https://i.ytimg.com/vi/uPNTrTZM_Y8/maxresdefault.jpg,0,False,False,public,https://www.youtube.com/watch?v=uPNTrTZM_Y8,https://www.youtube.com/watch?v=uPNTrTZM_Y8
69,Event Driven Applications with Flask and Kafka - Francesco Tisiot,https://www.youtube.com/watch?v=hfi_ALPlsOQ,hfi_ALPlsOQ,Python Italia,@PythonItalia,https://www.youtube.com/@PythonItalia,20220723,1775,2732,35,5.0,"bigdata,development,flask,open-source",Entertainment,"Event Driven Applications with Flask and Kafka - PyCon Italia 2022

Let's build an event driven application together! Using Flask as framework we'll add the powerful Apache Kafka, a streaming platform, as backend... all live on stage! Join to understand how to integrate your application with Apache Kafka!
Solid event driven applications are based on a widely adopted coding framework and a resilient data streaming technology. While Flask is a common choice for the framework, a wise selection of the backend data systems can bring benefits in terms of ease of integration and performances.

In this session we will explore Apache Kafka, a data streaming platform, that enables reliable real-time data integration for your event driven application. We will look at the types of problems that Kafka is best at solving, and show how to use it in your own applications. We'll then take a look at Kafka in action, by creating a Flask web application.

After understanding how to produce and consume events from Apache Kafka, we'll then introduce Kafka Connect, a selection of pre-built connectors making Apache Kafka your only backend interface, no matter where your data originally sits.

If you're using Flask, and want to understand how to make your application event driven by integrating it with the most used streaming technology, this session is for you!




Speaker: Francesco Tisiot",https://i.ytimg.com/vi/hfi_ALPlsOQ/maxresdefault.jpg,0,False,False,public,https://www.youtube.com/watch?v=hfi_ALPlsOQ,https://www.youtube.com/watch?v=hfi_ALPlsOQ
70,Smart Home: l’AI applicata al benessere della persona - Serena Palazzo,https://www.youtube.com/watch?v=7-NesFXrego,7-NesFXrego,Python Italia,@PythonItalia,https://www.youtube.com/@PythonItalia,20220723,1530,52,0,,,Entertainment,"Smart Home: l’AI applicata al benessere della persona - PyCon Italia 2022



Speaker: Serena Palazzo",https://i.ytimg.com/vi/7-NesFXrego/maxresdefault.jpg,0,False,False,public,https://www.youtube.com/watch?v=7-NesFXrego,https://www.youtube.com/watch?v=7-NesFXrego
71,Inclusive community leadership - Jessica Greene,https://www.youtube.com/watch?v=5Oi71ji6G8c,5Oi71ji6G8c,Python Italia,@PythonItalia,https://www.youtube.com/@PythonItalia,20220723,3441,70,0,,,Entertainment,"Inclusive community leadership - PyCon Italia 2022

What does an inclusive community look like and how can we be inclusive leaders within it? Community leadership can take many forms, from organizing events, sharing knowledge, to advocating for other members and connecting them to opportunities. Communities look to their leaders to set the tone of the space so it is, therefore, their responsibility to ensure a continued space that is safe for all its members to thrive. Leadership should also be sustainable so recognizing and supporting the growth of new leaders is important. My journey as a community leader began after attending a PyLadies Berlin meetup in 2018. As a career changer, my motivation was to immerse myself in a space where I could learn and meet others in a position similar to my own. Inspired by other community leaders and conversations with other members, it soon became my goal to not only nourish my own growth but also that of those around me however I could. Witnessing the change which we create within the community has shown me that responsibility also lies with the wider tech community to support its leaders, who not only add immense value to their respective communities but reach far beyond them to make the industry a better place for all. The labor we pour into the community is essential to fostering inclusive work environments as gender parity (and other forms of representation) is still severely lacking especially at a decision-making level at most tech companies. It is this bridge between community and companies that I have been reflecting on and hope to now influence. Through the lens of my experience in the PyLadies community and beyond, sharing both my insights and those gained through interactions with other members, I will reflect on what it means to be an inclusive leader and how a community can stay true to these principles while growing and evolving. This talk aims to inspire folks to take up leadership roles in their communities while also celebrating those already putting in the work.

Speaker: Jessica Greene",https://i.ytimg.com/vi/5Oi71ji6G8c/maxresdefault.jpg,0,False,False,public,https://www.youtube.com/watch?v=5Oi71ji6G8c,https://www.youtube.com/watch?v=5Oi71ji6G8c
72,Structural Pattern Matching in the Real World - Raymond Hettinger,https://www.youtube.com/watch?v=ZTvwxXL37XI,ZTvwxXL37XI,Python Italia,@PythonItalia,https://www.youtube.com/@PythonItalia,20220723,1974,9818,211,8.0,,Entertainment,"Structural Pattern Matching in the Real World - PyCon Italia 2022

Speaker: Raymond Hettinger",https://i.ytimg.com/vi/ZTvwxXL37XI/maxresdefault.jpg,0,False,False,public,https://www.youtube.com/watch?v=ZTvwxXL37XI,https://www.youtube.com/watch?v=ZTvwxXL37XI
73,Come gestire dinamicamente un database tramite microservizi - Daniele Carigi,https://www.youtube.com/watch?v=PnFClaI6Fsk,PnFClaI6Fsk,Python Italia,@PythonItalia,https://www.youtube.com/@PythonItalia,20220723,1878,227,2,1.0,,Entertainment,"Come gestire dinamicamente un database tramite microservizi - PyCon Italia 2022



Speaker: Daniele Carigi",https://i.ytimg.com/vi/PnFClaI6Fsk/maxresdefault.jpg,0,False,False,public,https://www.youtube.com/watch?v=PnFClaI6Fsk,https://www.youtube.com/watch?v=PnFClaI6Fsk
74,Python Robo-Advisor: Come uso Python per gestire i mie risparmi - Damiano Dotto,https://www.youtube.com/watch?v=T92RDzV-IfI,T92RDzV-IfI,Python Italia,@PythonItalia,https://www.youtube.com/@PythonItalia,20220723,1704,404,6,,"datastructures,education,staticanalysis",Entertainment,"Python Robo-Advisor: Come uso Python per gestire i mie risparmi - PyCon Italia 2022

Si parla tanto di libertà finanzia e di non lasciare marcire i risparmi in banca e allora perché non usare le nostre competenze da developer e le librerie di Python per creare un portafoglio basato su algoritmi e dati quantitativi?
Oggi giorno si sente sempre di più parlare di libertà finanziaria, concetto un po' utopico a mio avviso. 
Sono un programmatore ""comune"" e tendo spesso ad essere pratico più che teorico (so che anche tu non leggi la documentazione prima di scrivere codice ;) )! 
Ti mostrerò in maniera concreta come è possibile sfruttare le nostre conoscenze di programmazione
per poter assumere un ""consulente finanziario fedele"" (così mi piace definirlo) che prenda decisioni obiettive per gestire al meglio i nostri risparmi sui mercati finanziari.
In 30 minuti, vedremo assieme come costruirci un robot automatico che ci permetta di testare, validare, ottimizzare una strategia di trading automatico con un esempio REALE, statistico e basato sui dati.


Speaker: Damiano Dotto",https://i.ytimg.com/vi/T92RDzV-IfI/maxresdefault.jpg,0,False,False,public,https://www.youtube.com/watch?v=T92RDzV-IfI,https://www.youtube.com/watch?v=T92RDzV-IfI
75,Everything You Know About MongoDB is Wrong - Mark Smith,https://www.youtube.com/watch?v=YSL9Q9-3owY,YSL9Q9-3owY,Python Italia,@PythonItalia,https://www.youtube.com/@PythonItalia,20220723,1398,118,2,,,Entertainment,"Everything You Know About MongoDB is Wrong - PyCon Italia 2022

MongoDB is webscale, right? It's a JSON database, it's eventually consistent. Oh, and it's insecure.

Let me clear up some things: MongoDB is an ACID-compliant database with transactions, schemas & relationships. It includes a powerful aggregation query language. MongoDB doesn't store JSON, and nowadays it comes with pretty good security defaults (we think).

I'll cover all of this and more, so you know what you need to, if you're considering MongoDB for your next (or current) project.

Speaker: Mark Smith",https://i.ytimg.com/vi/YSL9Q9-3owY/maxresdefault.jpg,0,False,False,public,https://www.youtube.com/watch?v=YSL9Q9-3owY,https://www.youtube.com/watch?v=YSL9Q9-3owY
76,Intervista Pythonista con Fabio Pliger 🐍🎙,https://www.youtube.com/watch?v=l5-ecdsBaHE,l5-ecdsBaHE,Python Italia,@PythonItalia,https://www.youtube.com/@PythonItalia,20220723,1806,117,6,1.0,,Entertainment,"Intervista Pythonista con Fabio Pliger 🐍🎙 - PyCon Italia 2022

Partecipa ad un episodio di Intervista Pythonista registrato dal vivo! Marco Santoni e Cesare Placanica intervisteranno Fabio Pliger, Principal Software Architect ad Anaconda, inc!

Scopri di più su Intervista Pythonista su intervistapythonista.com e su Fabio ed il suo keynote a PyCon Italia sul nostro sito!

Speakers: Fabio Pliger, Marco Santoni, Cesare Placanica",https://i.ytimg.com/vi/l5-ecdsBaHE/maxresdefault.jpg,0,False,False,public,https://www.youtube.com/watch?v=l5-ecdsBaHE,https://www.youtube.com/watch?v=l5-ecdsBaHE
77,Python's Life of the Brain - Dominik Krzeminski,https://www.youtube.com/watch?v=yekdJLe1IS8,yekdJLe1IS8,Python Italia,@PythonItalia,https://www.youtube.com/@PythonItalia,20220723,1750,49,0,,"casestudy,education,open-source,tooling,visualization",Entertainment,"Python's Life of the Brain - PyCon Italia 2022

In this talk, you will learn how to analyse the data coming from the human brain, how to visualise and process individual neurons, how to design customised cognitive experiments and finally how to create your own brain from scratch in jupyter notebook!
There is no need to praise Python for its ubiquitousness in various areas of industry or science. We all know about Python applications to engineering, web development, data analysis, or machine learning. But an emerging number of packages appear that allow scientists and brain research enthusiasts to analyse the data coming from the brain, visualise and process individual neurons from various brain areas, design customised cognitive experiments and finally simulate the whole brain in silico! In this talk, you’ll learn how to do that, without leaving your jupyter notebook.


Speaker: Dominik Krzeminski",https://i.ytimg.com/vi/yekdJLe1IS8/maxresdefault.jpg,0,False,False,public,https://www.youtube.com/watch?v=yekdJLe1IS8,https://www.youtube.com/watch?v=yekdJLe1IS8
78,Linting Python The Elegant Way - Riya Bansal,https://www.youtube.com/watch?v=S7LO09WId20,S7LO09WId20,Python Italia,@PythonItalia,https://www.youtube.com/@PythonItalia,20220723,1563,157,1,,"bestpractice,cleancode,codeanalysis,community,development",Entertainment,"Linting Python The Elegant Way - PyCon Italia 2022

This talk is for those people who know basic python but are looking forward to writing better and cleaner python code. Python has always been known for its easy-to-understand syntax. This talk will empower all developers and give perspective on how can you write code in a much more elegant way.
Linting is the automated checking of your source code for programmatic and stylistic errors. Linters analyze source code to flag programming errors, bugs, stylistic errors, and suspicious constructs. This is done by using a lint tool. Python being one of the most elegant language has got a wide variety of listing tools available that can help programmers in Code formatting and styling their code in the best suitable form. Python has got some advance listing tools like pylint and flake8. In this talk we will have a great deal of discussion around how these linters can be used and how these tools can help you find more bugs and improve your code quality. These linting tools finds problems that are typically caught by a compiler for less dynamic languages. We will also discuss about how can we manage import orders, code formatting, checking security vulnerabilities, managing dependencies etc using these tools. There are also code analysis tools that provide other insights into your code. While maybe not linters by definition, these tools are usually used side-by-side with linters. They too hope to improve the quality of the code.
It’s useful to have linters run against your code frequently. If automation and consistency aren’t there, it’s easy for a large team or project to lose sight of the goal and start creating lower-quality code.

Attendees will be able to learn
1. What is a linter?
2. Famous linting solutions like pylint and flake 8
3. Use cases like ordering imports, finding error bugs
4. Managing dependency in python with these linter tools.


Speaker: Riya Bansal",https://i.ytimg.com/vi/S7LO09WId20/maxresdefault.jpg,0,False,False,public,https://www.youtube.com/watch?v=S7LO09WId20,https://www.youtube.com/watch?v=S7LO09WId20
79,Building GraphQL APIs using Python and Type Hints - Patrick Arminio,https://www.youtube.com/watch?v=SbM_k1YQZMk,SbM_k1YQZMk,Python Italia,@PythonItalia,https://www.youtube.com/@PythonItalia,20220723,1855,256,4,,graphql,Entertainment,"Building GraphQL APIs using Python and Type Hints - PyCon Italia 2022

GraphQL is an awesome technology that allows to build type safe APIs. In this talk we'll learn how GraphQL works and how we can use Python's type hints to create GraphQL APIs.
GraphQL is a technology to create web APIs that has become quite popular in the past years. In this talk we'll see in detail what GraphQL is, why it exists and why you should use it.

We'll also see how we can implement a GraphQL API using Strawberry and Python's type hints. We'll see why type hints make a lot of sense for GraphQL and what kind of issue you might encounter writing GraphQL APIs.

By the end of the talk you'll know what GraphQL is, how to implement a basic GraphQL API using Python and what to look out for when working with GraphQL in production.

Target audience: python developers with familiarities of web APIs (like REST). some knowledge of type hints might be useful


Speaker: Patrick Arminio",https://i.ytimg.com/vi/SbM_k1YQZMk/maxresdefault.jpg,0,False,False,public,https://www.youtube.com/watch?v=SbM_k1YQZMk,https://www.youtube.com/watch?v=SbM_k1YQZMk
80,"Python Developers vs UX/UI Designer, incontri e scontri - Virginia Capoluongo",https://www.youtube.com/watch?v=8N_iVwyDZoY,8N_iVwyDZoY,Python Italia,@PythonItalia,https://www.youtube.com/@PythonItalia,20220723,1990,35,2,,"agile,development",Entertainment,"Python Developers vs UX/UI Designer, incontri e scontri - PyCon Italia 2022

Racconto la mia esperienza come UX/UI Designer che da 4 anni collabora con un team di sviluppatori Python, due mondi affini che possono però sentirsi distanti e parlare lingue differenti. Come, con un po' di impegno, siamo riusciti a trovare un equilibrio fra call, metodologie e qualche birra.
Racconto la mia esperienza con un team di sviluppatori Python. Quando quattro anni fa ho iniziato a collaborare con loro ho sentito per la prima volta parlare di Django, Agile, DevOps... arabo per me che venivo da un mondo di colori e creatività.
Come designer avevo sempre lavorato da freelance con sviluppatori e agenzie, progettando interfacce che venivano poi implementate, in molti casi il mio lavoro finiva con la consegna del mockup che veniva ""dato in pasto"" a sviluppatori nella maggior parte dei casi sconosciuti. 

Lavorando in un team coordinato e collaborativo siamo riusciti a trovare dei punti di incontro fra design thinking e continuous delivery, inserendo nel processo una fase di discovery che include indagini e co-design per migliorare i prodotti e l'esperienza degli utenti.


Speaker: Virginia Capoluongo",https://i.ytimg.com/vi/8N_iVwyDZoY/maxresdefault.jpg,0,False,False,public,https://www.youtube.com/watch?v=8N_iVwyDZoY,https://www.youtube.com/watch?v=8N_iVwyDZoY
81,Managing large-scale ML pipelines with MLflow and serverless computing. - ilyas chaoua,https://www.youtube.com/watch?v=8AkqF99tkXg,8AkqF99tkXg,Python Italia,@PythonItalia,https://www.youtube.com/@PythonItalia,20220723,1818,125,4,,"architecture,aws,bestpractice,deeplearning,devops,docker,infrastructure,machine-learning,open-source,operations,packaging,performance,scaling",Entertainment,"Managing large-scale Machine Learning pipelines with MLflow and serverless computing. - PyCon Italia 2022

MLOps aims to manage the machine learning (ML) lifecycle including experimentation, reproducibility, deployment, and model registry. Come to discover how in Vedrai - one of the top AI startups in Europe - we enhance and maintain ML pipelines models in production reliably and efficiently using MLOps.
Problem: 

One difficulty of employing Machine Learning (ML) within organizations is managing the model's lifecycle. Moving from experimenting to deployment in production environments is operated by different steps: Preparing and Analysing Data, Training, Deployment, Monitoring, and Governance of ML models. So, it is crucial to possess a platform to manage and organize the ML lifecycle.

Solution: 

In Vedrai, we combined the strength of the MLflow framework and the resilience of AWS serverless services to manage, deploy, and scale our ML models in production. MLflow is an open-source framework for tracking the entire ML lifecycle from training to deployment. Among the functions, it offers model tracking, packaging, and serving. Whereas, deploying ML applications is an infrastructure affair that needs to be scalable with minimum server management, which makes AWS serverless services a great choice.

Value: 

MLflow enforces the model's reproducibility and robustness at the same time allowing more centralized experimentation. AWS serverless services allow training and inferencing pipelines to run without provisioning or managing servers while only paying for the time it takes to run.

Summary:

  - State of the art of MLOps.
  - Record and query experiments with MLflow Tracking.
  - Package data science code with MLflow Projects.
  - Store ML models with MLflow Models Registry.
  - Deploy ML models in the AWS environment.
  - Future MLOps challenges.


Speaker: ilyas chaoua",https://i.ytimg.com/vi/8AkqF99tkXg/maxresdefault.jpg,0,False,False,public,https://www.youtube.com/watch?v=8AkqF99tkXg,https://www.youtube.com/watch?v=8AkqF99tkXg
82,Testing ML Systems: More than just accuracy - Carlos Kidman,https://www.youtube.com/watch?v=CU0C4MtrQMU,CU0C4MtrQMU,Python Italia,@PythonItalia,https://www.youtube.com/@PythonItalia,20220723,1767,854,22,1.0,"machine-learning,testing",Entertainment,"Testing ML Systems: More than just accuracy - PyCon Italia 2022

Zillow lost millions because they didn't have proper MLOps or testing processes. They relied on the training metrics, like accuracy, but Software Quality goes beyond that. I will cover different testing types, techniques, and concepts that you can apply to make high-quality ML Systems.
As ML/AI systems are becoming more prevalent, the need for setting quality standards and testing practices has become crucial. Testing these models goes beyond validation metrics like accuracy, precision, and recall.

Instead, quality attributes like model Behaviors, Usability, and Fairness need to be tested and measured using exploratory and automated strategies.

In this talk, we'll cover some of the risks and biases that can happen throughout the MLOps pipeline, demonstrate a few techniques to test a model's behaviors and fairness, and apply them against some real-world scenarios and state-of-the-art models.

By the end, you will have new ideas and techniques that you can use to test your own ML/AI systems and approach these quality attributes from a customer's perspective.


Speaker: Carlos Kidman",https://i.ytimg.com/vi/CU0C4MtrQMU/maxresdefault.jpg,0,False,False,public,https://www.youtube.com/watch?v=CU0C4MtrQMU,https://www.youtube.com/watch?v=CU0C4MtrQMU
83,Creare API REST su Odoo con OCA REST Framework - Andrea Colangelo,https://www.youtube.com/watch?v=t7LZCMF3fYM,t7LZCMF3fYM,Python Italia,@PythonItalia,https://www.youtube.com/@PythonItalia,20220723,1950,695,7,1.0,"apis,architecture,cpython,development,odoo,open-source,rest",Entertainment,"Creare API REST su Odoo con OCA REST Framework - PyCon Italia 2022

La disponibilità di API è spesso un requisito fondamentale per l'integrazione di Odoo con terze parti. Tuttavia la mancanza di una piattaforma REST nativa su Odoo è un ostacolo, a cui è tuttavia semplice porre rimedio in maniera sistematica e organizzata con il framework messo a disposizione da OCA
Odoo fornisce di default un'interfaccia RPC per le integrazioni di terze parti, ma non un set di API REST. Per ovviare a questa mancanza, OCA, la comunità open-source di Odoo, ha sviluppato un insieme di moduli che aggiungono un framework molto solido e robusto per la realizzazione di API REST, con una integrazione nativa di Swagger, un sistema di validazione dei dati in ingresso e in uscita, e meccanismi di versionamento delle API stesse. In questo talk vedremo come utilizzare questo framework per realizzare API REST su Odoo.


Speaker: Andrea Colangelo",https://i.ytimg.com/vi/t7LZCMF3fYM/maxresdefault.jpg,0,False,False,public,https://www.youtube.com/watch?v=t7LZCMF3fYM,https://www.youtube.com/watch?v=t7LZCMF3fYM
84,Python 3.10: let's pattern match! 🔥 - Laysa Uchoa,https://www.youtube.com/watch?v=aEiF_T2mtiY,aEiF_T2mtiY,Python Italia,@PythonItalia,https://www.youtube.com/@PythonItalia,20220723,1288,114,0,,"apis,bestpractice,development",Entertainment,"Python 3.10: let's pattern match! 🔥 - PyCon Italia 2022

Python 3.10 is out there and with this comes Pattern Matching. With this talk, you will be surprised how simple, yet powerful, Pattern Matching really is. 

This talk and you, it is a match! 🔥
Python 3.10 is out there now. This was a two-digit minor version change since the last release, and with this release new ways of thinking about programming were brought to the Python language - Pattern Matching. 

We will understand what was there before Python Pattern Matching and how to use Pattern Matching in different scenarios. We will pattern match from simple data types to more complex ones, such as dictionaries and objects. We will also understand how to use guards, and how can build composable patterns.

By the end of this talk, you will be surprised how simple, yet powerful, Pattern Matching really is. This talk and you, it is a match!


Speaker: Laysa Uchoa",https://i.ytimg.com/vi/aEiF_T2mtiY/maxresdefault.jpg,0,False,False,public,https://www.youtube.com/watch?v=aEiF_T2mtiY,https://www.youtube.com/watch?v=aEiF_T2mtiY
85,Boost your motivation by organizing your workspace with plants - Avila,https://www.youtube.com/watch?v=t1hNmTt7tgM,t1hNmTt7tgM,Python Italia,@PythonItalia,https://www.youtube.com/@PythonItalia,20220723,1907,56,3,,,Entertainment,"Trasforma il tuo home office con le piante e scatena la tua creatività - PyCon Italia 2022

Learn how to decorate your home office with plants and transform it into your own “urban jungle.” Create a healthy and inspiring workplace using houseplants.

Get an overview of:

    Interior styling with houseplants and find your unique style.
    The foundations on how to keep plants alive and simple decor rules to organize your home office.
    How to select and combine the right plants for your space

This talk is for those who want to bring plants into their lives and transform their home space into a fresh, inspiring green oasis.

Speaker: Avila",https://i.ytimg.com/vi/t1hNmTt7tgM/maxresdefault.jpg,0,False,False,public,https://www.youtube.com/watch?v=t1hNmTt7tgM,https://www.youtube.com/watch?v=t1hNmTt7tgM
86,Addestramento d'emergenza alla fase di Discovery per sviluppatori frustrati - Gabriele Giaccari,https://www.youtube.com/watch?v=rnqnxNzzJPM,rnqnxNzzJPM,Python Italia,@PythonItalia,https://www.youtube.com/@PythonItalia,20220723,1939,67,5,,"agile,bestpractice,communication",Entertainment,"Addestramento d'emergenza alla fase di Discovery per sviluppatori frustrati - PyCon Italia 2022

Quante notti avete passato a produrre codice ‘importantissimo’ poi mai andato in produzione? E la vostra idea di app del secolo che non ha mai portato a nulla? Quanti soldi buttati per produrre software mai utilizzato? Troppi. Ma non deve andare per forza così,e la chiave è in una parola: Discovery!
Come programmatori, tutti noi abbiamo provato la frustrazione di lavorare col massimo dell’impegno su software che poi nella migliore delle ipotesi non hanno prodotto i risultati sperati, e nella peggiore non sono neanche mai andati in produzione. Giorni (e quindi soldi) buttati a realizzare cose che non andavano fatte, a sviluppare “requisiti” imposti dall’alto senza capirne il contesto. Usarci come ingranaggi in una fabbrica di funzionalità, invece che come specialisti di team che puntino a risolvere dei problemi ed avere un impatto reale sul mondo, è uno spreco senza precedenti.
Scrivere codice nel modo corretto, fare i test, impostare pipeline di Continuous Integration è solo una parte del nostro lavoro, ma se quel codice in primis non andava neanche scritto, sarà tutto inutile. Da parecchi anni ormai sono nate metodologie e strumenti che aiutano a risolvere questo problema, dal Design Thinking al Lean Startup, l’Impact Mapping o l’Opportunity Solution Tree. Non è una roba solo da Designer o Product Manager, gli sviluppatori devono essere i protagonisti di questo processo cosiddetto di Discovery anche se spesso se ne tengono alla larga. Questo addestramento è diviso in 3 mini lezioni di 10 minuti, per definire il contesto, la teoria e la pratica di questa fase, con l’obiettivo di dare gli strumenti e qualche spunto per iniziare questa piccola rivoluzione, a livello personale e di team.

Speaker: Gabriele Giaccari",https://i.ytimg.com/vi/rnqnxNzzJPM/maxresdefault.jpg,0,False,False,public,https://www.youtube.com/watch?v=rnqnxNzzJPM,https://www.youtube.com/watch?v=rnqnxNzzJPM
87,It's Your Call(able): a tour of Python's callable (function) interface - Weldon,https://www.youtube.com/watch?v=CgUN4HZ0iHI,CgUN4HZ0iHI,Python Italia,@PythonItalia,https://www.youtube.com/@PythonItalia,20220723,1579,175,3,,"cleancode,type-hinting",Entertainment,"It's Your Call(able): a tour of Python's callable (function) interface - PyCon Italia 2022

A deep dive into python functions and the callable interface surrounding them. We take a tour into everything that happens on on a ""def"" line in Python, and explore how to make the most of all the rich metadata provided about functions, before going into detail hacking the Python decorator pattern.
Functions are fundamental to python, and are amongst the first features of python that most users learn. We call a function with arguments, and it returns a value. However, there is more to this callable interface than meets the eye, and there are lots of useful and powerful things we can do with the callable interface. You may have come across many of these already: (anonymous) lambda functions, the __call__ magic method, the decorator pattern, the __doc__ property, and modules like functools and inspect which provide detailed about functions and allow us to alter functions at runtime. The now-retired Python 3.6 release added typing annotations to this mix, and opened up a new world of metadata to use alongside your callables.

Lots of libraries, particularly web frameworks like Flask, Django, and FastAPI, and testing toolkits like pytest, use this callable interface to implement their API. As developers, understanding these advanced features of python's callable interface is particularly useful when writing generic, automation focused code, and understanding how such prominent libraries work.

This talk gives a deep-dive into python functions, and the associated callable interface. We'll start with a quick tour of the basics, before covering python's more advanced callable features, and exploring some examples about how, why, and when you may wish to use these features yourself.


Speaker: Weldon",https://i.ytimg.com/vi/CgUN4HZ0iHI/maxresdefault.jpg,0,False,False,public,https://www.youtube.com/watch?v=CgUN4HZ0iHI,https://www.youtube.com/watch?v=CgUN4HZ0iHI
88,Come sfruttare le session auth di Django per un progetto multi tenant - Matteo Vitali,https://www.youtube.com/watch?v=DjHa6wU3bZs,DjHa6wU3bZs,Python Italia,@PythonItalia,https://www.youtube.com/@PythonItalia,20220723,1515,250,4,,"apis,authentication,django,rest",Entertainment,"Come sfruttare le potenzialità della session auth di Django in un progetto multi tenant - PyCon Italia 2022

Descriverò l'approccio e il metodo di implementazione di un'app multi tenant in Django, nella quale viene sfruttata la session auth di Django per recuperare il tenant che domina ogni risorsa richiesta dietro autenticazione. Una soluzione a cui la letteratura sul tema non fa solitamente riferimento.
La ""letteratura"" sull'argomento multi tenant è abbastanza varia a approfondita e come del resto lo sono anche i metodi e gli approcci alla gestione a tenant multipli. In questo talk verrà descritto, attraverso alcuni esempi, il metodo adottato per la gestione di un'app backend in Django, con gestione di tenant multipli e interfacciabile, dietro autenticazione, tramite chiamate API RESTful. Adottando la session authentication di Django, verrà mostrato come sia possibile renderla depositaria del tenant che domina tutte le risorse richieste, per poter filtrarle dinamicamente sulla base dei dati depositati nella sessione di autenticazione di un utente.




Speaker: Matteo Vitali",https://i.ytimg.com/vi/DjHa6wU3bZs/maxresdefault.jpg,0,False,False,public,https://www.youtube.com/watch?v=DjHa6wU3bZs,https://www.youtube.com/watch?v=DjHa6wU3bZs
89,Using GitHub Actions and Python to keep your blogs updated - Andrea Grillo,https://www.youtube.com/watch?v=vCe7rx9SRFc,vCe7rx9SRFc,Python Italia,@PythonItalia,https://www.youtube.com/@PythonItalia,20220722,1700,69,1,,"deployment/continuousintegration,devops,open-source",Entertainment,"Using GitHub Actions and Python to keep your blogs updated - PyCon Italia 2022

Se hai un blog su GitHub Pages ma vuoi avere maggiore visibilità, non devi più copiare manualmente gli stessi contenuti sulle altre piattaforme. Grazie a Github Actions puoi sviluppare il tuo operatore Python che monitora la tua repository ed aggiorna tutte le tue piattaforme di blog in automatico.
GitHub Actions è il potente strumento introdotto da GitHub per automatizzare le operazioni che riguardano una repository GitHub. Ogni volta che un evento viene generato dalla nostra repository (una commit, un issue, …), GitHub Actions fa partire in automatico una sequenza di operazioni definite dall’utente. Queste operazioni (dette “Actions”) possono essere condivise dalla community o sviluppate personalmente, anche in Python! In questo talk voglio mostrare come costruire la propria GitHub Action in Python per condividere automaticamente i post di un blog su GitHub Pages su altre piattaforme, come Medium.




Speaker: Andrea Grillo",https://i.ytimg.com/vi/vCe7rx9SRFc/maxresdefault.jpg,0,False,False,public,https://www.youtube.com/watch?v=vCe7rx9SRFc,https://www.youtube.com/watch?v=vCe7rx9SRFc
90,Generazione file PDF per affinamento dell'Object detection - Lorenzo Pisaneschi,https://www.youtube.com/watch?v=Zy8Co-u65Qo,Zy8Co-u65Qo,Python Italia,@PythonItalia,https://www.youtube.com/@PythonItalia,20220722,1890,52,1,,"bigdata,deeplearning,machine-learning,predictions",Entertainment,"Generazione di file PDF con Transformers per affinamento dell'object detection in documenti testuali - PyCon Italia 2022

De-costruire un file PDF è un task di sempre maggior interesse; questo talk mostrerà come sfruttare l’informazione non strutturata dei dati per la generazione di PDF sintetici da utilizzare in sistemi di apprendimento più controllabili, con l’uso di Transformers ed NLP su dataset ristretti di PDF.
Il Portable Document Format (meglio noto come PDF) è il formato di file più utilizzato al mondo. All'interno di un file PDF possiamo trovare un'ampia gamma di elementi diversi, non solo semplice testo: elementi grafici come immagini ed algoritmi, tabelle, didascalie, addirittura oggetti interattivi o firme digitali. La decostruzione di un file PDF è dunque un task difficile, per l'alto livello di eterogeneità dei dati e perché il formato stesso non è stato pensato per fornire in modo strutturato la disposizione delle diverse entità che costituiscono le pagine dei documenti. Tuttavia, questo tipo di analisi sta attirando sempre più l'interesse di ricercatori e aziende, perché le informazioni sul layout e i contenuti dei file di testo possono essere utilizzate per aumentare i dataset esistenti per ottenere miglioramenti qualitativi nell'espletamento delle comuni operazioni di data mining, sfruttando le tecniche di deep learning più innovative.

Questo talk, descrive un sistema che, partendo da un insieme ristretto di file PDF, è in grado di generarne un numero arbitrariamente grande per costituire un dataset di immagini da utilizzare per addestrare reti neurali a svolgere le classiche operazioni di object detection e recognition; per fare questo, sarà mostrata una pipeline capace di annotare automaticamente il contenuto di un PDF; dopodiché, sarà spiegato come utilizzare le annotazioni precedentemente ottenute come input di una architettura a Transformers per generare layout artificiali di documenti; infine, si passerà all'effettiva sintesi dei PDF: verrà indicato come popolare le parti testuali dei layout generati grazie a tecniche di NLP (Natural Language Processing), come popolare immagini, tabelle e formule e, infine,  come utilizzare il dataset sintetico così ottenuto.


Speaker: Lorenzo Pisaneschi",https://i.ytimg.com/vi/Zy8Co-u65Qo/maxresdefault.jpg,0,False,False,public,https://www.youtube.com/watch?v=Zy8Co-u65Qo,https://www.youtube.com/watch?v=Zy8Co-u65Qo
91,Building data pipelines with Apache Airflow - Ricardo Sueiras,https://www.youtube.com/watch?v=FtwMEaALSQ8,FtwMEaALSQ8,Python Italia,@PythonItalia,https://www.youtube.com/@PythonItalia,20220722,1884,204,2,1.0,"aws,bigdata,open-source",Entertainment,"Building data pipelines with Apache Airflow - PyCon Italia 2022

Apache Airflow is a popular orchestration tool that uses Python to author workflows,  but what is it, what are the architectural components, why do I need this, and how do you get started? If you care about reliably getting your data from source to your big data platforms, this is the talk for you.
Moving, refining and enriching data in order to get actionable insights is hard. Apache Airflow, an open source project that makes it easy for data engineers to create repeatable and reliable workflows in Python. This session will be a hands on getting started looking at creating your first workflows and understanding how you can use the features of Apache Airflow to orchestrate your own data pipelines.

Slides: 


Speaker: Ricardo Sueiras",https://i.ytimg.com/vi/FtwMEaALSQ8/maxresdefault.jpg,0,False,False,public,https://www.youtube.com/watch?v=FtwMEaALSQ8,https://www.youtube.com/watch?v=FtwMEaALSQ8
92,Autenticazione e autorizzazione in salsa microservice - Gianluca Carucci,https://www.youtube.com/watch?v=MByQRYA7iyU,MByQRYA7iyU,Python Italia,@PythonItalia,https://www.youtube.com/@PythonItalia,20220722,1923,125,3,,"apis,architecture,authentication,distributedsystems,microservices",Entertainment,"Autenticazione e autorizzazione in salsa microservice - PyCon Italia 2022

Se partiamo da un monolite è tutto facile: verifichiamo le credenziali sul database (e/o utilizziamo oauth) e il gioco è fatto.
Ma cosa succede in un mondo distribuito?
Chi verifica le credenziali? Come ogni servizio identifica in modo sicuro l’utente e gli assegna i giusti ruoli?
Se partiamo da un monolite è tutto facile: verifichiamo le credenziali sul database (e/o utilizziamo oauth) e il gioco è fatto.
I monoliti sono semplici e utili in tantissimi casi, ma non sempre.
A volte abbiamo bisogno di una architettura a microservizi, magari con linguaggi e stack tecnologici differenti.
Chi verifica le credenziali? Come ogni servizio è in grado di identificare in modo sicuro l’utente e assegnargli i giusti ruoli per poter esaudire le richieste?
Queste sono alcune domande che un sistema distribuito ci impone di valutare.
In questo talk analizzeremo tramite demo e un caso reale e complesso, i diversi modi e le tecniche per gestire l’autorizzazione e l’autenticazione in un mondo a microservizi, illustrando pregi e difetti di ogni soluzione.
slides: 


Speaker: Gianluca Carucci",https://i.ytimg.com/vi/MByQRYA7iyU/maxresdefault.jpg,0,False,False,public,https://www.youtube.com/watch?v=MByQRYA7iyU,https://www.youtube.com/watch?v=MByQRYA7iyU
93,Modern Data Engineering with Python - Andrea Guzzo,https://www.youtube.com/watch?v=p0IpE3vpgkw,p0IpE3vpgkw,Python Italia,@PythonItalia,https://www.youtube.com/@PythonItalia,20220722,1825,381,7,1.0,,Entertainment,"Modern Data Engineering with Python - PyCon Italia 2022



Speaker: Andrea Guzzo",https://i.ytimg.com/vi/p0IpE3vpgkw/maxresdefault.jpg,0,False,False,public,https://www.youtube.com/watch?v=p0IpE3vpgkw,https://www.youtube.com/watch?v=p0IpE3vpgkw
94,Four years of Python - Duarte Carmo,https://www.youtube.com/watch?v=zB_Hr-05Stc,zB_Hr-05Stc,Python Italia,@PythonItalia,https://www.youtube.com/@PythonItalia,20220722,1209,661,12,,"architecture,bestpractice,cleancode,education,machine-learning,testing",Entertainment,"Four years of Python - PyCon Italia 2022

Inspired by my post Four Years of Python  where I talk through some valuable lessons for intermediate/beginner programmers to have in mind when scaling up their career in Python development. I mention topics such as testing, keeping things simple, and educating yourself.
The other day I realized: I've been programming in Python for about 4 years now. I do get paid to write code, but for some reason still don't consider myself a pro. I did learn some valuable lessons however. For those who just got started with Python, you'll hopefully take something out of these lessons. For the experienced, see this as a celebration of our beloved language. 

Some of the topics I'll cover are:
- Reading is better then googling
- Keep things stupid simple
- First make it work, then make it pretty 
- Test early 
- Learn continuously 

I'll share some learnings, principles, and resources that I've learned through the years.


Slides: 


Speaker: Duarte Carmo",https://i.ytimg.com/vi/zB_Hr-05Stc/maxresdefault.jpg,0,False,False,public,https://www.youtube.com/watch?v=zB_Hr-05Stc,https://www.youtube.com/watch?v=zB_Hr-05Stc
95,Vulture eats some Python - Rahul Jha,https://www.youtube.com/watch?v=NraLRnN_cmA,NraLRnN_cmA,Python Italia,@PythonItalia,https://www.youtube.com/@PythonItalia,20220722,1671,205,8,,"bestpractice,cleancode,codeanalysis,staticanalysis,tooling",Entertainment,"Vulture eats some Python - PyCon Italia 2022

Maintaining a high level of code quality is important for any serious project. One aspect of this is ensuring that all code is actually used. Finding and removing dead code allows to keep the code base clean and reduces bugs. This is a practical guide on using and configuring Vulture to do so.
This talk is focused on how we can use Vulture to find dead code. There are many reasons for dead code ending up in a project. The most common is refactoring, but another is misspellings, which are only detected at runtime for dynamic languages. Vulture helps you find unused code in Python programs, and it is useful for cleaning up and finding errors in large codebases. If you run Vulture on both your library and test suite, you can find untested code.

Due to Python's dynamic nature, static code analyzers like Vulture are likely to miss some dead code. Also, code that is only called implicitly (e.g., using getattr) may be reported as unused. Nonetheless, Vulture can be a very helpful tool for higher code quality.

The second part of this talk investigates ways to improve Vulture's reporting such that the results are actionable and optimized for a low number of false positives. It also discusses how to automate testing for dead code with Vulture – there are quite a few options available:
1. Add a step in your continuous integration testing.
2. As a pre-commit hook.
3. Run a script using Vulture API for more fine-grained control.

The third and last part of this talk discusses a brief overview of the internal workings of the tool, along with the scope of future improvements. After all, the motive of this talk is not only to encourage developers to prioritize code hygiene but also to inspire them to come up with ideas to _enable_ it.


Speaker: Rahul Jha",https://i.ytimg.com/vi/NraLRnN_cmA/maxresdefault.jpg,0,False,False,public,https://www.youtube.com/watch?v=NraLRnN_cmA,https://www.youtube.com/watch?v=NraLRnN_cmA
96,Make the most of Django - Paolo Melchiorre,https://www.youtube.com/watch?v=JY9SL_TbIxc,JY9SL_TbIxc,Python Italia,@PythonItalia,https://www.youtube.com/@PythonItalia,20220722,1646,88,4,,"bestpractice,community,django",Entertainment,"Make the most of Django - PyCon Italia 2022

Taking full advantage of **Open Source** software means getting involved in its **community** and **contributing** to its development. We will see how this is profoundly true in the **Django** case as well.
**Django** is one of the longest running **open source** web frameworks but despite this it is still one of the best around and continues to be actively developed.

Approaching such **software** can be intimidating to a novice developer as well as an experienced one because it is the result of over **15 years** of excellent **developers** work and it would take a long time to get to know it thoroughly.

In this talk we will see together the way I found for anyone to take full **advantage** of Django while **contributing** to its success and that of its **community**.

### More info

**Slide** and more **information** on the talk on [


Speaker: Paolo Melchiorre",https://i.ytimg.com/vi/JY9SL_TbIxc/maxresdefault.jpg,0,False,False,public,https://www.youtube.com/watch?v=JY9SL_TbIxc,https://www.youtube.com/watch?v=JY9SL_TbIxc
97,Who killed Laura Palmer? How to implement a question answering system - Stefano Fiorucci,https://www.youtube.com/watch?v=V-c-qmDEJVg,V-c-qmDEJVg,Python Italia,@PythonItalia,https://www.youtube.com/@PythonItalia,20220722,1631,146,4,,"machine-learning,naturallanguageprocessing,open-source",Entertainment,"Who killed Laura Palmer? How to implement a question answering system, based on a TV series wiki - PyCon Italia 2022

Have you always dreamed of providing knowledge to a computer so that it can answer your questions?
It is finally possible and easy to do this, using python and the Haystack library.
I'll explain how to quickly implement a Question Answering system, starting from docs about your favorite TV series.
Web app: 

Repository: 

Slides: 

Have you always dreamed of providing knowledge to a computer so that it can answer your questions?
In this talk, I'm going to present the open source Haystack library: an end-to-end python framework that enables you to build powerful and production-ready pipelines for different search use cases, shuch as Question Answering and semantic document search. Haystack is modular, so that you can combine the best technology from Transformers, Elasticsearch, or Milvus.
I present a simple and funny use case, where I quickly and easyly build a Question Answering system, starting from a collection of documents about Twin Peaks TV series.
I also provide some theoretical details to make everyone understand how this technology works and I briefly talk about the trade-offs between response quality, response speed and computational effort.


Speaker: Stefano Fiorucci",https://i.ytimg.com/vi/V-c-qmDEJVg/maxresdefault.jpg,0,False,False,public,https://www.youtube.com/watch?v=V-c-qmDEJVg,https://www.youtube.com/watch?v=V-c-qmDEJVg
98,Pro tips for writing great unit tests - Raymond Hettinger,https://www.youtube.com/watch?v=jSIsyMd2-RY,jSIsyMd2-RY,Python Italia,@PythonItalia,https://www.youtube.com/@PythonItalia,20220724,3641,16956,443,25.0,,Entertainment,"Pro tips for writing great unit tests - PyCon Italia 2022

There is an art to condensing test concepts into readable, fast, clear predicates.

- We look at many examples and show how they can be improve
- Master the use of any() and all() with generator expressions.
- Expression set() relations to express big ideas clearly.
- Cover the problem space with combinatoric iterators: product(), combinations(), permutations()
- Use subtests for clear error reporting
- Factor-out data acquisition and parsing from the test predicates.
- Learn patterns for testing edge cases.
- Cover class based technique for test reuse.
- Make effective use of setup and teardown.
- We look at many examples and show how they can be improved
- Treating TDD test cases and bug test cases with special reverence.

Speaker: Raymond Hettinger",https://i.ytimg.com/vi/jSIsyMd2-RY/maxresdefault.jpg,0,False,False,public,https://www.youtube.com/watch?v=jSIsyMd2-RY,https://www.youtube.com/watch?v=jSIsyMd2-RY
99,Exploring Patterns to Debug your Life - PyCon Italia 2022,https://www.youtube.com/watch?v=WurWiSPTwuI,WurWiSPTwuI,Python Italia,@PythonItalia,https://www.youtube.com/@PythonItalia,20220724,1878,454,6,,"communication,community,teaching",Entertainment,"Exploring Patterns to Debug your Life - PyCon Italia 2022

Just as in code, in our daily life we have patterns that can be returning patterns.
Can  we debug our life, via debugging skills we learned in coding? Come to experience this talk to learn how to debug your life!
In daily life we have patterns and even returning patterns, at least if you take time to recognize some parts happening in your life. This can be in your career, customer relations, and even in personal and family relations. Nice patterns lead to success and inspiration. Bad pattens leads to bore-out, burn-out or even worse...
In this talk Dennie and special guest speaker Miriam – a well-known Belgian speaker and experience expert in Autism – will take you on a journey where they explain life patterns via metaphors in the tech/ developer world. 
You will learn how to recognize life patterns exactly as in code, engineering, and business patterns. When you recognize the patterns it’s finally time to learn to debug those patterns!
 Just as you debug code patterns with changing the source code, you learn to debug life patterns via changing lifestyle, and in specific thoughts. As you see, those are just the same.
Slides: 


Speakers: Miriam Perrone, Dennie Declercq",https://i.ytimg.com/vi/WurWiSPTwuI/maxresdefault.jpg,0,False,False,public,https://www.youtube.com/watch?v=WurWiSPTwuI,https://www.youtube.com/watch?v=WurWiSPTwuI
100,Debugging asynchronous programs in Python - Andrii Soldatenko,https://www.youtube.com/watch?v=YwazLVJbHuk,YwazLVJbHuk,Python Italia,@PythonItalia,https://www.youtube.com/@PythonItalia,20220724,2022,2112,28,,"asyncio,cpython,debugging",Entertainment,"Debugging asynchronous programs in Python - PyCon Italia 2022

Recently the interest in asynchronous programming has grown dramatically.
 Unfortunately, asynchronous programs do not always have reproducible behavior. Even when they are run with the same inputs, their results can be radically different.
In this talk I'll show you different approaches on how to debug asynchronous programs in Python. 
Luckily, when it comes to debugging asynchronous applications in python, we have a couple of options to consider. The writers of the asyncio module have very kindly provided a debug mode, which is quite powerful and can really aid us in our debugging adventures without the overhead of modifying the system's code base too dramatically. In particular I'll show you what asyncio debug mode means for developers, and how to source tracebacks for unhandled exceptions in futures. Also how to detect accidental blocking for I/O. We discuss how to monitor the asyncio event loop and collect metrics in statsD.
Finally we discuss monitor and cli capabilities for asyncio applications based on aiomonitor and aioconsole. Also we discuss how asynchronous python works in REPL via autoawait based on ipython and how to do it in vanilla python REPL.


Speaker: Andrii Soldatenko",https://i.ytimg.com/vi/YwazLVJbHuk/maxresdefault.jpg,0,False,False,public,https://www.youtube.com/watch?v=YwazLVJbHuk,https://www.youtube.com/watch?v=YwazLVJbHuk
101,Stupid Things I've Done With Python - Mark Smith,https://www.youtube.com/watch?v=7tdcBGUtOY8,7tdcBGUtOY8,Python Italia,@PythonItalia,https://www.youtube.com/@PythonItalia,20220724,1687,1924,40,4.0,"abstractions,bestpractice,teaching",Entertainment,"Stupid Things I've Done With Python - PyCon Italia 2022

On every computer I've had for the past 20 years, I've created a folder called ""stupid python tricks"".
It's where I put code that should never see the light of day.
Code that abuses features like decorators, metaclasses, and dynamic typing to do terrible things.

Code I'm going to teach you.
I have a GitHub repository that contains a compilation of all the awful code I've written over the years, abusing features like metaclasses, decorators, various __dunder__ methods, and the mutable nature of Python's underlying data structures.

It's a funny way to see how Python works under the hood, but it's also educational.

Really!

Each of the tricks is entertainingly terrible. But they're also mostly self-contained ways to see what happens when you override certain behaviours of the Python language.
Anyone with an intermediate level of Python understanding should be able to follow along and learn something.

I will cover:

* Replacing an imported module with a class, so attribute lookups can be @properties, with _hilarious_ results.
* Overriding the `__sub__` magic method to create a hyphenated, fuzzy-matching version of a boolean.
* Using `__getattr__` to save time implementing all the functions in the `math` module.
* Using `__eq__` to make things that aren't really the same look the same.

This talk is an entertaining tour of the Python Data Model, and the things you can do - if you're so inclined.


Speaker: Mark Smith",https://i.ytimg.com/vi/7tdcBGUtOY8/maxresdefault.jpg,0,False,False,public,https://www.youtube.com/watch?v=7tdcBGUtOY8,https://www.youtube.com/watch?v=7tdcBGUtOY8
102,Why is our project late? - Marco Santoni,https://www.youtube.com/watch?v=zcDQwIQQwR4,zcDQwIQQwR4,Python Italia,@PythonItalia,https://www.youtube.com/@PythonItalia,20220724,1625,270,3,,"agile,bestpractice,development",Entertainment,"Why is our project late? - PyCon Italia 2022

Why is it so hard to respect deadlines for a dev team? Is it just a wrong planning methodology? Are there fundamental limits in the way our brain makes plans? Has it always been like this?

We'll investigate the way humans perceive plans and unexpected events. Do we have biases in estimates?
Why is it so hard to respect deadlines for a dev team? Is it just a wrong planning methodology? Are there fundamental limits in the way our brain makes plans? Has it always been like this?

We'll investigate the way humans perceive plans and unexpected events. We'll find out that we have biases in the way we make plans and predictions. Problems are not limited to the planning phase though. When the first issues occur during the project, we tend to take decisions like increasing the team or taking shortcut that might not have the desired outcome.


Speaker: Marco Santoni",https://i.ytimg.com/vi/zcDQwIQQwR4/maxresdefault.jpg,0,False,False,public,https://www.youtube.com/watch?v=zcDQwIQQwR4,https://www.youtube.com/watch?v=zcDQwIQQwR4
103,"Python, Data Science and the Community: The Past, Present and Future - Fabio Pliger",https://www.youtube.com/watch?v=O-KCbB26GQ4,O-KCbB26GQ4,Python Italia,@PythonItalia,https://www.youtube.com/@PythonItalia,20220724,3617,224,3,,,Entertainment,"Python, Data Science and the Community: The Past, Present and Future - PyCon Italia 2022

We’ll talk about some of the history of Python, Data Science and our community, the current state of affairs, and what is waiting for us in the future. And yes(!), we’ll also be talking about and having fun with PyScript.

Speaker: Fabio Pliger",https://i.ytimg.com/vi/O-KCbB26GQ4/maxresdefault.jpg,0,False,False,public,https://www.youtube.com/watch?v=O-KCbB26GQ4,https://www.youtube.com/watch?v=O-KCbB26GQ4
104,Continuous Disclosure: la nuova divulgazione dell’apprendimento è continua - Raffaele Colace,https://www.youtube.com/watch?v=-E_HZ82c-z8,-E_HZ82c-z8,Python Italia,@PythonItalia,https://www.youtube.com/@PythonItalia,20220724,1756,123,2,,,Entertainment,"Continuous Disclosure: la nuova divulgazione dell’apprendimento è continua - PyCon Italia 2022



Speaker: Raffaele Colace",https://i.ytimg.com/vi/-E_HZ82c-z8/maxresdefault.jpg,0,False,False,public,https://www.youtube.com/watch?v=-E_HZ82c-z8,https://www.youtube.com/watch?v=-E_HZ82c-z8
105,La Continuous Delivery è una condizione mentale - Raffaele Colace,https://www.youtube.com/watch?v=CxWivBmSReo,CxWivBmSReo,Python Italia,@PythonItalia,https://www.youtube.com/@PythonItalia,20220724,1690,177,1,,"agile,bestpractice,casestudy,devops,django",Entertainment,"La Continuous Delivery è una condizione mentale - PyCon Italia 2022

In questo talk racconterò il mio percorso evolutivo da un approccio waterfall a quello iterativo passando per i tanti errori commessi. Mostrerò come abbiamo realizzato un template che aiuta nel processo di Continuous Delivery utilizzando Kubernetes, Docker, Python e Terraform.
Vedo la gente passare i venerdì a fare rilasci in produzione e passare il weekend a fare bug fixing. Vedo la gente stufa di fare sempre le stesse attività ripetitive e perseverare nella solita routine da developer frustrato. Ma tutto questo si può evitare con un cambio di mentalità. Quello che voglio raccontare in questo talk è il mio percorso evolutivo da un approccio waterfall a quello iterativo passando per i tanti errori commessi. 

Racconterò come abbiamo realizzato un template che aiuta nel processo di Continuous Delivery, dove la parola “continuous” è quella che definisce bene l’importanza di questo processo.
Nell’Agile Software Development, il rilascio del software funzionante è uno dei punti più importanti e questo deve avvenire spesso.
Per poter rilasciare nuove funzionalità però, dovremo scrivere tutti i test necessari, eseguirli, creare una build e infine effettuare il deploy vero e proprio.

Nello sviluppo del software moderno la Continuous Delivery (CD)  è quel processo che permette all'intero team di affrontare qualsiasi cambiamento, come nuove feature, bugfix o esperimenti, in un modo sostenibile, sicuro e rapido. In questo processo generalmente vengono utilizzate tra le altre cose, due pratiche per effettuare i rilasci continui: Continuous Integration (CI) e Continuous Deployment (CD). 

In questo talk racconterò come, insieme ai miei colleghi, siamo arrivati alla costruzione di un processo automatizzato per effettuare rilasci sin dal primo commit utilizzando Kubernetes, Docker, Python e Terraform per la creazione di applicazioni web basate su Django e React.

Slide: 


Speaker: Raffaele Colace",https://i.ytimg.com/vi/CxWivBmSReo/maxresdefault.jpg,0,False,False,public,https://www.youtube.com/watch?v=CxWivBmSReo,https://www.youtube.com/watch?v=CxWivBmSReo
106,Head First Machine Learning - Gianmarco Forcella,https://www.youtube.com/watch?v=Iz5AIqfA8Gs,Iz5AIqfA8Gs,Python Italia,@PythonItalia,https://www.youtube.com/@PythonItalia,20220724,1566,447,11,,machine-learning,Entertainment,"Head First Machine Learning - PyCon Italia 2022

Every wanted to learn Machine Learning, or at least understand the basics, but you don’t know where to start? Math scares you? Bad experiences with it during Calculus 1 or at the High School? No worries! In just 1hr, I’m gonna turn audience into ML rockstars!
Machine Learning is nowadays expanding. As more data becomes available (and power calculation), so are algorithms that can solve new challenges. But how does Machine Learning exactly work? And why mathematics shouldn’t be a stop? In this speech, I would like to give a brief introduction on the Machine Learning field and explain its concepts in the most easiest and “Head First” way. Digging in mathematical concepts will be, of course, necessary, but no prior depth knowledge of math will be required, as I will try to keep things as simple as possible.


Speaker: Gianmarco Forcella",https://i.ytimg.com/vi/Iz5AIqfA8Gs/maxresdefault.jpg,0,False,False,public,https://www.youtube.com/watch?v=Iz5AIqfA8Gs,https://www.youtube.com/watch?v=Iz5AIqfA8Gs
107,Goodbye and Conference Closing 👋 - PyCon Italia 2022,https://www.youtube.com/watch?v=TM2u7flSAhA,TM2u7flSAhA,Python Italia,@PythonItalia,https://www.youtube.com/@PythonItalia,20220724,987,76,0,,,Entertainment,Goodbye and Conference Closing 👋 - PyCon Italia 2022,https://i.ytimg.com/vi/TM2u7flSAhA/maxresdefault.jpg,0,False,False,public,https://www.youtube.com/watch?v=TM2u7flSAhA,https://www.youtube.com/watch?v=TM2u7flSAhA
108,Promo - PyCon Italia 2022,https://www.youtube.com/watch?v=WRgCmM6B_hY,WRgCmM6B_hY,Python Italia,@PythonItalia,https://www.youtube.com/@PythonItalia,20220802,48,279,16,,,Entertainment,"Thanks everyone for joining us at PyCon Italia 2022! 🙌 
We can't wait to see you all next year from May 25 to May 28 2023 again in Florence!

Follow our socials:

Website: https://pycon.it
Twitter: https://twitter.com/pyconit
Facebook: https://facebook.com/pythonitalia
Linkedin: https://www.linkedin.com/company/pycon-italia/",https://i.ytimg.com/vi/WRgCmM6B_hY/maxresdefault.jpg,0,False,False,public,https://www.youtube.com/watch?v=WRgCmM6B_hY,https://www.youtube.com/watch?v=WRgCmM6B_hY
109,Start your longest win streak in Dota2 with Scrapy - Viktor Zagranovskyy,https://www.youtube.com/watch?v=oqQ-RP0M0i0,oqQ-RP0M0i0,Python Italia,@PythonItalia,https://www.youtube.com/@PythonItalia,20231120,1725,158,1,,,Entertainment,"Let’s get what we need for success. The key element for an edge in competition is sometimes only the data and the speed how to get it. We will build a simple crawler that will allow to get the insight of the usage of character in the most competitive cyber sports 🏈 Dota2 (prize pool for the top tier championship in 2021 was 41 mln$). The lessons that we will learn from it will benefit to every aspect of your applied common tasks. We will be able to extract, process and read the output of the data. This alone will boost the buisiness toolbelt and familiarize the audience with the quite effective tools like data pipelines, data feeds, output item structure. This solution for scraping also contains the high scalability and configurability",https://i.ytimg.com/vi/oqQ-RP0M0i0/maxresdefault.jpg,0,False,False,public,https://www.youtube.com/watch?v=oqQ-RP0M0i0,https://www.youtube.com/watch?v=oqQ-RP0M0i0
